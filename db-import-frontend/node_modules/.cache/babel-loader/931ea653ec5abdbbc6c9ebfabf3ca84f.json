{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\nvar _jsMd = _interopRequireDefault(require(\"js-md4\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar NTLMResponsePayload = /*#__PURE__*/function () {\n  function NTLMResponsePayload(loginData) {\n    _classCallCheck(this, NTLMResponsePayload);\n    this.data = void 0;\n    this.data = this.createResponse(loginData);\n  }\n  _createClass(NTLMResponsePayload, [{\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + 'NTLM Auth';\n    }\n  }, {\n    key: \"createResponse\",\n    value: function createResponse(challenge) {\n      var client_nonce = this.createClientNonce();\n      var lmv2len = 24;\n      var ntlmv2len = 16;\n      var domain = challenge.domain;\n      var username = challenge.userName;\n      var password = challenge.password;\n      var ntlmData = challenge.ntlmpacket;\n      var server_data = ntlmData.target;\n      var server_nonce = ntlmData.nonce;\n      var bufferLength = 64 + domain.length * 2 + username.length * 2 + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n      var data = new _writableTrackingBuffer.default(bufferLength);\n      data.position = 0;\n      data.writeString(\"NTLMSSP\\0\", 'utf8');\n      data.writeUInt32LE(0x03);\n      var baseIdx = 64;\n      var dnIdx = baseIdx;\n      var unIdx = dnIdx + domain.length * 2;\n      var l2Idx = unIdx + username.length * 2;\n      var ntIdx = l2Idx + lmv2len;\n      data.writeUInt16LE(lmv2len);\n      data.writeUInt16LE(lmv2len);\n      data.writeUInt32LE(l2Idx);\n      data.writeUInt16LE(ntlmv2len);\n      data.writeUInt16LE(ntlmv2len);\n      data.writeUInt32LE(ntIdx);\n      data.writeUInt16LE(domain.length * 2);\n      data.writeUInt16LE(domain.length * 2);\n      data.writeUInt32LE(dnIdx);\n      data.writeUInt16LE(username.length * 2);\n      data.writeUInt16LE(username.length * 2);\n      data.writeUInt32LE(unIdx);\n      data.writeUInt16LE(0);\n      data.writeUInt16LE(0);\n      data.writeUInt32LE(baseIdx);\n      data.writeUInt16LE(0);\n      data.writeUInt16LE(0);\n      data.writeUInt32LE(baseIdx);\n      data.writeUInt16LE(0x8201);\n      data.writeUInt16LE(0x08);\n      data.writeString(domain, 'ucs2');\n      data.writeString(username, 'ucs2');\n      var lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n      data.copyFrom(lmv2Data);\n      var genTime = new Date().getTime();\n      var ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n      data.copyFrom(ntlmDataBuffer);\n      data.writeUInt32LE(0x0101);\n      data.writeUInt32LE(0x0000);\n      var timestamp = this.createTimestamp(genTime);\n      data.copyFrom(timestamp);\n      data.copyFrom(client_nonce);\n      data.writeUInt32LE(0x0000);\n      data.copyFrom(server_data);\n      data.writeUInt32LE(0x0000);\n      return data.data;\n    }\n  }, {\n    key: \"createClientNonce\",\n    value: function createClientNonce() {\n      var client_nonce = Buffer.alloc(8, 0);\n      var nidx = 0;\n      while (nidx < 8) {\n        client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n        nidx++;\n      }\n      return client_nonce;\n    }\n  }, {\n    key: \"ntlmv2Response\",\n    value: function ntlmv2Response(domain, user, password, serverNonce, targetInfo, clientNonce, mytime) {\n      var timestamp = this.createTimestamp(mytime);\n      var hash = this.ntv2Hash(domain, user, password);\n      var dataLength = 40 + targetInfo.length;\n      var data = Buffer.alloc(dataLength, 0);\n      serverNonce.copy(data, 0, 0, 8);\n      data.writeUInt32LE(0x101, 8);\n      data.writeUInt32LE(0x0, 12);\n      timestamp.copy(data, 16, 0, 8);\n      clientNonce.copy(data, 24, 0, 8);\n      data.writeUInt32LE(0x0, 32);\n      targetInfo.copy(data, 36, 0, targetInfo.length);\n      data.writeUInt32LE(0x0, 36 + targetInfo.length);\n      return this.hmacMD5(data, hash);\n    }\n  }, {\n    key: \"createTimestamp\",\n    value: function createTimestamp(time) {\n      var tenthsOfAMicrosecond = (BigInt(time) + BigInt(11644473600)) * BigInt(10000000);\n      var lo = Number(tenthsOfAMicrosecond & BigInt(0xffffffff));\n      var hi = Number(tenthsOfAMicrosecond >> BigInt(32) & BigInt(0xffffffff));\n      var result = Buffer.alloc(8);\n      result.writeUInt32LE(lo, 0);\n      result.writeUInt32LE(hi, 4);\n      return result;\n    }\n  }, {\n    key: \"lmv2Response\",\n    value: function lmv2Response(domain, user, password, serverNonce, clientNonce) {\n      var hash = this.ntv2Hash(domain, user, password);\n      var data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n      serverNonce.copy(data);\n      clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n      var newhash = this.hmacMD5(data, hash);\n      var response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n      newhash.copy(response);\n      clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n      return response;\n    }\n  }, {\n    key: \"ntv2Hash\",\n    value: function ntv2Hash(domain, user, password) {\n      var hash = this.ntHash(password);\n      var identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n      return this.hmacMD5(identity, hash);\n    }\n  }, {\n    key: \"ntHash\",\n    value: function ntHash(text) {\n      var unicodeString = Buffer.from(text, 'ucs2');\n      return Buffer.from(_jsMd.default.arrayBuffer(unicodeString));\n    }\n  }, {\n    key: \"hmacMD5\",\n    value: function hmacMD5(data, key) {\n      return crypto.createHmac('MD5', key).update(data).digest();\n    }\n  }]);\n  return NTLMResponsePayload;\n}();\nvar _default = NTLMResponsePayload;\nexports.default = _default;\nmodule.exports = NTLMResponsePayload;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","crypto","_interopRequireWildcard","_jsMd","NTLMResponsePayload","loginData","_classCallCheck","data","createResponse","_createClass","key","value","toString","indent","arguments","length","undefined","challenge","client_nonce","createClientNonce","lmv2len","ntlmv2len","domain","username","userName","password","ntlmData","ntlmpacket","server_data","target","server_nonce","nonce","bufferLength","default","position","writeString","writeUInt32LE","baseIdx","dnIdx","unIdx","l2Idx","ntIdx","writeUInt16LE","lmv2Data","lmv2Response","copyFrom","genTime","Date","getTime","ntlmDataBuffer","ntlmv2Response","timestamp","createTimestamp","Buffer","alloc","nidx","writeUInt8","Math","ceil","random","user","serverNonce","targetInfo","clientNonce","mytime","hash","ntv2Hash","dataLength","copy","hmacMD5","time","tenthsOfAMicrosecond","BigInt","lo","Number","hi","result","newhash","response","ntHash","identity","from","toUpperCase","text","unicodeString","arrayBuffer","createHmac","update","digest","module","exports"],"sources":["../src/ntlm-payload.ts"],"sourcesContent":["import WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\nimport * as crypto from 'crypto';\nimport md4 from 'js-md4';\n\ninterface Options {\n  domain: string;\n  userName: string;\n  password: string;\n  ntlmpacket: {\n    target: Buffer;\n    nonce: Buffer;\n  };\n}\n\nclass NTLMResponsePayload {\n  data: Buffer;\n\n  constructor(loginData: Options) {\n    this.data = this.createResponse(loginData);\n  }\n\n  toString(indent = '') {\n    return indent + 'NTLM Auth';\n  }\n\n  createResponse(challenge: Options) {\n    const client_nonce = this.createClientNonce();\n    const lmv2len = 24;\n    const ntlmv2len = 16;\n    const domain = challenge.domain;\n    const username = challenge.userName;\n    const password = challenge.password;\n    const ntlmData = challenge.ntlmpacket;\n    const server_data = ntlmData.target;\n    const server_nonce = ntlmData.nonce;\n    const bufferLength = 64 + (domain.length * 2) + (username.length * 2) + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n    const data = new WritableTrackingBuffer(bufferLength);\n    data.position = 0;\n    data.writeString('NTLMSSP\\u0000', 'utf8');\n    data.writeUInt32LE(0x03);\n    const baseIdx = 64;\n    const dnIdx = baseIdx;\n    const unIdx = dnIdx + domain.length * 2;\n    const l2Idx = unIdx + username.length * 2;\n    const ntIdx = l2Idx + lmv2len;\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt32LE(l2Idx);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt32LE(ntIdx);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt32LE(dnIdx);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt32LE(unIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0x8201);\n    data.writeUInt16LE(0x08);\n    data.writeString(domain, 'ucs2');\n    data.writeString(username, 'ucs2');\n    const lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n    data.copyFrom(lmv2Data);\n    const genTime = new Date().getTime();\n    const ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n    data.copyFrom(ntlmDataBuffer);\n    data.writeUInt32LE(0x0101);\n    data.writeUInt32LE(0x0000);\n    const timestamp = this.createTimestamp(genTime);\n    data.copyFrom(timestamp);\n    data.copyFrom(client_nonce);\n    data.writeUInt32LE(0x0000);\n    data.copyFrom(server_data);\n    data.writeUInt32LE(0x0000);\n    return data.data;\n  }\n\n  createClientNonce() {\n    const client_nonce = Buffer.alloc(8, 0);\n    let nidx = 0;\n    while (nidx < 8) {\n      client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n      nidx++;\n    }\n    return client_nonce;\n  }\n\n  ntlmv2Response(domain: string, user: string, password: string, serverNonce: Buffer, targetInfo: Buffer, clientNonce: Buffer, mytime: number) {\n    const timestamp = this.createTimestamp(mytime);\n    const hash = this.ntv2Hash(domain, user, password);\n    const dataLength = 40 + targetInfo.length;\n    const data = Buffer.alloc(dataLength, 0);\n    serverNonce.copy(data, 0, 0, 8);\n    data.writeUInt32LE(0x101, 8);\n    data.writeUInt32LE(0x0, 12);\n    timestamp.copy(data, 16, 0, 8);\n    clientNonce.copy(data, 24, 0, 8);\n    data.writeUInt32LE(0x0, 32);\n    targetInfo.copy(data, 36, 0, targetInfo.length);\n    data.writeUInt32LE(0x0, 36 + targetInfo.length);\n    return this.hmacMD5(data, hash);\n  }\n\n  createTimestamp(time: number) {\n    const tenthsOfAMicrosecond = (BigInt(time) + BigInt(11644473600)) * BigInt(10000000);\n\n    const lo = Number(tenthsOfAMicrosecond & BigInt(0xffffffff));\n    const hi = Number((tenthsOfAMicrosecond >> BigInt(32)) & BigInt(0xffffffff));\n\n    const result = Buffer.alloc(8);\n    result.writeUInt32LE(lo, 0);\n    result.writeUInt32LE(hi, 4);\n    return result;\n  }\n\n  lmv2Response(domain: string, user: string, password: string, serverNonce: Buffer, clientNonce: Buffer) {\n    const hash = this.ntv2Hash(domain, user, password);\n    const data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n\n    serverNonce.copy(data);\n    clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n\n    const newhash = this.hmacMD5(data, hash);\n    const response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n\n    newhash.copy(response);\n    clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n\n    return response;\n  }\n\n  ntv2Hash(domain: string, user: string, password: string) {\n    const hash = this.ntHash(password);\n    const identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n    return this.hmacMD5(identity, hash);\n  }\n\n  ntHash(text: string) {\n    const unicodeString = Buffer.from(text, 'ucs2');\n    return Buffer.from(md4.arrayBuffer(unicodeString));\n  }\n\n  hmacMD5(data: Buffer, key: Buffer) {\n    return crypto.createHmac('MD5', key).update(data).digest();\n  }\n}\n\nexport default NTLMResponsePayload;\nmodule.exports = NTLMResponsePayload;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}