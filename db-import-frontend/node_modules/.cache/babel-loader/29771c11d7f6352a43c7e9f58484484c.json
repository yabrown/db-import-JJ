{"ast":null,"code":"module.exports = BinaryReader;\nfunction BinaryReader(buffer, isBigEndian) {\n  this.buffer = buffer;\n  this.position = 0;\n  this.isBigEndian = isBigEndian || false;\n}\nfunction _read(readLE, readBE, size) {\n  return function () {\n    var value;\n    if (this.isBigEndian) value = readBE.call(this.buffer, this.position);else value = readLE.call(this.buffer, this.position);\n    this.position += size;\n    return value;\n  };\n}\nBinaryReader.prototype.readUInt8 = _read(Buffer.prototype.readUInt8, Buffer.prototype.readUInt8, 1);\nBinaryReader.prototype.readUInt16 = _read(Buffer.prototype.readUInt16LE, Buffer.prototype.readUInt16BE, 2);\nBinaryReader.prototype.readUInt32 = _read(Buffer.prototype.readUInt32LE, Buffer.prototype.readUInt32BE, 4);\nBinaryReader.prototype.readInt8 = _read(Buffer.prototype.readInt8, Buffer.prototype.readInt8, 1);\nBinaryReader.prototype.readInt16 = _read(Buffer.prototype.readInt16LE, Buffer.prototype.readInt16BE, 2);\nBinaryReader.prototype.readInt32 = _read(Buffer.prototype.readInt32LE, Buffer.prototype.readInt32BE, 4);\nBinaryReader.prototype.readFloat = _read(Buffer.prototype.readFloatLE, Buffer.prototype.readFloatBE, 4);\nBinaryReader.prototype.readDouble = _read(Buffer.prototype.readDoubleLE, Buffer.prototype.readDoubleBE, 8);\nBinaryReader.prototype.readVarInt = function () {\n  var nextByte,\n    result = 0,\n    bytesRead = 0;\n  do {\n    nextByte = this.buffer[this.position + bytesRead];\n    result += (nextByte & 0x7F) << 7 * bytesRead;\n    bytesRead++;\n  } while (nextByte >= 0x80);\n  this.position += bytesRead;\n  return result;\n};","map":{"version":3,"names":["module","exports","BinaryReader","buffer","isBigEndian","position","_read","readLE","readBE","size","value","call","prototype","readUInt8","Buffer","readUInt16","readUInt16LE","readUInt16BE","readUInt32","readUInt32LE","readUInt32BE","readInt8","readInt16","readInt16LE","readInt16BE","readInt32","readInt32LE","readInt32BE","readFloat","readFloatLE","readFloatBE","readDouble","readDoubleLE","readDoubleBE","readVarInt","nextByte","result","bytesRead"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/wkx/lib/binaryreader.js"],"sourcesContent":["module.exports = BinaryReader;\r\n\r\nfunction BinaryReader(buffer, isBigEndian) {\r\n    this.buffer = buffer;\r\n    this.position = 0;\r\n    this.isBigEndian = isBigEndian || false;\r\n}\r\n\r\nfunction _read(readLE, readBE, size) {\r\n    return function () {\r\n        var value;\r\n\r\n        if (this.isBigEndian)\r\n            value = readBE.call(this.buffer, this.position);\r\n        else\r\n            value = readLE.call(this.buffer, this.position);\r\n\r\n        this.position += size;\r\n\r\n        return value;\r\n    };\r\n}\r\n\r\nBinaryReader.prototype.readUInt8 = _read(Buffer.prototype.readUInt8, Buffer.prototype.readUInt8, 1);\r\nBinaryReader.prototype.readUInt16 = _read(Buffer.prototype.readUInt16LE, Buffer.prototype.readUInt16BE, 2);\r\nBinaryReader.prototype.readUInt32 = _read(Buffer.prototype.readUInt32LE, Buffer.prototype.readUInt32BE, 4);\r\nBinaryReader.prototype.readInt8 = _read(Buffer.prototype.readInt8, Buffer.prototype.readInt8, 1);\r\nBinaryReader.prototype.readInt16 = _read(Buffer.prototype.readInt16LE, Buffer.prototype.readInt16BE, 2);\r\nBinaryReader.prototype.readInt32 = _read(Buffer.prototype.readInt32LE, Buffer.prototype.readInt32BE, 4);\r\nBinaryReader.prototype.readFloat = _read(Buffer.prototype.readFloatLE, Buffer.prototype.readFloatBE, 4);\r\nBinaryReader.prototype.readDouble = _read(Buffer.prototype.readDoubleLE, Buffer.prototype.readDoubleBE, 8);\r\n\r\nBinaryReader.prototype.readVarInt = function () {\r\n    var nextByte,\r\n        result = 0,\r\n        bytesRead = 0;\r\n\r\n    do {\r\n        nextByte = this.buffer[this.position + bytesRead];\r\n        result += (nextByte & 0x7F) << (7 * bytesRead);\r\n        bytesRead++;\r\n    } while (nextByte >= 0x80);\r\n\r\n    this.position += bytesRead;\r\n\r\n    return result;\r\n};\r\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,YAAY;AAE7B,SAASA,YAAYA,CAACC,MAAM,EAAEC,WAAW,EAAE;EACvC,IAAI,CAACD,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACE,QAAQ,GAAG,CAAC;EACjB,IAAI,CAACD,WAAW,GAAGA,WAAW,IAAI,KAAK;AAC3C;AAEA,SAASE,KAAKA,CAACC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACjC,OAAO,YAAY;IACf,IAAIC,KAAK;IAET,IAAI,IAAI,CAACN,WAAW,EAChBM,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,CAACR,MAAM,EAAE,IAAI,CAACE,QAAQ,CAAC,CAAC,KAEhDK,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,CAACR,MAAM,EAAE,IAAI,CAACE,QAAQ,CAAC;IAEnD,IAAI,CAACA,QAAQ,IAAII,IAAI;IAErB,OAAOC,KAAK;EAChB,CAAC;AACL;AAEAR,YAAY,CAACU,SAAS,CAACC,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACC,SAAS,EAAEC,MAAM,CAACF,SAAS,CAACC,SAAS,EAAE,CAAC,CAAC;AACnGX,YAAY,CAACU,SAAS,CAACG,UAAU,GAAGT,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACI,YAAY,EAAEF,MAAM,CAACF,SAAS,CAACK,YAAY,EAAE,CAAC,CAAC;AAC1Gf,YAAY,CAACU,SAAS,CAACM,UAAU,GAAGZ,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACO,YAAY,EAAEL,MAAM,CAACF,SAAS,CAACQ,YAAY,EAAE,CAAC,CAAC;AAC1GlB,YAAY,CAACU,SAAS,CAACS,QAAQ,GAAGf,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACS,QAAQ,EAAEP,MAAM,CAACF,SAAS,CAACS,QAAQ,EAAE,CAAC,CAAC;AAChGnB,YAAY,CAACU,SAAS,CAACU,SAAS,GAAGhB,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACW,WAAW,EAAET,MAAM,CAACF,SAAS,CAACY,WAAW,EAAE,CAAC,CAAC;AACvGtB,YAAY,CAACU,SAAS,CAACa,SAAS,GAAGnB,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACc,WAAW,EAAEZ,MAAM,CAACF,SAAS,CAACe,WAAW,EAAE,CAAC,CAAC;AACvGzB,YAAY,CAACU,SAAS,CAACgB,SAAS,GAAGtB,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACiB,WAAW,EAAEf,MAAM,CAACF,SAAS,CAACkB,WAAW,EAAE,CAAC,CAAC;AACvG5B,YAAY,CAACU,SAAS,CAACmB,UAAU,GAAGzB,KAAK,CAACQ,MAAM,CAACF,SAAS,CAACoB,YAAY,EAAElB,MAAM,CAACF,SAAS,CAACqB,YAAY,EAAE,CAAC,CAAC;AAE1G/B,YAAY,CAACU,SAAS,CAACsB,UAAU,GAAG,YAAY;EAC5C,IAAIC,QAAQ;IACRC,MAAM,GAAG,CAAC;IACVC,SAAS,GAAG,CAAC;EAEjB,GAAG;IACCF,QAAQ,GAAG,IAAI,CAAChC,MAAM,CAAC,IAAI,CAACE,QAAQ,GAAGgC,SAAS,CAAC;IACjDD,MAAM,IAAI,CAACD,QAAQ,GAAG,IAAI,KAAM,CAAC,GAAGE,SAAU;IAC9CA,SAAS,EAAE;EACf,CAAC,QAAQF,QAAQ,IAAI,IAAI;EAEzB,IAAI,CAAC9B,QAAQ,IAAIgC,SAAS;EAE1B,OAAOD,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"script"}