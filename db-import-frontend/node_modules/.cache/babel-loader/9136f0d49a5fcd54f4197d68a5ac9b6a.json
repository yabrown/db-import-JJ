{"ast":null,"code":"'use strict';\n\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar mkdirpSync = require('../mkdirs').mkdirsSync;\nvar utimesSync = require('../util/utimes.js').utimesMillisSync;\nvar notExist = Symbol('notExist');\nfunction copySync(src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(\"fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n    see https://github.com/jprichardson/node-fs-extra/issues/269\");\n  }\n  var destStat = checkPaths(src, dest);\n  if (opts.filter && !opts.filter(src, dest)) return;\n  var destParent = path.dirname(dest);\n  if (!fs.existsSync(destParent)) mkdirpSync(destParent);\n  return startCopy(destStat, src, dest, opts);\n}\nfunction startCopy(destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return;\n  return getStats(destStat, src, dest, opts);\n}\nfunction getStats(destStat, src, dest, opts) {\n  var statSync = opts.dereference ? fs.statSync : fs.lstatSync;\n  var srcStat = statSync(src);\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts);\n}\nfunction onFile(srcStat, destStat, src, dest, opts) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts);\n  return mayCopyFile(srcStat, src, dest, opts);\n}\nfunction mayCopyFile(srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest);\n    return copyFile(srcStat, src, dest, opts);\n  } else if (opts.errorOnExist) {\n    throw new Error(\"'\".concat(dest, \"' already exists\"));\n  }\n}\nfunction copyFile(srcStat, src, dest, opts) {\n  if (typeof fs.copyFileSync === 'function') {\n    fs.copyFileSync(src, dest);\n    fs.chmodSync(dest, srcStat.mode);\n    if (opts.preserveTimestamps) {\n      return utimesSync(dest, srcStat.atime, srcStat.mtime);\n    }\n    return;\n  }\n  return copyFileFallback(srcStat, src, dest, opts);\n}\nfunction copyFileFallback(srcStat, src, dest, opts) {\n  var BUF_LENGTH = 64 * 1024;\n  var _buff = require('../util/buffer')(BUF_LENGTH);\n  var fdr = fs.openSync(src, 'r');\n  var fdw = fs.openSync(dest, 'w', srcStat.mode);\n  var pos = 0;\n  while (pos < srcStat.size) {\n    var bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, _buff, 0, bytesRead);\n    pos += bytesRead;\n  }\n  if (opts.preserveTimestamps) fs.futimesSync(fdw, srcStat.atime, srcStat.mtime);\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n}\nfunction onDir(srcStat, destStat, src, dest, opts) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts);\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(\"Cannot overwrite non-directory '\".concat(dest, \"' with directory '\").concat(src, \"'.\"));\n  }\n  return copyDir(src, dest, opts);\n}\nfunction mkDirAndCopy(srcStat, src, dest, opts) {\n  fs.mkdirSync(dest);\n  copyDir(src, dest, opts);\n  return fs.chmodSync(dest, srcStat.mode);\n}\nfunction copyDir(src, dest, opts) {\n  fs.readdirSync(src).forEach(function (item) {\n    return copyDirItem(item, src, dest, opts);\n  });\n}\nfunction copyDirItem(item, src, dest, opts) {\n  var srcItem = path.join(src, item);\n  var destItem = path.join(dest, item);\n  var destStat = checkPaths(srcItem, destItem);\n  return startCopy(destStat, srcItem, destItem, opts);\n}\nfunction onLink(destStat, src, dest, opts) {\n  var resolvedSrc = fs.readlinkSync(src);\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n  }\n  if (destStat === notExist) {\n    return fs.symlinkSync(resolvedSrc, dest);\n  } else {\n    var resolvedDest;\n    try {\n      resolvedDest = fs.readlinkSync(dest);\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest);\n      throw err;\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest);\n    }\n    if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(\"Cannot copy '\".concat(resolvedSrc, \"' to a subdirectory of itself, '\").concat(resolvedDest, \"'.\"));\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(\"Cannot overwrite '\".concat(resolvedDest, \"' with '\").concat(resolvedSrc, \"'.\"));\n    }\n    return copyLink(resolvedSrc, dest);\n  }\n}\nfunction copyLink(resolvedSrc, dest) {\n  fs.unlinkSync(dest);\n  return fs.symlinkSync(resolvedSrc, dest);\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir(src, dest) {\n  var srcArray = path.resolve(src).split(path.sep);\n  var destArray = path.resolve(dest).split(path.sep);\n  return srcArray.reduce(function (acc, current, i) {\n    return acc && destArray[i] === current;\n  }, true);\n}\nfunction checkStats(src, dest) {\n  var srcStat = fs.statSync(src);\n  var destStat;\n  try {\n    destStat = fs.statSync(dest);\n  } catch (err) {\n    if (err.code === 'ENOENT') return {\n      srcStat: srcStat,\n      destStat: notExist\n    };\n    throw err;\n  }\n  return {\n    srcStat: srcStat,\n    destStat: destStat\n  };\n}\nfunction checkPaths(src, dest) {\n  var _checkStats = checkStats(src, dest),\n    srcStat = _checkStats.srcStat,\n    destStat = _checkStats.destStat;\n  if (destStat.ino && destStat.ino === srcStat.ino) {\n    throw new Error('Source and destination must not be the same.');\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(\"Cannot copy '\".concat(src, \"' to a subdirectory of itself, '\").concat(dest, \"'.\"));\n  }\n  return destStat;\n}\nmodule.exports = copySync;","map":{"version":3,"names":["fs","require","path","mkdirpSync","mkdirsSync","utimesSync","utimesMillisSync","notExist","Symbol","copySync","src","dest","opts","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","destStat","checkPaths","destParent","dirname","existsSync","startCopy","getStats","statSync","dereference","lstatSync","srcStat","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlinkSync","errorOnExist","Error","concat","copyFileSync","chmodSync","mode","atime","mtime","copyFileFallback","BUF_LENGTH","_buff","fdr","openSync","fdw","pos","size","bytesRead","readSync","writeSync","futimesSync","closeSync","mkDirAndCopy","copyDir","mkdirSync","readdirSync","forEach","item","copyDirItem","srcItem","join","destItem","resolvedSrc","readlinkSync","resolve","cwd","symlinkSync","resolvedDest","err","code","isSrcSubdir","copyLink","srcArray","split","sep","destArray","reduce","acc","current","i","checkStats","_checkStats","ino","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/mock-aws-s3/node_modules/fs-extra/lib/copy-sync/copy-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirpSync = require('../mkdirs').mkdirsSync\nconst utimesSync = require('../util/utimes.js').utimesMillisSync\n\nconst notExist = Symbol('notExist')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = {filter: opts}\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  const destStat = checkPaths(src, dest)\n\n  if (opts.filter && !opts.filter(src, dest)) return\n\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirpSync(destParent)\n  return startCopy(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  if (typeof fs.copyFileSync === 'function') {\n    fs.copyFileSync(src, dest)\n    fs.chmodSync(dest, srcStat.mode)\n    if (opts.preserveTimestamps) {\n      return utimesSync(dest, srcStat.atime, srcStat.mtime)\n    }\n    return\n  }\n  return copyFileFallback(srcStat, src, dest, opts)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts) {\n  const BUF_LENGTH = 64 * 1024\n  const _buff = require('../util/buffer')(BUF_LENGTH)\n\n  const fdr = fs.openSync(src, 'r')\n  const fdw = fs.openSync(dest, 'w', srcStat.mode)\n  let pos = 0\n\n  while (pos < srcStat.size) {\n    const bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (opts.preserveTimestamps) fs.futimesSync(fdw, srcStat.atime, srcStat.mtime)\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts)\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n  }\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return fs.chmodSync(dest, srcStat.mode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const destStat = checkPaths(srcItem, destItem)\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (destStat === notExist) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir (src, dest) {\n  const srcArray = path.resolve(src).split(path.sep)\n  const destArray = path.resolve(dest).split(path.sep)\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true)\n}\n\nfunction checkStats (src, dest) {\n  const srcStat = fs.statSync(src)\n  let destStat\n  try {\n    destStat = fs.statSync(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return {srcStat, destStat: notExist}\n    throw err\n  }\n  return {srcStat, destStat}\n}\n\nfunction checkPaths (src, dest) {\n  const {srcStat, destStat} = checkStats(src, dest)\n  if (destStat.ino && destStat.ino === srcStat.ino) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`)\n  }\n  return destStat\n}\n\nmodule.exports = copySync\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}