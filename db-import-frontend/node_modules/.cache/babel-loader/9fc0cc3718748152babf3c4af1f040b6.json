{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport var formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n  return {\n    name: formDataPolicyName,\n    sendRequest: function sendRequest(request, next) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formData, requestForm, _i, _Object$keys, formKey, formValue, _iterator, _step, subValue, contentType;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (request.formData) {\n                formData = request.formData;\n                requestForm = new FormData();\n                for (_i = 0, _Object$keys = Object.keys(formData); _i < _Object$keys.length; _i++) {\n                  formKey = _Object$keys[_i];\n                  formValue = formData[formKey];\n                  if (Array.isArray(formValue)) {\n                    _iterator = _createForOfIteratorHelper(formValue);\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        subValue = _step.value;\n                        requestForm.append(formKey, subValue);\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                  } else {\n                    requestForm.append(formKey, formValue);\n                  }\n                }\n                request.body = requestForm;\n                request.formData = undefined;\n                contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                  request.body = new URLSearchParams(requestForm).toString();\n                } else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                  // browser will automatically apply a suitable content-type header\n                  request.headers.delete(\"Content-Type\");\n                }\n              }\n              return _context.abrupt(\"return\", next(request));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  };\n}","map":{"version":3,"names":["formDataPolicyName","formDataPolicy","name","sendRequest","request","next","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","requestForm","_i","_Object$keys","formKey","formValue","_iterator","_step","subValue","contentType","wrap","_callee$","_context","prev","FormData","Object","keys","length","Array","isArray","_createForOfIteratorHelper","s","n","done","value","append","err","e","f","body","undefined","headers","get","indexOf","URLSearchParams","toString","delete","abrupt","stop"],"sources":["../../../src/policies/formDataPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces\";\nimport { PipelinePolicy } from \"../pipeline\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (request.formData) {\n        const formData = request.formData;\n        const requestForm = new FormData();\n        for (const formKey of Object.keys(formData)) {\n          const formValue = formData[formKey];\n          if (Array.isArray(formValue)) {\n            for (const subValue of formValue) {\n              requestForm.append(formKey, subValue);\n            }\n          } else {\n            requestForm.append(formKey, formValue);\n          }\n        }\n\n        request.body = requestForm;\n        request.formData = undefined;\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = new URLSearchParams(requestForm as any).toString();\n        } else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n          // browser will automatically apply a suitable content-type header\n          request.headers.delete(\"Content-Type\");\n        }\n      }\n      return next(request);\n    },\n  };\n}\n"],"mappings":";;;AAAA;AACA;AAKA;;;AAGA,OAAO,IAAMA,kBAAkB,GAAG,gBAAgB;AAElD;;;AAGA,OAAM,SAAUC,cAAcA,CAAA;EAC5B,OAAO;IACLC,IAAI,EAAEF,kBAAkB;IAClBG,WAAW,WAAAA,YAACC,OAAwB,EAAEC,IAAiB;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,WAAA,EAAAC,EAAA,EAAAC,YAAA,EAAAC,OAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,QAAA,EAAAC,WAAA;QAAA,OAAAZ,mBAAA,GAAAa,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAjB,IAAA;YAAA;cAC3D,IAAID,OAAO,CAACM,QAAQ,EAAE;gBACdA,QAAQ,GAAGN,OAAO,CAACM,QAAQ;gBAC3BC,WAAW,GAAG,IAAIa,QAAQ,EAAE;gBAClC,KAAAZ,EAAA,MAAAC,YAAA,GAAsBY,MAAM,CAACC,IAAI,CAAChB,QAAQ,CAAC,EAAAE,EAAA,GAAAC,YAAA,CAAAc,MAAA,EAAAf,EAAA,IAAE;kBAAlCE,OAAO,GAAAD,YAAA,CAAAD,EAAA;kBACVG,SAAS,GAAGL,QAAQ,CAACI,OAAO,CAAC;kBACnC,IAAIc,KAAK,CAACC,OAAO,CAACd,SAAS,CAAC,EAAE;oBAAAC,SAAA,GAAAc,0BAAA,CACLf,SAAS;oBAAA;sBAAhC,KAAAC,SAAA,CAAAe,CAAA,MAAAd,KAAA,GAAAD,SAAA,CAAAgB,CAAA,IAAAC,IAAA,GAAkC;wBAAvBf,QAAQ,GAAAD,KAAA,CAAAiB,KAAA;wBACjBvB,WAAW,CAACwB,MAAM,CAACrB,OAAO,EAAEI,QAAQ,CAAC;;oBACtC,SAAAkB,GAAA;sBAAApB,SAAA,CAAAqB,CAAA,CAAAD,GAAA;oBAAA;sBAAApB,SAAA,CAAAsB,CAAA;oBAAA;mBACF,MAAM;oBACL3B,WAAW,CAACwB,MAAM,CAACrB,OAAO,EAAEC,SAAS,CAAC;;;gBAI1CX,OAAO,CAACmC,IAAI,GAAG5B,WAAW;gBAC1BP,OAAO,CAACM,QAAQ,GAAG8B,SAAS;gBACtBrB,WAAW,GAAGf,OAAO,CAACqC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;gBACvD,IAAIvB,WAAW,IAAIA,WAAW,CAACwB,OAAO,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC,EAAE;kBAClFvC,OAAO,CAACmC,IAAI,GAAG,IAAIK,eAAe,CAACjC,WAAkB,CAAC,CAACkC,QAAQ,EAAE;iBAClE,MAAM,IAAI1B,WAAW,IAAIA,WAAW,CAACwB,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;kBAC3E;kBACAvC,OAAO,CAACqC,OAAO,CAACK,MAAM,CAAC,cAAc,CAAC;;;cAEzC,OAAAxB,QAAA,CAAAyB,MAAA,WACM1C,IAAI,CAACD,OAAO,CAAC;YAAA;YAAA;cAAA,OAAAkB,QAAA,CAAA0B,IAAA;UAAA;QAAA,GAAAvC,OAAA;MAAA;IACtB;GACD;AACH"},"metadata":{},"sourceType":"module"}