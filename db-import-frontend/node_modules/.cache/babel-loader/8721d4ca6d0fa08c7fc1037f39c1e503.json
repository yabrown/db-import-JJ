{"ast":null,"code":"'use strict';\n\n// Tar can encode large and negative numbers using a leading byte of\n// 0xff for negative, and 0x80 for positive.\nvar encode = function encode(num, buf) {\n  if (!Number.isSafeInteger(num)) {\n    // The number is so large that javascript cannot represent it with integer\n    // precision.\n    throw Error('cannot encode number outside of javascript safe integer range');\n  } else if (num < 0) {\n    encodeNegative(num, buf);\n  } else {\n    encodePositive(num, buf);\n  }\n  return buf;\n};\nvar encodePositive = function encodePositive(num, buf) {\n  buf[0] = 0x80;\n  for (var i = buf.length; i > 1; i--) {\n    buf[i - 1] = num & 0xff;\n    num = Math.floor(num / 0x100);\n  }\n};\nvar encodeNegative = function encodeNegative(num, buf) {\n  buf[0] = 0xff;\n  var flipped = false;\n  num = num * -1;\n  for (var i = buf.length; i > 1; i--) {\n    var byte = num & 0xff;\n    num = Math.floor(num / 0x100);\n    if (flipped) {\n      buf[i - 1] = onesComp(byte);\n    } else if (byte === 0) {\n      buf[i - 1] = 0;\n    } else {\n      flipped = true;\n      buf[i - 1] = twosComp(byte);\n    }\n  }\n};\nvar parse = function parse(buf) {\n  var pre = buf[0];\n  var value = pre === 0x80 ? pos(buf.slice(1, buf.length)) : pre === 0xff ? twos(buf) : null;\n  if (value === null) {\n    throw Error('invalid base256 encoding');\n  }\n  if (!Number.isSafeInteger(value)) {\n    // The number is so large that javascript cannot represent it with integer\n    // precision.\n    throw Error('parsed number outside of javascript safe integer range');\n  }\n  return value;\n};\nvar twos = function twos(buf) {\n  var len = buf.length;\n  var sum = 0;\n  var flipped = false;\n  for (var i = len - 1; i > -1; i--) {\n    var byte = buf[i];\n    var f;\n    if (flipped) {\n      f = onesComp(byte);\n    } else if (byte === 0) {\n      f = byte;\n    } else {\n      flipped = true;\n      f = twosComp(byte);\n    }\n    if (f !== 0) {\n      sum -= f * Math.pow(256, len - i - 1);\n    }\n  }\n  return sum;\n};\nvar pos = function pos(buf) {\n  var len = buf.length;\n  var sum = 0;\n  for (var i = len - 1; i > -1; i--) {\n    var byte = buf[i];\n    if (byte !== 0) {\n      sum += byte * Math.pow(256, len - i - 1);\n    }\n  }\n  return sum;\n};\nvar onesComp = function onesComp(byte) {\n  return (0xff ^ byte) & 0xff;\n};\nvar twosComp = function twosComp(byte) {\n  return (0xff ^ byte) + 1 & 0xff;\n};\nmodule.exports = {\n  encode: encode,\n  parse: parse\n};","map":{"version":3,"names":["encode","num","buf","Number","isSafeInteger","Error","encodeNegative","encodePositive","i","length","Math","floor","flipped","byte","onesComp","twosComp","parse","pre","value","pos","slice","twos","len","sum","f","pow","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/tar/lib/large-numbers.js"],"sourcesContent":["'use strict'\n// Tar can encode large and negative numbers using a leading byte of\n// 0xff for negative, and 0x80 for positive.\n\nconst encode = (num, buf) => {\n  if (!Number.isSafeInteger(num)) {\n  // The number is so large that javascript cannot represent it with integer\n  // precision.\n    throw Error('cannot encode number outside of javascript safe integer range')\n  } else if (num < 0) {\n    encodeNegative(num, buf)\n  } else {\n    encodePositive(num, buf)\n  }\n  return buf\n}\n\nconst encodePositive = (num, buf) => {\n  buf[0] = 0x80\n\n  for (var i = buf.length; i > 1; i--) {\n    buf[i - 1] = num & 0xff\n    num = Math.floor(num / 0x100)\n  }\n}\n\nconst encodeNegative = (num, buf) => {\n  buf[0] = 0xff\n  var flipped = false\n  num = num * -1\n  for (var i = buf.length; i > 1; i--) {\n    var byte = num & 0xff\n    num = Math.floor(num / 0x100)\n    if (flipped) {\n      buf[i - 1] = onesComp(byte)\n    } else if (byte === 0) {\n      buf[i - 1] = 0\n    } else {\n      flipped = true\n      buf[i - 1] = twosComp(byte)\n    }\n  }\n}\n\nconst parse = (buf) => {\n  const pre = buf[0]\n  const value = pre === 0x80 ? pos(buf.slice(1, buf.length))\n    : pre === 0xff ? twos(buf)\n    : null\n  if (value === null) {\n    throw Error('invalid base256 encoding')\n  }\n\n  if (!Number.isSafeInteger(value)) {\n  // The number is so large that javascript cannot represent it with integer\n  // precision.\n    throw Error('parsed number outside of javascript safe integer range')\n  }\n\n  return value\n}\n\nconst twos = (buf) => {\n  var len = buf.length\n  var sum = 0\n  var flipped = false\n  for (var i = len - 1; i > -1; i--) {\n    var byte = buf[i]\n    var f\n    if (flipped) {\n      f = onesComp(byte)\n    } else if (byte === 0) {\n      f = byte\n    } else {\n      flipped = true\n      f = twosComp(byte)\n    }\n    if (f !== 0) {\n      sum -= f * Math.pow(256, len - i - 1)\n    }\n  }\n  return sum\n}\n\nconst pos = (buf) => {\n  var len = buf.length\n  var sum = 0\n  for (var i = len - 1; i > -1; i--) {\n    var byte = buf[i]\n    if (byte !== 0) {\n      sum += byte * Math.pow(256, len - i - 1)\n    }\n  }\n  return sum\n}\n\nconst onesComp = byte => (0xff ^ byte) & 0xff\n\nconst twosComp = byte => ((0xff ^ byte) + 1) & 0xff\n\nmodule.exports = {\n  encode,\n  parse,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}