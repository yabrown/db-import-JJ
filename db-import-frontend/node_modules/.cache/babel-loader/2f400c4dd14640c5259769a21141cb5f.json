{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar TVP_ROW_TOKEN = Buffer.from([0x01]);\nvar TVP_END_TOKEN = Buffer.from([0x00]);\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nvar TVP = {\n  id: 0xF3,\n  type: 'TVPTYPE',\n  name: 'TVP',\n  declaration: function declaration(parameter) {\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    return value.name + ' readonly';\n  },\n  generateTypeInfo: function generateTypeInfo(parameter) {\n    var _ref, _ref2;\n    var _parameter$value, _parameter$value2;\n    var databaseName = '';\n    var schema = (_ref = (_parameter$value = parameter.value) === null || _parameter$value === void 0 ? void 0 : _parameter$value.schema) !== null && _ref !== void 0 ? _ref : '';\n    var typeName = (_ref2 = (_parameter$value2 = parameter.value) === null || _parameter$value2 === void 0 ? void 0 : _parameter$value2.name) !== null && _ref2 !== void 0 ? _ref2 : '';\n    var bufferLength = 1 + 1 + Buffer.byteLength(databaseName, 'ucs2') + 1 + Buffer.byteLength(schema, 'ucs2') + 1 + Buffer.byteLength(typeName, 'ucs2');\n    var buffer = new _writableTrackingBuffer.default(bufferLength, 'ucs2');\n    buffer.writeUInt8(this.id);\n    buffer.writeBVarchar(databaseName);\n    buffer.writeBVarchar(schema);\n    buffer.writeBVarchar(typeName);\n    return buffer.data;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    var columns = parameter.value.columns;\n    var buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(columns.length, 0);\n    return buffer;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime().mark(function generateParameterData(parameter, options) {\n    var _parameter$value3, columns, rows, i, len, column, buff, _i, length, row, k, len2, _column, value, param;\n    return _regeneratorRuntime().wrap(function generateParameterData$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(parameter.value == null)) {\n            _context.next = 6;\n            break;\n          }\n          _context.next = 3;\n          return TVP_END_TOKEN;\n        case 3:\n          _context.next = 5;\n          return TVP_END_TOKEN;\n        case 5:\n          return _context.abrupt(\"return\");\n        case 6:\n          _parameter$value3 = parameter.value, columns = _parameter$value3.columns, rows = _parameter$value3.rows;\n          i = 0, len = columns.length;\n        case 8:\n          if (!(i < len)) {\n            _context.next = 22;\n            break;\n          }\n          column = columns[i];\n          buff = Buffer.alloc(6); // UserType\n          buff.writeUInt32LE(0x00000000, 0); // Flags\n\n          buff.writeUInt16LE(0x0000, 4);\n          _context.next = 15;\n          return buff;\n        case 15:\n          _context.next = 17;\n          return column.type.generateTypeInfo(column);\n        case 17:\n          _context.next = 19;\n          return Buffer.from([0x00]);\n        case 19:\n          i++;\n          _context.next = 8;\n          break;\n        case 22:\n          _context.next = 24;\n          return TVP_END_TOKEN;\n        case 24:\n          _i = 0, length = rows.length;\n        case 25:\n          if (!(_i < length)) {\n            _context.next = 43;\n            break;\n          }\n          _context.next = 28;\n          return TVP_ROW_TOKEN;\n        case 28:\n          row = rows[_i];\n          k = 0, len2 = row.length;\n        case 30:\n          if (!(k < len2)) {\n            _context.next = 40;\n            break;\n          }\n          _column = columns[k];\n          value = row[k];\n          param = {\n            value: _column.type.validate(value, parameter.collation),\n            length: _column.length,\n            scale: _column.scale,\n            precision: _column.precision\n          }; // TvpColumnData\n          _context.next = 36;\n          return _column.type.generateParameterLength(param, options);\n        case 36:\n          return _context.delegateYield(_column.type.generateParameterData(param, options), \"t0\", 37);\n        case 37:\n          k++;\n          _context.next = 30;\n          break;\n        case 40:\n          _i++;\n          _context.next = 25;\n          break;\n        case 43:\n          _context.next = 45;\n          return TVP_END_TOKEN;\n        case 45:\n        case \"end\":\n          return _context.stop();\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value !== 'object') {\n      throw new TypeError('Invalid table.');\n    }\n    if (!Array.isArray(value.columns)) {\n      throw new TypeError('Invalid table.');\n    }\n    if (!Array.isArray(value.rows)) {\n      throw new TypeError('Invalid table.');\n    }\n    return value;\n  }\n};\nvar _default = TVP;\nexports.default = _default;\nmodule.exports = TVP;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","TVP_ROW_TOKEN","Buffer","from","TVP_END_TOKEN","NULL_LENGTH","TVP","id","type","name","declaration","parameter","value","generateTypeInfo","_ref","_ref2","_parameter$value","_parameter$value2","databaseName","schema","typeName","bufferLength","byteLength","buffer","default","writeUInt8","writeBVarchar","data","generateParameterLength","options","columns","alloc","writeUInt16LE","length","generateParameterData","_regeneratorRuntime","mark","_parameter$value3","rows","i","len","column","buff","_i","row","k","len2","_column","param","wrap","generateParameterData$","_context","prev","next","abrupt","writeUInt32LE","validate","collation","scale","precision","delegateYield","stop","TypeError","Array","isArray","module","exports"],"sources":["../../src/data-types/tvp.ts"],"sourcesContent":["import { DataType } from '../data-type';\nimport WritableTrackingBuffer from '../tracking-buffer/writable-tracking-buffer';\n\nconst TVP_ROW_TOKEN = Buffer.from([0x01]);\nconst TVP_END_TOKEN = Buffer.from([0x00]);\n\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\n\nconst TVP: DataType = {\n  id: 0xF3,\n  type: 'TVPTYPE',\n  name: 'TVP',\n\n  declaration: function(parameter) {\n    const value = parameter.value as any; // Temporary solution. Remove 'any' later.\n    return value.name + ' readonly';\n  },\n\n  generateTypeInfo(parameter) {\n    const databaseName = '';\n    const schema = parameter.value?.schema ?? '';\n    const typeName = parameter.value?.name ?? '';\n\n    const bufferLength = 1 +\n      1 + Buffer.byteLength(databaseName, 'ucs2') +\n      1 + Buffer.byteLength(schema, 'ucs2') +\n      1 + Buffer.byteLength(typeName, 'ucs2');\n\n    const buffer = new WritableTrackingBuffer(bufferLength, 'ucs2');\n    buffer.writeUInt8(this.id);\n    buffer.writeBVarchar(databaseName);\n    buffer.writeBVarchar(schema);\n    buffer.writeBVarchar(typeName);\n\n    return buffer.data;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const { columns } = parameter.value;\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(columns.length, 0);\n    return buffer;\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      yield TVP_END_TOKEN;\n      yield TVP_END_TOKEN;\n      return;\n    }\n\n    const { columns, rows } = parameter.value;\n\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const column = columns[i];\n\n      const buff = Buffer.alloc(6);\n      // UserType\n      buff.writeUInt32LE(0x00000000, 0);\n\n      // Flags\n      buff.writeUInt16LE(0x0000, 4);\n      yield buff;\n\n      // TYPE_INFO\n      yield column.type.generateTypeInfo(column);\n\n      // ColName\n      yield Buffer.from([0x00]);\n    }\n\n    yield TVP_END_TOKEN;\n\n    for (let i = 0, length = rows.length; i < length; i++) {\n      yield TVP_ROW_TOKEN;\n\n      const row = rows[i];\n      for (let k = 0, len2 = row.length; k < len2; k++) {\n        const column = columns[k];\n        const value = row[k];\n\n        const param = {\n          value: column.type.validate(value, parameter.collation),\n          length: column.length,\n          scale: column.scale,\n          precision: column.precision\n        };\n\n        // TvpColumnData\n        yield column.type.generateParameterLength(param, options);\n        yield * column.type.generateParameterData(param, options);\n      }\n    }\n\n    yield TVP_END_TOKEN;\n  },\n\n  validate: function(value): Buffer | null {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'object') {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.columns)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.rows)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    return value;\n  }\n};\n\nexport default TVP;\nmodule.exports = TVP;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}