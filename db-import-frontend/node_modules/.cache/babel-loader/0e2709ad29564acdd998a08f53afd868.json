{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"react-native\" section in package.json.\n */\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID() {\n  var uuid = \"\";\n  for (var i = 0; i < 32; i++) {\n    // Generate a random number between 0 and 15\n    var randomNumber = Math.floor(Math.random() * 16);\n    // Set the UUID version to 4 in the 13th position\n    if (i === 12) {\n      uuid += \"4\";\n    } else if (i === 16) {\n      // Set the UUID variant to \"10\" in the 17th position\n      uuid += randomNumber & 0x3 | 0x8;\n    } else {\n      // Add a random hexadecimal digit to the UUID string\n      uuid += randomNumber.toString(16);\n    }\n    // Add hyphens to the UUID string at the appropriate positions\n    if (i === 7 || i === 11 || i === 15 || i === 19) {\n      uuid += \"-\";\n    }\n  }\n  return uuid;\n}\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n  return generateUUID();\n}","map":{"version":3,"names":["generateUUID","uuid","i","randomNumber","Math","floor","random","toString","randomUUID"],"sources":["../../src/uuidUtils.native.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"react-native\" section in package.json.\n */\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID(): string {\n  let uuid = \"\";\n  for (let i = 0; i < 32; i++) {\n    // Generate a random number between 0 and 15\n    const randomNumber = Math.floor(Math.random() * 16);\n    // Set the UUID version to 4 in the 13th position\n    if (i === 12) {\n      uuid += \"4\";\n    } else if (i === 16) {\n      // Set the UUID variant to \"10\" in the 17th position\n      uuid += (randomNumber & 0x3) | 0x8;\n    } else {\n      // Add a random hexadecimal digit to the UUID string\n      uuid += randomNumber.toString(16);\n    }\n    // Add hyphens to the UUID string at the appropriate positions\n    if (i === 7 || i === 11 || i === 15 || i === 19) {\n      uuid += \"-\";\n    }\n  }\n  return uuid;\n}\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return generateUUID();\n}\n"],"mappings":"AAAA;AACA;AAEA;;;AAIA;;;;;AAKA,OAAM,SAAUA,YAAYA,CAAA;EAC1B,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B;IACA,IAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;IACnD;IACA,IAAIJ,CAAC,KAAK,EAAE,EAAE;MACZD,IAAI,IAAI,GAAG;KACZ,MAAM,IAAIC,CAAC,KAAK,EAAE,EAAE;MACnB;MACAD,IAAI,IAAKE,YAAY,GAAG,GAAG,GAAI,GAAG;KACnC,MAAM;MACL;MACAF,IAAI,IAAIE,YAAY,CAACI,QAAQ,CAAC,EAAE,CAAC;;IAEnC;IACA,IAAIL,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,EAAE,IAAIA,CAAC,KAAK,EAAE,IAAIA,CAAC,KAAK,EAAE,EAAE;MAC/CD,IAAI,IAAI,GAAG;;;EAGf,OAAOA,IAAI;AACb;AAEA;;;;;AAKA,OAAM,SAAUO,UAAUA,CAAA;EACxB,OAAOR,YAAY,EAAE;AACvB"},"metadata":{},"sourceType":"module"}