{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _token = require(\"./token\");\nvar FEATURE_ID = {\n  SESSIONRECOVERY: 0x01,\n  FEDAUTH: 0x02,\n  COLUMNENCRYPTION: 0x04,\n  GLOBALTRANSACTIONS: 0x05,\n  AZURESQLSUPPORT: 0x08,\n  UTF8_SUPPORT: 0x0A,\n  TERMINATOR: 0xFF\n};\nfunction featureExtAckParser(parser, _options, callback) {\n  var fedAuth;\n  var utf8Support;\n  function next() {\n    parser.readUInt8(function (featureId) {\n      if (featureId === FEATURE_ID.TERMINATOR) {\n        return callback(new _token.FeatureExtAckToken(fedAuth, utf8Support));\n      }\n      parser.readUInt32LE(function (featureAckDataLen) {\n        parser.readBuffer(featureAckDataLen, function (featureData) {\n          switch (featureId) {\n            case FEATURE_ID.FEDAUTH:\n              fedAuth = featureData;\n              break;\n            case FEATURE_ID.UTF8_SUPPORT:\n              utf8Support = !!featureData[0];\n              break;\n          }\n          next();\n        });\n      });\n    });\n  }\n  next();\n}\nvar _default = featureExtAckParser;\nexports.default = _default;\nmodule.exports = featureExtAckParser;","map":{"version":3,"names":["_token","require","FEATURE_ID","SESSIONRECOVERY","FEDAUTH","COLUMNENCRYPTION","GLOBALTRANSACTIONS","AZURESQLSUPPORT","UTF8_SUPPORT","TERMINATOR","featureExtAckParser","parser","_options","callback","fedAuth","utf8Support","next","readUInt8","featureId","FeatureExtAckToken","readUInt32LE","featureAckDataLen","readBuffer","featureData","module","exports"],"sources":["../../src/token/feature-ext-ack-parser.ts"],"sourcesContent":["import Parser, { ParserOptions } from './stream-parser';\n\nimport { FeatureExtAckToken } from './token';\n\nconst FEATURE_ID = {\n  SESSIONRECOVERY: 0x01,\n  FEDAUTH: 0x02,\n  COLUMNENCRYPTION: 0x04,\n  GLOBALTRANSACTIONS: 0x05,\n  AZURESQLSUPPORT: 0x08,\n  UTF8_SUPPORT: 0x0A,\n  TERMINATOR: 0xFF\n};\n\nfunction featureExtAckParser(parser: Parser, _options: ParserOptions, callback: (token: FeatureExtAckToken) => void) {\n  let fedAuth: Buffer | undefined;\n  let utf8Support: boolean | undefined;\n\n  function next() {\n    parser.readUInt8((featureId) => {\n      if (featureId === FEATURE_ID.TERMINATOR) {\n        return callback(new FeatureExtAckToken(fedAuth, utf8Support));\n      }\n\n      parser.readUInt32LE((featureAckDataLen) => {\n        parser.readBuffer(featureAckDataLen, (featureData) => {\n          switch (featureId) {\n            case FEATURE_ID.FEDAUTH:\n              fedAuth = featureData;\n              break;\n            case FEATURE_ID.UTF8_SUPPORT:\n              utf8Support = !!featureData[0];\n              break;\n          }\n          next();\n        });\n      });\n    });\n  }\n\n  next();\n}\n\nexport default featureExtAckParser;\nmodule.exports = featureExtAckParser;\n"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAMC,UAAU,GAAG;EACjBC,eAAe,EAAE,IADA;EAEjBC,OAAO,EAAE,IAFQ;EAGjBC,gBAAgB,EAAE,IAHD;EAIjBC,kBAAkB,EAAE,IAJH;EAKjBC,eAAe,EAAE,IALA;EAMjBC,YAAY,EAAE,IANG;EAOjBC,UAAU,EAAE;AAPK,CAAnB;AAUA,SAASC,mBAATA,CAA6BC,MAA7B,EAA6CC,QAA7C,EAAsEC,QAAtE,EAAqH;EACnH,IAAIC,OAAJ;EACA,IAAIC,WAAJ;EAEA,SAASC,IAATA,CAAA,EAAgB;IACdL,MAAM,CAACM,SAAP,CAAkB,UAAAC,SAAD,EAAe;MAC9B,IAAIA,SAAS,KAAKhB,UAAU,CAACO,UAA7B,EAAyC;QACvC,OAAOI,QAAQ,CAAC,IAAIb,MAAA,CAAAmB,kBAAJ,CAAuBL,OAAvB,EAAgCC,WAAhC,CAAD,CAAf;MACD;MAEDJ,MAAM,CAACS,YAAP,CAAqB,UAAAC,iBAAD,EAAuB;QACzCV,MAAM,CAACW,UAAP,CAAkBD,iBAAlB,EAAsC,UAAAE,WAAD,EAAiB;UACpD,QAAQL,SAAR;YACE,KAAKhB,UAAU,CAACE,OAAhB;cACEU,OAAO,GAAGS,WAAV;cACA;YACF,KAAKrB,UAAU,CAACM,YAAhB;cACEO,WAAW,GAAG,CAAC,CAACQ,WAAW,CAAC,CAAD,CAA3B;cACA;UANJ;UAQAP,IAAI;QACL,CAVD;MAWD,CAZD;IAaD,CAlBD;EAmBD;EAEDA,IAAI;AACL;eAEcN,mB;;AACfc,MAAM,CAACC,OAAP,GAAiBf,mBAAjB"},"metadata":{},"sourceType":"script"}