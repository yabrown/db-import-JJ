{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nvar Binary = {\n  id: 0xAD,\n  type: 'BIGBinary',\n  name: 'Binary',\n  maximumLength: 8000,\n  declaration: function declaration(parameter) {\n    var value = parameter.value;\n    var length;\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n    return 'binary(' + length + ')';\n  },\n  resolveLength: function resolveLength(parameter) {\n    var value = parameter.value;\n    if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter) {\n    var buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeUInt16LE(parameter.length, 1);\n    return buffer;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    var buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(parameter.length, 0);\n    return buffer;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime().mark(function generateParameterData(parameter, options) {\n    return _regeneratorRuntime().wrap(function generateParameterData$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(parameter.value == null)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 2:\n          _context.next = 4;\n          return parameter.value.slice(0, parameter.length !== undefined ? Math.min(parameter.length, this.maximumLength) : this.maximumLength);\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, generateParameterData, this);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n    return value;\n  }\n};\nvar _default = Binary;\nexports.default = _default;\nmodule.exports = Binary;","map":{"version":3,"names":["NULL_LENGTH","Buffer","from","Binary","id","type","name","maximumLength","declaration","parameter","value","length","output","resolveLength","generateTypeInfo","buffer","alloc","writeUInt8","writeUInt16LE","generateParameterLength","options","generateParameterData","_regeneratorRuntime","mark","wrap","generateParameterData$","_context","prev","next","abrupt","slice","undefined","Math","min","stop","validate","isBuffer","TypeError","module","exports"],"sources":["../../src/data-types/binary.ts"],"sourcesContent":["import { DataType } from '../data-type';\n\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\n\nconst Binary: { maximumLength: number } & DataType = {\n  id: 0xAD,\n  type: 'BIGBinary',\n  name: 'Binary',\n  maximumLength: 8000,\n\n  declaration: function(parameter) {\n    const value = parameter.value as Buffer | null;\n\n    let length;\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    return 'binary(' + length + ')';\n  },\n\n  resolveLength: function(parameter) {\n    const value = parameter.value as Buffer | null;\n\n    if (value != null) {\n      return value.length;\n    } else {\n      return this.maximumLength;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    const buffer = Buffer.alloc(3);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeUInt16LE(parameter.length!, 1);\n    return buffer;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(parameter.length!, 0);\n    return buffer;\n  },\n\n  * generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    yield parameter.value.slice(0, parameter.length !== undefined ? Math.min(parameter.length, this.maximumLength) : this.maximumLength);\n  },\n\n  validate: function(value): Buffer | null {\n    if (value == null) {\n      return null;\n    }\n\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n\n    return value;\n  }\n};\n\nexport default Binary;\nmodule.exports = Binary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}