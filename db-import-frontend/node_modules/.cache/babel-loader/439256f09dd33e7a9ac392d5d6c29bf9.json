{"ast":null,"code":"var _objectSpread = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _require = require('util'),\n  promisify = _require.promisify;\nvar fs = require('fs');\nvar optsArg = function optsArg(opts) {\n  if (!opts) opts = {\n    mode: 511,\n    fs: fs\n  };else if (typeof opts === 'object') opts = _objectSpread({\n    mode: 511,\n    fs: fs\n  }, opts);else if (typeof opts === 'number') opts = {\n    mode: opts,\n    fs: fs\n  };else if (typeof opts === 'string') opts = {\n    mode: parseInt(opts, 8),\n    fs: fs\n  };else throw new TypeError('invalid options argument');\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir;\n  opts.mkdirAsync = promisify(opts.mkdir);\n  opts.stat = opts.stat || opts.fs.stat || fs.stat;\n  opts.statAsync = promisify(opts.stat);\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync;\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync;\n  return opts;\n};\nmodule.exports = optsArg;","map":{"version":3,"names":["_require","require","promisify","fs","optsArg","opts","mode","_objectSpread","parseInt","TypeError","mkdir","mkdirAsync","stat","statAsync","statSync","mkdirSync","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/cacache/node_modules/mkdirp/lib/opts-arg.js"],"sourcesContent":["const { promisify } = require('util')\nconst fs = require('fs')\nconst optsArg = opts => {\n  if (!opts)\n    opts = { mode: 0o777, fs }\n  else if (typeof opts === 'object')\n    opts = { mode: 0o777, fs, ...opts }\n  else if (typeof opts === 'number')\n    opts = { mode: opts, fs }\n  else if (typeof opts === 'string')\n    opts = { mode: parseInt(opts, 8), fs }\n  else\n    throw new TypeError('invalid options argument')\n\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir\n  opts.mkdirAsync = promisify(opts.mkdir)\n  opts.stat = opts.stat || opts.fs.stat || fs.stat\n  opts.statAsync = promisify(opts.stat)\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync\n  return opts\n}\nmodule.exports = optsArg\n"],"mappings":";AAAA,IAAAA,QAAA,GAAsBC,OAAO,CAAC,MAAM,CAAC;EAA7BC,SAAS,GAAAF,QAAA,CAATE,SAAS;AACjB,IAAMC,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB,IAAMG,OAAO,GAAG,SAAVA,OAAOA,CAAGC,IAAI,EAAI;EACtB,IAAI,CAACA,IAAI,EACPA,IAAI,GAAG;IAAEC,IAAI,EAAE,GAAK;IAAEH,EAAE,EAAFA;EAAG,CAAC,MACvB,IAAI,OAAOE,IAAI,KAAK,QAAQ,EAC/BA,IAAI,GAAAE,aAAA;IAAKD,IAAI,EAAE,GAAK;IAAEH,EAAE,EAAFA;EAAE,GAAKE,IAAI,CAAE,MAChC,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAC/BA,IAAI,GAAG;IAAEC,IAAI,EAAED,IAAI;IAAEF,EAAE,EAAFA;EAAG,CAAC,MACtB,IAAI,OAAOE,IAAI,KAAK,QAAQ,EAC/BA,IAAI,GAAG;IAAEC,IAAI,EAAEE,QAAQ,CAACH,IAAI,EAAE,CAAC,CAAC;IAAEF,EAAE,EAAFA;EAAG,CAAC,MAEtC,MAAM,IAAIM,SAAS,CAAC,0BAA0B,CAAC;EAEjDJ,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACK,KAAK,IAAIL,IAAI,CAACF,EAAE,CAACO,KAAK,IAAIP,EAAE,CAACO,KAAK;EACpDL,IAAI,CAACM,UAAU,GAAGT,SAAS,CAACG,IAAI,CAACK,KAAK,CAAC;EACvCL,IAAI,CAACO,IAAI,GAAGP,IAAI,CAACO,IAAI,IAAIP,IAAI,CAACF,EAAE,CAACS,IAAI,IAAIT,EAAE,CAACS,IAAI;EAChDP,IAAI,CAACQ,SAAS,GAAGX,SAAS,CAACG,IAAI,CAACO,IAAI,CAAC;EACrCP,IAAI,CAACS,QAAQ,GAAGT,IAAI,CAACS,QAAQ,IAAIT,IAAI,CAACF,EAAE,CAACW,QAAQ,IAAIX,EAAE,CAACW,QAAQ;EAChET,IAAI,CAACU,SAAS,GAAGV,IAAI,CAACU,SAAS,IAAIV,IAAI,CAACF,EAAE,CAACY,SAAS,IAAIZ,EAAE,CAACY,SAAS;EACpE,OAAOV,IAAI;AACb,CAAC;AACDW,MAAM,CAACC,OAAO,GAAGb,OAAO"},"metadata":{},"sourceType":"script"}