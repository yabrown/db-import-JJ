{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _guidParser = require(\"../guid-parser\");\nvar NULL_LENGTH = Buffer.from([0x00]);\nvar DATA_LENGTH = Buffer.from([0x10]);\nvar UniqueIdentifier = {\n  id: 0x24,\n  type: 'GUIDN',\n  name: 'UniqueIdentifier',\n  declaration: function declaration() {\n    return 'uniqueidentifier';\n  },\n  resolveLength: function resolveLength() {\n    return 16;\n  },\n  generateTypeInfo: function generateTypeInfo() {\n    return Buffer.from([this.id, 0x10]);\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    return DATA_LENGTH;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime().mark(function generateParameterData(parameter, options) {\n    return _regeneratorRuntime().wrap(function generateParameterData$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(parameter.value == null)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 2:\n          _context.next = 4;\n          return Buffer.from((0, _guidParser.guidToArray)(parameter.value));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value !== 'string') {\n      throw new TypeError('Invalid string.');\n    }\n    if (!/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(value)) {\n      throw new TypeError('Invalid GUID.');\n    }\n    return value;\n  }\n};\nvar _default = UniqueIdentifier;\nexports.default = _default;\nmodule.exports = UniqueIdentifier;","map":{"version":3,"names":["_guidParser","require","NULL_LENGTH","Buffer","from","DATA_LENGTH","UniqueIdentifier","id","type","name","declaration","resolveLength","generateTypeInfo","generateParameterLength","parameter","options","value","generateParameterData","_regeneratorRuntime","mark","wrap","generateParameterData$","_context","prev","next","abrupt","guidToArray","stop","validate","TypeError","test","module","exports"],"sources":["../../src/data-types/uniqueidentifier.ts"],"sourcesContent":["import { DataType } from '../data-type';\nimport { guidToArray } from '../guid-parser';\n\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst DATA_LENGTH = Buffer.from([0x10]);\n\nconst UniqueIdentifier: DataType = {\n  id: 0x24,\n  type: 'GUIDN',\n  name: 'UniqueIdentifier',\n\n  declaration: function() {\n    return 'uniqueidentifier';\n  },\n\n  resolveLength: function() {\n    return 16;\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([this.id, 0x10]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n\n  generateParameterData: function*(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    yield Buffer.from(guidToArray(parameter.value));\n  },\n\n  validate: function(value): string | null {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      throw new TypeError('Invalid string.');\n    }\n\n    if (!/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(value)) {\n      throw new TypeError('Invalid GUID.');\n    }\n\n    return value;\n  }\n};\n\nexport default UniqueIdentifier;\nmodule.exports = UniqueIdentifier;\n"],"mappings":";;;;;;;AACA,IAAAA,WAAA,GAAAC,OAAA;AAEA,IAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AACA,IAAMC,WAAW,GAAGF,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AAEA,IAAME,gBAA0B,GAAG;EACjCC,EAAE,EAAE,IAD6B;EAEjCC,IAAI,EAAE,OAF2B;EAGjCC,IAAI,EAAE,kBAH2B;EAKjCC,WAAW,EAAE,SAAAA,YAAA,EAAW;IACtB,OAAO,kBAAP;EACD,CAPgC;EASjCC,aAAa,EAAE,SAAAA,cAAA,EAAW;IACxB,OAAO,EAAP;EACD,CAXgC;EAajCC,gBAAgB,WAAAA,iBAAA,EAAG;IACjB,OAAOT,MAAM,CAACC,IAAP,CAAY,CAAC,KAAKG,EAAN,EAAU,IAAV,CAAZ,CAAP;EACD,CAfgC;EAiBjCM,uBAAuB,WAAAA,wBAACC,SAAD,EAAYC,OAAZ,EAAqB;IAC1C,IAAID,SAAS,CAACE,KAAV,IAAmB,IAAvB,EAA6B;MAC3B,OAAOd,WAAP;IACD;IAED,OAAOG,WAAP;EACD,CAvBgC;EAyBjCY,qBAAqB,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAF,sBAAUH,SAAV,EAAqBC,OAArB;IAAA,OAAAG,mBAAA,GAAAE,IAAA,UAAAC,uBAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MACjBV,SAAS,CAACE,KAAV,IAAmB,IAAvB;YAAAM,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA;QAAA;UAAAH,QAAA,CAAAE,IAAA;UAIA,OAAMrB,MAAM,CAACC,IAAP,CAAY,IAAAJ,WAAA,CAAA0B,WAAA,EAAYZ,SAAS,CAACE,KAAtB,CAAZ,CAAN;QAAA;QAAA;UAAA,OAAAM,QAAA,CAAAK,IAAA;MAAA;IAAA,GAAAV,qBAAA;EAAA,CA9B+B;EAiCjCW,QAAQ,EAAE,SAAAA,SAASZ,KAAT,EAA+B;IACvC,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAO,IAAP;IACD;IAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,MAAM,IAAIa,SAAJ,CAAc,iBAAd,CAAN;IACD;IAED,IAAI,CAAC,kEAAkEC,IAAlE,CAAuEd,KAAvE,CAAL,EAAoF;MAClF,MAAM,IAAIa,SAAJ,CAAc,eAAd,CAAN;IACD;IAED,OAAOb,KAAP;EACD;AA/CgC,CAAnC;eAkDeV,gB;;AACfyB,MAAM,CAACC,OAAP,GAAiB1B,gBAAjB"},"metadata":{},"sourceType":"script"}