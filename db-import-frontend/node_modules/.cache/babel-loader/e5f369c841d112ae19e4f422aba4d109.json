{"ast":null,"code":"'use strict';\n\nvar log = require('npmlog');\nvar execFile = require('child_process').execFile;\nvar path = require('path');\nfunction logWithPrefix(log, prefix) {\n  function setPrefix(logFunction) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return logFunction.apply(null, [prefix].concat(args));\n    }; // eslint-disable-line\n  }\n\n  return {\n    silly: setPrefix(log.silly),\n    verbose: setPrefix(log.verbose),\n    info: setPrefix(log.info),\n    warn: setPrefix(log.warn),\n    error: setPrefix(log.error)\n  };\n}\nfunction regGetValue(key, value, addOpts, cb) {\n  var outReValue = value.replace(/\\W/g, '.');\n  var outRe = new RegExp(\"^\\\\s+\".concat(outReValue, \"\\\\s+REG_\\\\w+\\\\s+(\\\\S.*)$\"), 'im');\n  var reg = path.join(process.env.SystemRoot, 'System32', 'reg.exe');\n  var regArgs = ['query', key, '/v', value].concat(addOpts);\n  log.silly('reg', 'running', reg, regArgs);\n  var child = execFile(reg, regArgs, {\n    encoding: 'utf8'\n  }, function (err, stdout, stderr) {\n    log.silly('reg', 'reg.exe stdout = %j', stdout);\n    if (err || stderr.trim() !== '') {\n      log.silly('reg', 'reg.exe err = %j', err && (err.stack || err));\n      log.silly('reg', 'reg.exe stderr = %j', stderr);\n      return cb(err, stderr);\n    }\n    var result = outRe.exec(stdout);\n    if (!result) {\n      log.silly('reg', 'error parsing stdout');\n      return cb(new Error('Could not parse output of reg.exe'));\n    }\n    log.silly('reg', 'found: %j', result[1]);\n    cb(null, result[1]);\n  });\n  child.stdin.end();\n}\nfunction regSearchKeys(keys, value, addOpts, cb) {\n  var i = 0;\n  var search = function search() {\n    log.silly('reg-search', 'looking for %j in %j', value, keys[i]);\n    regGetValue(keys[i], value, addOpts, function (err, res) {\n      ++i;\n      if (err && i < keys.length) {\n        return search();\n      }\n      cb(err, res);\n    });\n  };\n  search();\n}\nmodule.exports = {\n  logWithPrefix: logWithPrefix,\n  regGetValue: regGetValue,\n  regSearchKeys: regSearchKeys\n};","map":{"version":3,"names":["log","require","execFile","path","logWithPrefix","prefix","setPrefix","logFunction","_len","arguments","length","args","Array","_key","apply","concat","silly","verbose","info","warn","error","regGetValue","key","value","addOpts","cb","outReValue","replace","outRe","RegExp","reg","join","process","env","SystemRoot","regArgs","child","encoding","err","stdout","stderr","trim","stack","result","exec","Error","stdin","end","regSearchKeys","keys","i","search","res","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/node-gyp/lib/util.js"],"sourcesContent":["'use strict'\n\nconst log = require('npmlog')\nconst execFile = require('child_process').execFile\nconst path = require('path')\n\nfunction logWithPrefix (log, prefix) {\n  function setPrefix (logFunction) {\n    return (...args) => logFunction.apply(null, [ prefix, ...args ]) // eslint-disable-line\n  }\n  return {\n    silly: setPrefix(log.silly),\n    verbose: setPrefix(log.verbose),\n    info: setPrefix(log.info),\n    warn: setPrefix(log.warn),\n    error: setPrefix(log.error)\n  }\n}\n\nfunction regGetValue (key, value, addOpts, cb) {\n  const outReValue = value.replace(/\\W/g, '.')\n  const outRe = new RegExp(`^\\\\s+${outReValue}\\\\s+REG_\\\\w+\\\\s+(\\\\S.*)$`, 'im')\n  const reg = path.join(process.env.SystemRoot, 'System32', 'reg.exe')\n  const regArgs = ['query', key, '/v', value].concat(addOpts)\n\n  log.silly('reg', 'running', reg, regArgs)\n  const child = execFile(reg, regArgs, { encoding: 'utf8' },\n    function (err, stdout, stderr) {\n      log.silly('reg', 'reg.exe stdout = %j', stdout)\n      if (err || stderr.trim() !== '') {\n        log.silly('reg', 'reg.exe err = %j', err && (err.stack || err))\n        log.silly('reg', 'reg.exe stderr = %j', stderr)\n        return cb(err, stderr)\n      }\n\n      const result = outRe.exec(stdout)\n      if (!result) {\n        log.silly('reg', 'error parsing stdout')\n        return cb(new Error('Could not parse output of reg.exe'))\n      }\n      log.silly('reg', 'found: %j', result[1])\n      cb(null, result[1])\n    })\n  child.stdin.end()\n}\n\nfunction regSearchKeys (keys, value, addOpts, cb) {\n  var i = 0\n  const search = () => {\n    log.silly('reg-search', 'looking for %j in %j', value, keys[i])\n    regGetValue(keys[i], value, addOpts, (err, res) => {\n      ++i\n      if (err && i < keys.length) { return search() }\n      cb(err, res)\n    })\n  }\n  search()\n}\n\nmodule.exports = {\n  logWithPrefix: logWithPrefix,\n  regGetValue: regGetValue,\n  regSearchKeys: regSearchKeys\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}