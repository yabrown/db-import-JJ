{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\nvar NText = {\n  id: 0x63,\n  type: 'NTEXT',\n  name: 'NText',\n  hasTableName: true,\n  declaration: function declaration() {\n    return 'ntext';\n  },\n  resolveLength: function resolveLength(parameter) {\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (value != null) {\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter, _options) {\n    var buffer = Buffer.alloc(10);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length, 1);\n    if (parameter.collation) {\n      parameter.collation.toBuffer().copy(buffer, 5, 0, 5);\n    }\n    return buffer;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    var buffer = Buffer.alloc(4);\n    buffer.writeInt32LE(Buffer.byteLength(parameter.value, 'ucs2'), 0);\n    return buffer;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime().mark(function generateParameterData(parameter, options) {\n    return _regeneratorRuntime().wrap(function generateParameterData$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(parameter.value == null)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 2:\n          _context.next = 4;\n          return Buffer.from(parameter.value.toString(), 'ucs2');\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n    if (typeof value !== 'string') {\n      throw new TypeError('Invalid string.');\n    }\n    return value;\n  }\n};\nvar _default = NText;\nexports.default = _default;\nmodule.exports = NText;","map":{"version":3,"names":["NULL_LENGTH","Buffer","from","NText","id","type","name","hasTableName","declaration","resolveLength","parameter","value","length","generateTypeInfo","_options","buffer","alloc","writeUInt8","writeInt32LE","collation","toBuffer","copy","generateParameterLength","options","byteLength","generateParameterData","_regeneratorRuntime","mark","wrap","generateParameterData$","_context","prev","next","abrupt","toString","stop","validate","TypeError","module","exports"],"sources":["../../src/data-types/ntext.ts"],"sourcesContent":["import { DataType } from '../data-type';\n\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\n\nconst NText: DataType = {\n  id: 0x63,\n  type: 'NTEXT',\n  name: 'NText',\n\n  hasTableName: true,\n\n  declaration: function() {\n    return 'ntext';\n  },\n\n  resolveLength: function(parameter) {\n    const value = parameter.value as any; // Temporary solution. Remove 'any' later.\n\n    if (value != null) {\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n\n  generateTypeInfo(parameter, _options) {\n    const buffer = Buffer.alloc(10);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length!, 1);\n\n    if (parameter.collation) {\n      parameter.collation.toBuffer().copy(buffer, 5, 0, 5);\n    }\n\n    return buffer;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const buffer = Buffer.alloc(4);\n    buffer.writeInt32LE(Buffer.byteLength(parameter.value, 'ucs2'), 0);\n    return buffer;\n  },\n\n  generateParameterData: function*(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    yield Buffer.from(parameter.value.toString(), 'ucs2');\n  },\n\n  validate: function(value): string | null {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      throw new TypeError('Invalid string.');\n    }\n\n    return value;\n  }\n};\n\nexport default NText;\nmodule.exports = NText;\n"],"mappings":";;;;;;;AAEA,IAAMA,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAZ,CAApB;AAEA,IAAMC,KAAe,GAAG;EACtBC,EAAE,EAAE,IADkB;EAEtBC,IAAI,EAAE,OAFgB;EAGtBC,IAAI,EAAE,OAHgB;EAKtBC,YAAY,EAAE,IALQ;EAOtBC,WAAW,EAAE,SAAAA,YAAA,EAAW;IACtB,OAAO,OAAP;EACD,CATqB;EAWtBC,aAAa,EAAE,SAAAA,cAASC,SAAT,EAAoB;IACjC,IAAMC,KAAK,GAAGD,SAAS,CAACC,KAAxB,CADiC,CACK;;IAEtC,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAOA,KAAK,CAACC,MAAb;IACD,CAFD,MAEO;MACL,OAAO,CAAC,CAAR;IACD;EACF,CAnBqB;EAqBtBC,gBAAgB,WAAAA,iBAACH,SAAD,EAAYI,QAAZ,EAAsB;IACpC,IAAMC,MAAM,GAAGd,MAAM,CAACe,KAAP,CAAa,EAAb,CAAf;IACAD,MAAM,CAACE,UAAP,CAAkB,KAAKb,EAAvB,EAA2B,CAA3B;IACAW,MAAM,CAACG,YAAP,CAAoBR,SAAS,CAACE,MAA9B,EAAuC,CAAvC;IAEA,IAAIF,SAAS,CAACS,SAAd,EAAyB;MACvBT,SAAS,CAACS,SAAV,CAAoBC,QAApB,GAA+BC,IAA/B,CAAoCN,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD;IACD;IAED,OAAOA,MAAP;EACD,CA/BqB;EAiCtBO,uBAAuB,WAAAA,wBAACZ,SAAD,EAAYa,OAAZ,EAAqB;IAC1C,IAAIb,SAAS,CAACC,KAAV,IAAmB,IAAvB,EAA6B;MAC3B,OAAOX,WAAP;IACD;IAED,IAAMe,MAAM,GAAGd,MAAM,CAACe,KAAP,CAAa,CAAb,CAAf;IACAD,MAAM,CAACG,YAAP,CAAoBjB,MAAM,CAACuB,UAAP,CAAkBd,SAAS,CAACC,KAA5B,EAAmC,MAAnC,CAApB,EAAgE,CAAhE;IACA,OAAOI,MAAP;EACD,CAzCqB;EA2CtBU,qBAAqB,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAF,sBAAUf,SAAV,EAAqBa,OAArB;IAAA,OAAAG,mBAAA,GAAAE,IAAA,UAAAC,uBAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MACjBtB,SAAS,CAACC,KAAV,IAAmB,IAAvB;YAAAmB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA;QAAA;UAAAH,QAAA,CAAAE,IAAA;UAIA,OAAM/B,MAAM,CAACC,IAAP,CAAYQ,SAAS,CAACC,KAAV,CAAgBuB,QAAhB,EAAZ,EAAwC,MAAxC,CAAN;QAAA;QAAA;UAAA,OAAAJ,QAAA,CAAAK,IAAA;MAAA;IAAA,GAAAV,qBAAA;EAAA,CAhDoB;EAmDtBW,QAAQ,EAAE,SAAAA,SAASzB,KAAT,EAA+B;IACvC,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAO,IAAP;IACD;IAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,MAAM,IAAI0B,SAAJ,CAAc,iBAAd,CAAN;IACD;IAED,OAAO1B,KAAP;EACD;AA7DqB,CAAxB;eAgEeR,K;;AACfmC,MAAM,CAACC,OAAP,GAAiBpC,KAAjB"},"metadata":{},"sourceType":"script"}