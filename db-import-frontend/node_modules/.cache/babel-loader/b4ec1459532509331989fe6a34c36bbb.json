{"ast":null,"code":"module.exports = MultiLineString;\nvar util = require('util');\nvar Types = require('./types');\nvar Geometry = require('./geometry');\nvar Point = require('./point');\nvar LineString = require('./linestring');\nvar BinaryWriter = require('./binarywriter');\nfunction MultiLineString(lineStrings, srid) {\n  Geometry.call(this);\n  this.lineStrings = lineStrings || [];\n  this.srid = srid;\n  if (this.lineStrings.length > 0) {\n    this.hasZ = this.lineStrings[0].hasZ;\n    this.hasM = this.lineStrings[0].hasM;\n  }\n}\nutil.inherits(MultiLineString, Geometry);\nMultiLineString.Z = function (lineStrings, srid) {\n  var multiLineString = new MultiLineString(lineStrings, srid);\n  multiLineString.hasZ = true;\n  return multiLineString;\n};\nMultiLineString.M = function (lineStrings, srid) {\n  var multiLineString = new MultiLineString(lineStrings, srid);\n  multiLineString.hasM = true;\n  return multiLineString;\n};\nMultiLineString.ZM = function (lineStrings, srid) {\n  var multiLineString = new MultiLineString(lineStrings, srid);\n  multiLineString.hasZ = true;\n  multiLineString.hasM = true;\n  return multiLineString;\n};\nMultiLineString._parseWkt = function (value, options) {\n  var multiLineString = new MultiLineString();\n  multiLineString.srid = options.srid;\n  multiLineString.hasZ = options.hasZ;\n  multiLineString.hasM = options.hasM;\n  if (value.isMatch(['EMPTY'])) return multiLineString;\n  value.expectGroupStart();\n  do {\n    value.expectGroupStart();\n    multiLineString.lineStrings.push(new LineString(value.matchCoordinates(options)));\n    value.expectGroupEnd();\n  } while (value.isMatch([',']));\n  value.expectGroupEnd();\n  return multiLineString;\n};\nMultiLineString._parseWkb = function (value, options) {\n  var multiLineString = new MultiLineString();\n  multiLineString.srid = options.srid;\n  multiLineString.hasZ = options.hasZ;\n  multiLineString.hasM = options.hasM;\n  var lineStringCount = value.readUInt32();\n  for (var i = 0; i < lineStringCount; i++) multiLineString.lineStrings.push(Geometry.parse(value, options));\n  return multiLineString;\n};\nMultiLineString._parseTwkb = function (value, options) {\n  var multiLineString = new MultiLineString();\n  multiLineString.hasZ = options.hasZ;\n  multiLineString.hasM = options.hasM;\n  if (options.isEmpty) return multiLineString;\n  var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\n  var lineStringCount = value.readVarInt();\n  for (var i = 0; i < lineStringCount; i++) {\n    var lineString = new LineString();\n    lineString.hasZ = options.hasZ;\n    lineString.hasM = options.hasM;\n    var pointCount = value.readVarInt();\n    for (var j = 0; j < pointCount; j++) lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\n    multiLineString.lineStrings.push(lineString);\n  }\n  return multiLineString;\n};\nMultiLineString._parseGeoJSON = function (value) {\n  var multiLineString = new MultiLineString();\n  if (value.coordinates.length > 0 && value.coordinates[0].length > 0) multiLineString.hasZ = value.coordinates[0][0].length > 2;\n  for (var i = 0; i < value.coordinates.length; i++) multiLineString.lineStrings.push(LineString._parseGeoJSON({\n    coordinates: value.coordinates[i]\n  }));\n  return multiLineString;\n};\nMultiLineString.prototype.toWkt = function () {\n  if (this.lineStrings.length === 0) return this._getWktType(Types.wkt.MultiLineString, true);\n  var wkt = this._getWktType(Types.wkt.MultiLineString, false) + '(';\n  for (var i = 0; i < this.lineStrings.length; i++) wkt += this.lineStrings[i]._toInnerWkt() + ',';\n  wkt = wkt.slice(0, -1);\n  wkt += ')';\n  return wkt;\n};\nMultiLineString.prototype.toWkb = function () {\n  var wkb = new BinaryWriter(this._getWkbSize());\n  wkb.writeInt8(1);\n  this._writeWkbType(wkb, Types.wkb.MultiLineString);\n  wkb.writeUInt32LE(this.lineStrings.length);\n  for (var i = 0; i < this.lineStrings.length; i++) wkb.writeBuffer(this.lineStrings[i].toWkb({\n    srid: this.srid\n  }));\n  return wkb.buffer;\n};\nMultiLineString.prototype.toTwkb = function () {\n  var twkb = new BinaryWriter(0, true);\n  var precision = Geometry.getTwkbPrecision(5, 0, 0);\n  var isEmpty = this.lineStrings.length === 0;\n  this._writeTwkbHeader(twkb, Types.wkb.MultiLineString, precision, isEmpty);\n  if (this.lineStrings.length > 0) {\n    twkb.writeVarInt(this.lineStrings.length);\n    var previousPoint = new Point(0, 0, 0, 0);\n    for (var i = 0; i < this.lineStrings.length; i++) {\n      twkb.writeVarInt(this.lineStrings[i].points.length);\n      for (var j = 0; j < this.lineStrings[i].points.length; j++) this.lineStrings[i].points[j]._writeTwkbPoint(twkb, precision, previousPoint);\n    }\n  }\n  return twkb.buffer;\n};\nMultiLineString.prototype._getWkbSize = function () {\n  var size = 1 + 4 + 4;\n  for (var i = 0; i < this.lineStrings.length; i++) size += this.lineStrings[i]._getWkbSize();\n  return size;\n};\nMultiLineString.prototype.toGeoJSON = function (options) {\n  var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\n  geoJSON.type = Types.geoJSON.MultiLineString;\n  geoJSON.coordinates = [];\n  for (var i = 0; i < this.lineStrings.length; i++) geoJSON.coordinates.push(this.lineStrings[i].toGeoJSON().coordinates);\n  return geoJSON;\n};","map":{"version":3,"names":["module","exports","MultiLineString","util","require","Types","Geometry","Point","LineString","BinaryWriter","lineStrings","srid","call","length","hasZ","hasM","inherits","Z","multiLineString","M","ZM","_parseWkt","value","options","isMatch","expectGroupStart","push","matchCoordinates","expectGroupEnd","_parseWkb","lineStringCount","readUInt32","i","parse","_parseTwkb","isEmpty","previousPoint","undefined","readVarInt","lineString","pointCount","j","points","_readTwkbPoint","_parseGeoJSON","coordinates","prototype","toWkt","_getWktType","wkt","_toInnerWkt","slice","toWkb","wkb","_getWkbSize","writeInt8","_writeWkbType","writeUInt32LE","writeBuffer","buffer","toTwkb","twkb","precision","getTwkbPrecision","_writeTwkbHeader","writeVarInt","_writeTwkbPoint","size","toGeoJSON","geoJSON","type"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/wkx/lib/multilinestring.js"],"sourcesContent":["module.exports = MultiLineString;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar LineString = require('./linestring');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiLineString(lineStrings, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.lineStrings = lineStrings || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        this.hasZ = this.lineStrings[0].hasZ;\r\n        this.hasM = this.lineStrings[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiLineString, Geometry);\r\n\r\nMultiLineString.Z = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.M = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.ZM = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkt = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiLineString;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n        multiLineString.lineStrings.push(new LineString(value.matchCoordinates(options)));\r\n        value.expectGroupEnd();\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    var lineStringCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < lineStringCount; i++)\r\n        multiLineString.lineStrings.push(Geometry.parse(value, options));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseTwkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiLineString;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var lineStringCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < lineStringCount; i++) {\r\n        var lineString = new LineString();\r\n        lineString.hasZ = options.hasZ;\r\n        lineString.hasM = options.hasM;\r\n\r\n        var pointCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < pointCount; j++)\r\n            lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        multiLineString.lineStrings.push(lineString);\r\n    }\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseGeoJSON = function (value) {\r\n    var multiLineString = new MultiLineString();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0)\r\n        multiLineString.hasZ = value.coordinates[0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiLineString.lineStrings.push(LineString._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.prototype.toWkt = function () {\r\n    if (this.lineStrings.length === 0)\r\n        return this._getWktType(Types.wkt.MultiLineString, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiLineString, false) + '(';\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkt += this.lineStrings[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiLineString.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiLineString);\r\n    wkb.writeUInt32LE(this.lineStrings.length);\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkb.writeBuffer(this.lineStrings[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.lineStrings.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiLineString, precision, isEmpty);\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        twkb.writeVarInt(this.lineStrings.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.lineStrings.length; i++) {\r\n            twkb.writeVarInt(this.lineStrings[i].points.length);\r\n\r\n            for (var j = 0; j < this.lineStrings[i].points.length; j++)\r\n                this.lineStrings[i].points[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        size += this.lineStrings[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiLineString.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiLineString;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        geoJSON.coordinates.push(this.lineStrings[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}