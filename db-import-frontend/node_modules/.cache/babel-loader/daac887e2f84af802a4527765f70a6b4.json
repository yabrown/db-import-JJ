{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sprintfJs = require(\"sprintf-js\");\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar optionBufferSize = 20;\nvar TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\nvar ENCRYPT = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\nvar encryptByValue = {};\nfor (var name in ENCRYPT) {\n  var value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\nvar MARS = {\n  OFF: 0x00,\n  ON: 0x01\n};\nvar marsByValue = {};\nfor (var _name in MARS) {\n  var _value = MARS[_name];\n  marsByValue[_value] = _name;\n}\n\n/*\n  s2.2.6.4\n */\nvar PreloginPayload = /*#__PURE__*/function () {\n  function PreloginPayload() {\n    var bufferOrOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      encrypt: false,\n      version: {\n        major: 0,\n        minor: 0,\n        build: 0,\n        subbuild: 0\n      }\n    };\n    _classCallCheck(this, PreloginPayload);\n    this.data = void 0;\n    this.options = void 0;\n    this.version = void 0;\n    this.encryption = void 0;\n    this.encryptionString = void 0;\n    this.instance = void 0;\n    this.threadId = void 0;\n    this.mars = void 0;\n    this.marsString = void 0;\n    this.fedAuthRequired = void 0;\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = {\n        encrypt: false,\n        version: {\n          major: 0,\n          minor: 0,\n          build: 0,\n          subbuild: 0\n        }\n      };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n    this.extractOptions();\n  }\n  _createClass(PreloginPayload, [{\n    key: \"createOptions\",\n    value: function createOptions() {\n      var options = [this.createVersionOption(), this.createEncryptionOption(), this.createInstanceOption(), this.createThreadIdOption(), this.createMarsOption(), this.createFedAuthOption()];\n      var length = 0;\n      for (var i = 0, len = options.length; i < len; i++) {\n        var option = options[i];\n        length += 5 + option.data.length;\n      }\n      length++; // terminator\n\n      this.data = Buffer.alloc(length, 0);\n      var optionOffset = 0;\n      var optionDataOffset = 5 * options.length + 1;\n      for (var j = 0, _len = options.length; j < _len; j++) {\n        var _option = options[j];\n        this.data.writeUInt8(_option.token, optionOffset + 0);\n        this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n        this.data.writeUInt16BE(_option.data.length, optionOffset + 3);\n        optionOffset += 5;\n        _option.data.copy(this.data, optionDataOffset);\n        optionDataOffset += _option.data.length;\n      }\n      this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n    }\n  }, {\n    key: \"createVersionOption\",\n    value: function createVersionOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt8(this.options.version.major);\n      buffer.writeUInt8(this.options.version.minor);\n      buffer.writeUInt16BE(this.options.version.build);\n      buffer.writeUInt16BE(this.options.version.subbuild);\n      return {\n        token: TOKEN.VERSION,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createEncryptionOption\",\n    value: function createEncryptionOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      if (this.options.encrypt) {\n        buffer.writeUInt8(ENCRYPT.ON);\n      } else {\n        buffer.writeUInt8(ENCRYPT.NOT_SUP);\n      }\n      return {\n        token: TOKEN.ENCRYPTION,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createInstanceOption\",\n    value: function createInstanceOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt8(0x00);\n      return {\n        token: TOKEN.INSTOPT,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createThreadIdOption\",\n    value: function createThreadIdOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt32BE(0x00);\n      return {\n        token: TOKEN.THREADID,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createMarsOption\",\n    value: function createMarsOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt8(MARS.OFF);\n      return {\n        token: TOKEN.MARS,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"createFedAuthOption\",\n    value: function createFedAuthOption() {\n      var buffer = new _writableTrackingBuffer.default(optionBufferSize);\n      buffer.writeUInt8(0x01);\n      return {\n        token: TOKEN.FEDAUTHREQUIRED,\n        data: buffer.data\n      };\n    }\n  }, {\n    key: \"extractOptions\",\n    value: function extractOptions() {\n      var offset = 0;\n      while (this.data[offset] !== TOKEN.TERMINATOR) {\n        var dataOffset = this.data.readUInt16BE(offset + 1);\n        var dataLength = this.data.readUInt16BE(offset + 3);\n        switch (this.data[offset]) {\n          case TOKEN.VERSION:\n            this.extractVersion(dataOffset);\n            break;\n          case TOKEN.ENCRYPTION:\n            this.extractEncryption(dataOffset);\n            break;\n          case TOKEN.INSTOPT:\n            this.extractInstance(dataOffset);\n            break;\n          case TOKEN.THREADID:\n            if (dataLength > 0) {\n              this.extractThreadId(dataOffset);\n            }\n            break;\n          case TOKEN.MARS:\n            this.extractMars(dataOffset);\n            break;\n          case TOKEN.FEDAUTHREQUIRED:\n            this.extractFedAuth(dataOffset);\n            break;\n        }\n        offset += 5;\n        dataOffset += dataLength;\n      }\n    }\n  }, {\n    key: \"extractVersion\",\n    value: function extractVersion(offset) {\n      this.version = {\n        major: this.data.readUInt8(offset + 0),\n        minor: this.data.readUInt8(offset + 1),\n        build: this.data.readUInt16BE(offset + 2),\n        subbuild: this.data.readUInt16BE(offset + 4)\n      };\n    }\n  }, {\n    key: \"extractEncryption\",\n    value: function extractEncryption(offset) {\n      this.encryption = this.data.readUInt8(offset);\n      this.encryptionString = encryptByValue[this.encryption];\n    }\n  }, {\n    key: \"extractInstance\",\n    value: function extractInstance(offset) {\n      this.instance = this.data.readUInt8(offset);\n    }\n  }, {\n    key: \"extractThreadId\",\n    value: function extractThreadId(offset) {\n      this.threadId = this.data.readUInt32BE(offset);\n    }\n  }, {\n    key: \"extractMars\",\n    value: function extractMars(offset) {\n      this.mars = this.data.readUInt8(offset);\n      this.marsString = marsByValue[this.mars];\n    }\n  }, {\n    key: \"extractFedAuth\",\n    value: function extractFedAuth(offset) {\n      this.fedAuthRequired = this.data.readUInt8(offset);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + 'PreLogin - ' + (0, _sprintfJs.sprintf)('version:%d.%d.%d.%d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)', this.version.major, this.version.minor, this.version.build, this.version.subbuild, this.encryption ? this.encryption : 0, this.encryptionString ? this.encryptionString : '', this.instance ? this.instance : 0, this.threadId ? this.threadId : 0, this.mars ? this.mars : 0, this.marsString ? this.marsString : '');\n    }\n  }]);\n  return PreloginPayload;\n}();\nvar _default = PreloginPayload;\nexports.default = _default;\nmodule.exports = PreloginPayload;","map":{"version":3,"names":["_sprintfJs","require","_writableTrackingBuffer","_interopRequireDefault","optionBufferSize","TOKEN","VERSION","ENCRYPTION","INSTOPT","THREADID","MARS","FEDAUTHREQUIRED","TERMINATOR","ENCRYPT","OFF","ON","NOT_SUP","REQ","encryptByValue","name","value","marsByValue","PreloginPayload","bufferOrOptions","arguments","length","undefined","encrypt","version","major","minor","build","subbuild","_classCallCheck","data","options","encryption","encryptionString","instance","threadId","mars","marsString","fedAuthRequired","Buffer","createOptions","extractOptions","_createClass","key","createVersionOption","createEncryptionOption","createInstanceOption","createThreadIdOption","createMarsOption","createFedAuthOption","i","len","option","alloc","optionOffset","optionDataOffset","j","writeUInt8","token","writeUInt16BE","copy","buffer","default","writeUInt32BE","offset","dataOffset","readUInt16BE","dataLength","extractVersion","extractEncryption","extractInstance","extractThreadId","extractMars","extractFedAuth","readUInt8","readUInt32BE","toString","indent","sprintf","module","exports"],"sources":["../src/prelogin-payload.ts"],"sourcesContent":["import { sprintf } from 'sprintf-js';\n\nimport WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\n\nconst optionBufferSize = 20;\n\nconst TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\n\nconst ENCRYPT: { [key: string]: number } = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\n\nconst encryptByValue: { [key: number]: string } = {};\n\nfor (const name in ENCRYPT) {\n  const value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\n\nconst MARS: { [key: string]: number } = {\n  OFF: 0x00,\n  ON: 0x01\n};\n\nconst marsByValue: { [key: number]: string } = {};\n\nfor (const name in MARS) {\n  const value = MARS[name];\n  marsByValue[value] = name;\n}\n\ninterface Options {\n  encrypt: boolean;\n  version: {\n    major: number;\n    minor: number;\n    build: number;\n    subbuild: number;\n  };\n}\n\n/*\n  s2.2.6.4\n */\nclass PreloginPayload {\n  data!: Buffer;\n  options: Options;\n\n  version!: {\n    major: number;\n    minor: number;\n    build: number;\n    subbuild: number;\n  };\n\n  encryption!: number;\n  encryptionString!: string;\n\n  instance!: number;\n\n  threadId!: number;\n\n  mars!: number;\n  marsString!: string;\n  fedAuthRequired!: number;\n\n  constructor(bufferOrOptions: Buffer | Options = { encrypt: false, version: { major: 0, minor: 0, build: 0, subbuild: 0 } }) {\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = { encrypt: false, version: { major: 0, minor: 0, build: 0, subbuild: 0 } };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n    this.extractOptions();\n  }\n\n  createOptions() {\n    const options = [\n      this.createVersionOption(),\n      this.createEncryptionOption(),\n      this.createInstanceOption(),\n      this.createThreadIdOption(),\n      this.createMarsOption(),\n      this.createFedAuthOption()\n    ];\n\n    let length = 0;\n    for (let i = 0, len = options.length; i < len; i++) {\n      const option = options[i];\n      length += 5 + option.data.length;\n    }\n    length++; // terminator\n    this.data = Buffer.alloc(length, 0);\n    let optionOffset = 0;\n    let optionDataOffset = 5 * options.length + 1;\n\n    for (let j = 0, len = options.length; j < len; j++) {\n      const option = options[j];\n      this.data.writeUInt8(option.token, optionOffset + 0);\n      this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n      this.data.writeUInt16BE(option.data.length, optionOffset + 3);\n      optionOffset += 5;\n      option.data.copy(this.data, optionDataOffset);\n      optionDataOffset += option.data.length;\n    }\n\n    this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n  }\n\n  createVersionOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(this.options.version.major);\n    buffer.writeUInt8(this.options.version.minor);\n    buffer.writeUInt16BE(this.options.version.build);\n    buffer.writeUInt16BE(this.options.version.subbuild);\n    return {\n      token: TOKEN.VERSION,\n      data: buffer.data\n    };\n  }\n\n  createEncryptionOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    if (this.options.encrypt) {\n      buffer.writeUInt8(ENCRYPT.ON);\n    } else {\n      buffer.writeUInt8(ENCRYPT.NOT_SUP);\n    }\n    return {\n      token: TOKEN.ENCRYPTION,\n      data: buffer.data\n    };\n  }\n\n  createInstanceOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(0x00);\n    return {\n      token: TOKEN.INSTOPT,\n      data: buffer.data\n    };\n  }\n\n  createThreadIdOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt32BE(0x00);\n    return {\n      token: TOKEN.THREADID,\n      data: buffer.data\n    };\n  }\n\n  createMarsOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(MARS.OFF);\n    return {\n      token: TOKEN.MARS,\n      data: buffer.data\n    };\n  }\n\n  createFedAuthOption() {\n    const buffer = new WritableTrackingBuffer(optionBufferSize);\n    buffer.writeUInt8(0x01);\n    return {\n      token: TOKEN.FEDAUTHREQUIRED,\n      data: buffer.data\n    };\n  }\n\n  extractOptions() {\n    let offset = 0;\n    while (this.data[offset] !== TOKEN.TERMINATOR) {\n      let dataOffset = this.data.readUInt16BE(offset + 1);\n      const dataLength = this.data.readUInt16BE(offset + 3);\n      switch (this.data[offset]) {\n        case TOKEN.VERSION:\n          this.extractVersion(dataOffset);\n          break;\n        case TOKEN.ENCRYPTION:\n          this.extractEncryption(dataOffset);\n          break;\n        case TOKEN.INSTOPT:\n          this.extractInstance(dataOffset);\n          break;\n        case TOKEN.THREADID:\n          if (dataLength > 0) {\n            this.extractThreadId(dataOffset);\n          }\n          break;\n        case TOKEN.MARS:\n          this.extractMars(dataOffset);\n          break;\n        case TOKEN.FEDAUTHREQUIRED:\n          this.extractFedAuth(dataOffset);\n          break;\n      }\n      offset += 5;\n      dataOffset += dataLength;\n    }\n  }\n\n  extractVersion(offset: number) {\n    this.version = {\n      major: this.data.readUInt8(offset + 0),\n      minor: this.data.readUInt8(offset + 1),\n      build: this.data.readUInt16BE(offset + 2),\n      subbuild: this.data.readUInt16BE(offset + 4)\n    };\n  }\n\n  extractEncryption(offset: number) {\n    this.encryption = this.data.readUInt8(offset);\n    this.encryptionString = encryptByValue[this.encryption];\n  }\n\n  extractInstance(offset: number) {\n    this.instance = this.data.readUInt8(offset);\n  }\n\n  extractThreadId(offset: number) {\n    this.threadId = this.data.readUInt32BE(offset);\n  }\n\n  extractMars(offset: number) {\n    this.mars = this.data.readUInt8(offset);\n    this.marsString = marsByValue[this.mars];\n  }\n\n  extractFedAuth(offset: number) {\n    this.fedAuthRequired = this.data.readUInt8(offset);\n  }\n\n  toString(indent = '') {\n    return indent + 'PreLogin - ' + sprintf(\n      'version:%d.%d.%d.%d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)',\n      this.version.major, this.version.minor, this.version.build, this.version.subbuild,\n      this.encryption ? this.encryption : 0,\n      this.encryptionString ? this.encryptionString : '',\n      this.instance ? this.instance : 0,\n      this.threadId ? this.threadId : 0,\n      this.mars ? this.mars : 0,\n      this.marsString ? this.marsString : ''\n    );\n  }\n}\n\nexport default PreloginPayload;\nmodule.exports = PreloginPayload;\n"],"mappings":";;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEA,IAAAC,uBAAA,GAAAC,sBAAA,CAAAF,OAAA;;;;;;AAEA,IAAMG,gBAAgB,GAAG,EAAzB;AAEA,IAAMC,KAAK,GAAG;EACZC,OAAO,EAAE,IADG;EAEZC,UAAU,EAAE,IAFA;EAGZC,OAAO,EAAE,IAHG;EAIZC,QAAQ,EAAE,IAJE;EAKZC,IAAI,EAAE,IALM;EAMZC,eAAe,EAAE,IANL;EAOZC,UAAU,EAAE;AAPA,CAAd;AAUA,IAAMC,OAAkC,GAAG;EACzCC,GAAG,EAAE,IADoC;EAEzCC,EAAE,EAAE,IAFqC;EAGzCC,OAAO,EAAE,IAHgC;EAIzCC,GAAG,EAAE;AAJoC,CAA3C;AAOA,IAAMC,cAAyC,GAAG,EAAlD;AAEA,KAAK,IAAMC,IAAX,IAAmBN,OAAnB,EAA4B;EAC1B,IAAMO,KAAK,GAAGP,OAAO,CAACM,IAAD,CAArB;EACAD,cAAc,CAACE,KAAD,CAAd,GAAwBD,IAAxB;AACD;AAED,IAAMT,IAA+B,GAAG;EACtCI,GAAG,EAAE,IADiC;EAEtCC,EAAE,EAAE;AAFkC,CAAxC;AAKA,IAAMM,WAAsC,GAAG,EAA/C;AAEA,KAAK,IAAMF,KAAX,IAAmBT,IAAnB,EAAyB;EACvB,IAAMU,MAAK,GAAGV,IAAI,CAACS,KAAD,CAAlB;EACAE,WAAW,CAACD,MAAD,CAAX,GAAqBD,KAArB;AACD;;AAYD;AACA;AACA;AAFA,IAGMG,eAAN;EAsBE,SAAAA,gBAAA,EAA4H;IAAA,IAAhHC,eAAiC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;MAAEG,OAAO,EAAE,KAAX;MAAkBC,OAAO,EAAE;QAAEC,KAAK,EAAE,CAAT;QAAYC,KAAK,EAAE,CAAnB;QAAsBC,KAAK,EAAE,CAA7B;QAAgCC,QAAQ,EAAE;MAA1C;IAA3B,CAArC;IAAAC,eAAA,OAAAX,eAAA;IAAiH,KArB5HY,IAqB4H;IAAA,KApB5HC,OAoB4H;IAAA,KAlB5HP,OAkB4H;IAAA,KAX5HQ,UAW4H;IAAA,KAV5HC,gBAU4H;IAAA,KAR5HC,QAQ4H;IAAA,KAN5HC,QAM4H;IAAA,KAJ5HC,IAI4H;IAAA,KAH5HC,UAG4H;IAAA,KAF5HC,eAE4H;IAC1H,IAAInB,eAAe,YAAYoB,MAA/B,EAAuC;MACrC,KAAKT,IAAL,GAAYX,eAAZ;MACA,KAAKY,OAAL,GAAe;QAAER,OAAO,EAAE,KAAX;QAAkBC,OAAO,EAAE;UAAEC,KAAK,EAAE,CAAT;UAAYC,KAAK,EAAE,CAAnB;UAAsBC,KAAK,EAAE,CAA7B;UAAgCC,QAAQ,EAAE;QAA1C;MAA3B,CAAf;IACD,CAHD,MAGO;MACL,KAAKG,OAAL,GAAeZ,eAAf;MACA,KAAKqB,aAAL;IACD;IACD,KAAKC,cAAL;EACD;EAAAC,YAAA,CAAAxB,eAAA;IAAAyB,GAAA;IAAA3B,KAAA,EAED,SAAAwB,cAAA,EAAgB;MACd,IAAMT,OAAO,GAAG,CACd,KAAKa,mBAAL,EADc,EAEd,KAAKC,sBAAL,EAFc,EAGd,KAAKC,oBAAL,EAHc,EAId,KAAKC,oBAAL,EAJc,EAKd,KAAKC,gBAAL,EALc,EAMd,KAAKC,mBAAL,EANc,CAAhB;MASA,IAAI5B,MAAM,GAAG,CAAb;MACA,KAAK,IAAI6B,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGpB,OAAO,CAACV,MAA9B,EAAsC6B,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;QAClD,IAAME,MAAM,GAAGrB,OAAO,CAACmB,CAAD,CAAtB;QACA7B,MAAM,IAAI,IAAI+B,MAAM,CAACtB,IAAP,CAAYT,MAA1B;MACD;MACDA,MAAM,GAfQ,CAeJ;;MACV,KAAKS,IAAL,GAAYS,MAAM,CAACc,KAAP,CAAahC,MAAb,EAAqB,CAArB,CAAZ;MACA,IAAIiC,YAAY,GAAG,CAAnB;MACA,IAAIC,gBAAgB,GAAG,IAAIxB,OAAO,CAACV,MAAZ,GAAqB,CAA5C;MAEA,KAAK,IAAImC,CAAC,GAAG,CAAR,EAAWL,IAAG,GAAGpB,OAAO,CAACV,MAA9B,EAAsCmC,CAAC,GAAGL,IAA1C,EAA+CK,CAAC,EAAhD,EAAoD;QAClD,IAAMJ,OAAM,GAAGrB,OAAO,CAACyB,CAAD,CAAtB;QACA,KAAK1B,IAAL,CAAU2B,UAAV,CAAqBL,OAAM,CAACM,KAA5B,EAAmCJ,YAAY,GAAG,CAAlD;QACA,KAAKxB,IAAL,CAAU6B,aAAV,CAAwBJ,gBAAxB,EAA0CD,YAAY,GAAG,CAAzD;QACA,KAAKxB,IAAL,CAAU6B,aAAV,CAAwBP,OAAM,CAACtB,IAAP,CAAYT,MAApC,EAA4CiC,YAAY,GAAG,CAA3D;QACAA,YAAY,IAAI,CAAhB;QACAF,OAAM,CAACtB,IAAP,CAAY8B,IAAZ,CAAiB,KAAK9B,IAAtB,EAA4ByB,gBAA5B;QACAA,gBAAgB,IAAIH,OAAM,CAACtB,IAAP,CAAYT,MAAhC;MACD;MAED,KAAKS,IAAL,CAAU2B,UAAV,CAAqBxD,KAAK,CAACO,UAA3B,EAAuC8C,YAAvC;IACD;EAAA;IAAAX,GAAA;IAAA3B,KAAA,EAED,SAAA4B,oBAAA,EAAsB;MACpB,IAAMiB,MAAM,GAAG,IAAI/D,uBAAA,CAAAgE,OAAJ,CAA2B9D,gBAA3B,CAAf;MACA6D,MAAM,CAACJ,UAAP,CAAkB,KAAK1B,OAAL,CAAaP,OAAb,CAAqBC,KAAvC;MACAoC,MAAM,CAACJ,UAAP,CAAkB,KAAK1B,OAAL,CAAaP,OAAb,CAAqBE,KAAvC;MACAmC,MAAM,CAACF,aAAP,CAAqB,KAAK5B,OAAL,CAAaP,OAAb,CAAqBG,KAA1C;MACAkC,MAAM,CAACF,aAAP,CAAqB,KAAK5B,OAAL,CAAaP,OAAb,CAAqBI,QAA1C;MACA,OAAO;QACL8B,KAAK,EAAEzD,KAAK,CAACC,OADR;QAEL4B,IAAI,EAAE+B,MAAM,CAAC/B;MAFR,CAAP;IAID;EAAA;IAAAa,GAAA;IAAA3B,KAAA,EAED,SAAA6B,uBAAA,EAAyB;MACvB,IAAMgB,MAAM,GAAG,IAAI/D,uBAAA,CAAAgE,OAAJ,CAA2B9D,gBAA3B,CAAf;MACA,IAAI,KAAK+B,OAAL,CAAaR,OAAjB,EAA0B;QACxBsC,MAAM,CAACJ,UAAP,CAAkBhD,OAAO,CAACE,EAA1B;MACD,CAFD,MAEO;QACLkD,MAAM,CAACJ,UAAP,CAAkBhD,OAAO,CAACG,OAA1B;MACD;MACD,OAAO;QACL8C,KAAK,EAAEzD,KAAK,CAACE,UADR;QAEL2B,IAAI,EAAE+B,MAAM,CAAC/B;MAFR,CAAP;IAID;EAAA;IAAAa,GAAA;IAAA3B,KAAA,EAED,SAAA8B,qBAAA,EAAuB;MACrB,IAAMe,MAAM,GAAG,IAAI/D,uBAAA,CAAAgE,OAAJ,CAA2B9D,gBAA3B,CAAf;MACA6D,MAAM,CAACJ,UAAP,CAAkB,IAAlB;MACA,OAAO;QACLC,KAAK,EAAEzD,KAAK,CAACG,OADR;QAEL0B,IAAI,EAAE+B,MAAM,CAAC/B;MAFR,CAAP;IAID;EAAA;IAAAa,GAAA;IAAA3B,KAAA,EAED,SAAA+B,qBAAA,EAAuB;MACrB,IAAMc,MAAM,GAAG,IAAI/D,uBAAA,CAAAgE,OAAJ,CAA2B9D,gBAA3B,CAAf;MACA6D,MAAM,CAACE,aAAP,CAAqB,IAArB;MACA,OAAO;QACLL,KAAK,EAAEzD,KAAK,CAACI,QADR;QAELyB,IAAI,EAAE+B,MAAM,CAAC/B;MAFR,CAAP;IAID;EAAA;IAAAa,GAAA;IAAA3B,KAAA,EAED,SAAAgC,iBAAA,EAAmB;MACjB,IAAMa,MAAM,GAAG,IAAI/D,uBAAA,CAAAgE,OAAJ,CAA2B9D,gBAA3B,CAAf;MACA6D,MAAM,CAACJ,UAAP,CAAkBnD,IAAI,CAACI,GAAvB;MACA,OAAO;QACLgD,KAAK,EAAEzD,KAAK,CAACK,IADR;QAELwB,IAAI,EAAE+B,MAAM,CAAC/B;MAFR,CAAP;IAID;EAAA;IAAAa,GAAA;IAAA3B,KAAA,EAED,SAAAiC,oBAAA,EAAsB;MACpB,IAAMY,MAAM,GAAG,IAAI/D,uBAAA,CAAAgE,OAAJ,CAA2B9D,gBAA3B,CAAf;MACA6D,MAAM,CAACJ,UAAP,CAAkB,IAAlB;MACA,OAAO;QACLC,KAAK,EAAEzD,KAAK,CAACM,eADR;QAELuB,IAAI,EAAE+B,MAAM,CAAC/B;MAFR,CAAP;IAID;EAAA;IAAAa,GAAA;IAAA3B,KAAA,EAED,SAAAyB,eAAA,EAAiB;MACf,IAAIuB,MAAM,GAAG,CAAb;MACA,OAAO,KAAKlC,IAAL,CAAUkC,MAAV,MAAsB/D,KAAK,CAACO,UAAnC,EAA+C;QAC7C,IAAIyD,UAAU,GAAG,KAAKnC,IAAL,CAAUoC,YAAV,CAAuBF,MAAM,GAAG,CAAhC,CAAjB;QACA,IAAMG,UAAU,GAAG,KAAKrC,IAAL,CAAUoC,YAAV,CAAuBF,MAAM,GAAG,CAAhC,CAAnB;QACA,QAAQ,KAAKlC,IAAL,CAAUkC,MAAV,CAAR;UACE,KAAK/D,KAAK,CAACC,OAAX;YACE,KAAKkE,cAAL,CAAoBH,UAApB;YACA;UACF,KAAKhE,KAAK,CAACE,UAAX;YACE,KAAKkE,iBAAL,CAAuBJ,UAAvB;YACA;UACF,KAAKhE,KAAK,CAACG,OAAX;YACE,KAAKkE,eAAL,CAAqBL,UAArB;YACA;UACF,KAAKhE,KAAK,CAACI,QAAX;YACE,IAAI8D,UAAU,GAAG,CAAjB,EAAoB;cAClB,KAAKI,eAAL,CAAqBN,UAArB;YACD;YACD;UACF,KAAKhE,KAAK,CAACK,IAAX;YACE,KAAKkE,WAAL,CAAiBP,UAAjB;YACA;UACF,KAAKhE,KAAK,CAACM,eAAX;YACE,KAAKkE,cAAL,CAAoBR,UAApB;YACA;QApBJ;QAsBAD,MAAM,IAAI,CAAV;QACAC,UAAU,IAAIE,UAAd;MACD;IACF;EAAA;IAAAxB,GAAA;IAAA3B,KAAA,EAED,SAAAoD,eAAeJ,MAAD,EAAiB;MAC7B,KAAKxC,OAAL,GAAe;QACbC,KAAK,EAAE,KAAKK,IAAL,CAAU4C,SAAV,CAAoBV,MAAM,GAAG,CAA7B,CADM;QAEbtC,KAAK,EAAE,KAAKI,IAAL,CAAU4C,SAAV,CAAoBV,MAAM,GAAG,CAA7B,CAFM;QAGbrC,KAAK,EAAE,KAAKG,IAAL,CAAUoC,YAAV,CAAuBF,MAAM,GAAG,CAAhC,CAHM;QAIbpC,QAAQ,EAAE,KAAKE,IAAL,CAAUoC,YAAV,CAAuBF,MAAM,GAAG,CAAhC;MAJG,CAAf;IAMD;EAAA;IAAArB,GAAA;IAAA3B,KAAA,EAED,SAAAqD,kBAAkBL,MAAD,EAAiB;MAChC,KAAKhC,UAAL,GAAkB,KAAKF,IAAL,CAAU4C,SAAV,CAAoBV,MAApB,CAAlB;MACA,KAAK/B,gBAAL,GAAwBnB,cAAc,CAAC,KAAKkB,UAAN,CAAtC;IACD;EAAA;IAAAW,GAAA;IAAA3B,KAAA,EAED,SAAAsD,gBAAgBN,MAAD,EAAiB;MAC9B,KAAK9B,QAAL,GAAgB,KAAKJ,IAAL,CAAU4C,SAAV,CAAoBV,MAApB,CAAhB;IACD;EAAA;IAAArB,GAAA;IAAA3B,KAAA,EAED,SAAAuD,gBAAgBP,MAAD,EAAiB;MAC9B,KAAK7B,QAAL,GAAgB,KAAKL,IAAL,CAAU6C,YAAV,CAAuBX,MAAvB,CAAhB;IACD;EAAA;IAAArB,GAAA;IAAA3B,KAAA,EAED,SAAAwD,YAAYR,MAAD,EAAiB;MAC1B,KAAK5B,IAAL,GAAY,KAAKN,IAAL,CAAU4C,SAAV,CAAoBV,MAApB,CAAZ;MACA,KAAK3B,UAAL,GAAkBpB,WAAW,CAAC,KAAKmB,IAAN,CAA7B;IACD;EAAA;IAAAO,GAAA;IAAA3B,KAAA,EAED,SAAAyD,eAAeT,MAAD,EAAiB;MAC7B,KAAK1B,eAAL,GAAuB,KAAKR,IAAL,CAAU4C,SAAV,CAAoBV,MAApB,CAAvB;IACD;EAAA;IAAArB,GAAA;IAAA3B,KAAA,EAED,SAAA4D,SAAA,EAAsB;MAAA,IAAbC,MAAM,GAAAzD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAV;MACN,OAAOyD,MAAM,GAAG,aAAT,GAAyB,IAAAjF,UAAA,CAAAkF,OAAA,EAC9B,8FAD8B,EAE9B,KAAKtD,OAAL,CAAaC,KAFiB,EAEV,KAAKD,OAAL,CAAaE,KAFH,EAEU,KAAKF,OAAL,CAAaG,KAFvB,EAE8B,KAAKH,OAAL,CAAaI,QAF3C,EAG9B,KAAKI,UAAL,GAAkB,KAAKA,UAAvB,GAAoC,CAHN,EAI9B,KAAKC,gBAAL,GAAwB,KAAKA,gBAA7B,GAAgD,EAJlB,EAK9B,KAAKC,QAAL,GAAgB,KAAKA,QAArB,GAAgC,CALF,EAM9B,KAAKC,QAAL,GAAgB,KAAKA,QAArB,GAAgC,CANF,EAO9B,KAAKC,IAAL,GAAY,KAAKA,IAAjB,GAAwB,CAPM,EAQ9B,KAAKC,UAAL,GAAkB,KAAKA,UAAvB,GAAoC,EARN,CAAhC;IAUD;EAAA;EAAA,OAAAnB,eAAA;AAAA;eAGYA,e;;AACf6D,MAAM,CAACC,OAAP,GAAiB9D,eAAjB"},"metadata":{},"sourceType":"script"}