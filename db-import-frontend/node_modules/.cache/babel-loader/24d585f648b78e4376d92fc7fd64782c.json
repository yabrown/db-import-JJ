{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _datetimen = _interopRequireDefault(require(\"./datetimen\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar EPOCH_DATE = new Date(1900, 0, 1);\nvar UTC_EPOCH_DATE = new Date(Date.UTC(1900, 0, 1));\nvar DATA_LENGTH = Buffer.from([0x04]);\nvar NULL_LENGTH = Buffer.from([0x00]);\nvar SmallDateTime = {\n  id: 0x3A,\n  type: 'DATETIM4',\n  name: 'SmallDateTime',\n  declaration: function declaration() {\n    return 'smalldatetime';\n  },\n  generateTypeInfo: function generateTypeInfo() {\n    return Buffer.from([_datetimen.default.id, 0x04]);\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    return DATA_LENGTH;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime().mark(function generateParameterData(parameter, options) {\n    var buffer, days, dstDiff, minutes;\n    return _regeneratorRuntime().wrap(function generateParameterData$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(parameter.value == null)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 2:\n          buffer = Buffer.alloc(4);\n          if (options.useUTC) {\n            days = Math.floor((parameter.value.getTime() - UTC_EPOCH_DATE.getTime()) / (1000 * 60 * 60 * 24));\n            minutes = parameter.value.getUTCHours() * 60 + parameter.value.getUTCMinutes();\n          } else {\n            dstDiff = -(parameter.value.getTimezoneOffset() - EPOCH_DATE.getTimezoneOffset()) * 60 * 1000;\n            days = Math.floor((parameter.value.getTime() - EPOCH_DATE.getTime() + dstDiff) / (1000 * 60 * 60 * 24));\n            minutes = parameter.value.getHours() * 60 + parameter.value.getMinutes();\n          }\n          buffer.writeUInt16LE(days, 0);\n          buffer.writeUInt16LE(minutes, 2);\n          _context.next = 8;\n          return buffer;\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n    return value;\n  }\n};\nvar _default = SmallDateTime;\nexports.default = _default;\nmodule.exports = SmallDateTime;","map":{"version":3,"names":["_datetimen","_interopRequireDefault","require","EPOCH_DATE","Date","UTC_EPOCH_DATE","UTC","DATA_LENGTH","Buffer","from","NULL_LENGTH","SmallDateTime","id","type","name","declaration","generateTypeInfo","default","generateParameterLength","parameter","options","value","generateParameterData","_regeneratorRuntime","mark","buffer","days","dstDiff","minutes","wrap","generateParameterData$","_context","prev","next","abrupt","alloc","useUTC","Math","floor","getTime","getUTCHours","getUTCMinutes","getTimezoneOffset","getHours","getMinutes","writeUInt16LE","stop","validate","parse","isNaN","TypeError","module","exports"],"sources":["../../src/data-types/smalldatetime.ts"],"sourcesContent":["import { DataType } from '../data-type';\nimport DateTimeN from './datetimen';\n\nconst EPOCH_DATE = new Date(1900, 0, 1);\nconst UTC_EPOCH_DATE = new Date(Date.UTC(1900, 0, 1));\n\nconst DATA_LENGTH = Buffer.from([0x04]);\nconst NULL_LENGTH = Buffer.from([0x00]);\n\nconst SmallDateTime: DataType = {\n  id: 0x3A,\n  type: 'DATETIM4',\n  name: 'SmallDateTime',\n\n  declaration: function() {\n    return 'smalldatetime';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([DateTimeN.id, 0x04]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n\n  generateParameterData: function*(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = Buffer.alloc(4);\n\n    let days, dstDiff, minutes;\n    if (options.useUTC) {\n      days = Math.floor((parameter.value.getTime() - UTC_EPOCH_DATE.getTime()) / (1000 * 60 * 60 * 24));\n      minutes = (parameter.value.getUTCHours() * 60) + parameter.value.getUTCMinutes();\n    } else {\n      dstDiff = -(parameter.value.getTimezoneOffset() - EPOCH_DATE.getTimezoneOffset()) * 60 * 1000;\n      days = Math.floor((parameter.value.getTime() - EPOCH_DATE.getTime() + dstDiff) / (1000 * 60 * 60 * 24));\n      minutes = (parameter.value.getHours() * 60) + parameter.value.getMinutes();\n    }\n\n    buffer.writeUInt16LE(days, 0);\n    buffer.writeUInt16LE(minutes, 2);\n\n    yield buffer;\n  },\n\n  validate: function(value): null | Date {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\n\nexport default SmallDateTime;\nmodule.exports = SmallDateTime;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}