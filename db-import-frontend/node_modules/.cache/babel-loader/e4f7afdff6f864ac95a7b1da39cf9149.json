{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _assertThisInitialized = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _ = require(\"lodash\");\nvar AbstractDialect = require(\"../abstract\");\nvar ConnectionManager = require(\"./connection-manager\");\nvar Query = require(\"./query\");\nvar QueryGenerator = require(\"./query-generator\");\nvar DataTypes = require(\"../../data-types\").db2;\nvar _require = require(\"./query-interface\"),\n  Db2QueryInterface = _require.Db2QueryInterface;\nvar Db2Dialect = /*#__PURE__*/function (_AbstractDialect) {\n  _inherits(Db2Dialect, _AbstractDialect);\n  var _super = _createSuper(Db2Dialect);\n  function Db2Dialect(sequelize) {\n    var _this;\n    _classCallCheck(this, Db2Dialect);\n    _this = _super.call(this);\n    _this.sequelize = sequelize;\n    _this.connectionManager = new ConnectionManager(_assertThisInitialized(_this), sequelize);\n    _this.queryGenerator = new QueryGenerator({\n      _dialect: _assertThisInitialized(_this),\n      sequelize: sequelize\n    });\n    _this.queryInterface = new Db2QueryInterface(sequelize, _this.queryGenerator);\n    return _this;\n  }\n  return _createClass(Db2Dialect);\n}(AbstractDialect);\nDb2Dialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"DEFAULT\": true,\n  \"DEFAULT VALUES\": false,\n  \"VALUES ()\": false,\n  \"LIMIT ON UPDATE\": false,\n  \"ORDER NULLS\": false,\n  lock: false,\n  transactions: true,\n  migrations: false,\n  returnValues: false,\n  schemas: true,\n  finalTable: true,\n  autoIncrement: {\n    identityInsert: false,\n    defaultValue: false,\n    update: true\n  },\n  constraints: {\n    restrict: true,\n    default: false\n  },\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false,\n    where: true\n  },\n  NUMERIC: true,\n  tmpTableTrigger: true\n});\nDb2Dialect.prototype.defaultVersion = \"1.0.0\";\nDb2Dialect.prototype.Query = Query;\nDb2Dialect.prototype.name = \"db2\";\nDb2Dialect.prototype.TICK_CHAR = '\"';\nDb2Dialect.prototype.TICK_CHAR_LEFT = '\"';\nDb2Dialect.prototype.TICK_CHAR_RIGHT = '\"';\nDb2Dialect.prototype.DataTypes = DataTypes;\nmodule.exports = Db2Dialect;","map":{"version":3,"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","db2","_require","Db2QueryInterface","Db2Dialect","_AbstractDialect","_inherits","_super","_createSuper","sequelize","_this","_classCallCheck","call","connectionManager","_assertThisInitialized","queryGenerator","_dialect","queryInterface","_createClass","prototype","supports","merge","cloneDeep","lock","transactions","migrations","returnValues","schemas","finalTable","autoIncrement","identityInsert","defaultValue","update","constraints","restrict","default","index","collate","length","parser","type","using","where","NUMERIC","tmpTableTrigger","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["../../../src/dialects/db2/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').db2;\nconst { Db2QueryInterface } = require('./query-interface');\n\nclass Db2Dialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new Db2QueryInterface(sequelize, this.queryGenerator);\n  }\n}\n\nDb2Dialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ORDER NULLS': false,\n  lock: false,\n  transactions: true,\n  migrations: false,\n  returnValues: false,\n  schemas: true,\n  finalTable: true,\n  autoIncrement: {\n    identityInsert: false,\n    defaultValue: false,\n    update: true\n  },\n  constraints: {\n    restrict: true,\n    default: false\n  },\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false,\n    where: true\n  },\n  NUMERIC: true,\n  tmpTableTrigger: true\n});\n\nDb2Dialect.prototype.defaultVersion = '1.0.0'; // Db2 supported version comes here\nDb2Dialect.prototype.Query = Query;\nDb2Dialect.prototype.name = 'db2';\nDb2Dialect.prototype.TICK_CHAR = '\"';\nDb2Dialect.prototype.TICK_CHAR_LEFT = '\"';\nDb2Dialect.prototype.TICK_CHAR_RIGHT = '\"';\nDb2Dialect.prototype.DataTypes = DataTypes;\n\nmodule.exports = Db2Dialect;\n"],"mappings":";;;;;;;AAEA,IAAMA,CAAA,GAAIC,OAAA,CAAQ;AAClB,IAAMC,eAAA,GAAkBD,OAAA,CAAQ;AAChC,IAAME,iBAAA,GAAoBF,OAAA,CAAQ;AAClC,IAAMG,KAAA,GAAQH,OAAA,CAAQ;AACtB,IAAMI,cAAA,GAAiBJ,OAAA,CAAQ;AAC/B,IAAMK,SAAA,GAAYL,OAAA,CAAQ,oBAAoBM,GAAA;AAC9C,IAAAC,QAAA,GAA8BP,OAAA,CAAQ;EAA9BQ,iBAAA,GAAAD,QAAA,CAAAC,iBAAA;AAA8B,IAEtCC,UAAA,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACE,SAAAA,WAAYK,SAAA,EAAW;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,UAAA;IACrBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IACAF,KAAA,CAAKD,SAAA,GAAYA,SAAA;IACjBC,KAAA,CAAKG,iBAAA,GAAoB,IAAIhB,iBAAA,CAAAiB,sBAAA,CAAAJ,KAAA,GAAwBD,SAAA;IACrDC,KAAA,CAAKK,cAAA,GAAiB,IAAIhB,cAAA,CAAe;MACvCiB,QAAA,EAAAF,sBAAA,CAAAJ,KAAA,CAAU;MACVD,SAAA,EAAAA;IAAA;IAEFC,KAAA,CAAKO,cAAA,GAAiB,IAAId,iBAAA,CAAkBM,SAAA,EAAWC,KAAA,CAAKK,cAAA;IAAA,OAAAL,KAAA;EAAA;EAAA,OAAAQ,YAAA,CAAAd,UAAA;AAAA,EATvCR,eAAA;AAazBQ,UAAA,CAAWe,SAAA,CAAUC,QAAA,GAAW1B,CAAA,CAAE2B,KAAA,CAAM3B,CAAA,CAAE4B,SAAA,CAAU1B,eAAA,CAAgBuB,SAAA,CAAUC,QAAA,GAAW;EACvF,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,eAAe;EACfG,IAAA,EAAM;EACNC,YAAA,EAAc;EACdC,UAAA,EAAY;EACZC,YAAA,EAAc;EACdC,OAAA,EAAS;EACTC,UAAA,EAAY;EACZC,aAAA,EAAe;IACbC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,MAAA,EAAQ;EAAA;EAEVC,WAAA,EAAa;IACXC,QAAA,EAAU;IACVC,OAAA,EAAS;EAAA;EAEXC,KAAA,EAAO;IACLC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,KAAA,EAAO;EAAA;EAETC,OAAA,EAAS;EACTC,eAAA,EAAiB;AAAA;AAGnBxC,UAAA,CAAWe,SAAA,CAAU0B,cAAA,GAAiB;AACtCzC,UAAA,CAAWe,SAAA,CAAUrB,KAAA,GAAQA,KAAA;AAC7BM,UAAA,CAAWe,SAAA,CAAU2B,IAAA,GAAO;AAC5B1C,UAAA,CAAWe,SAAA,CAAU4B,SAAA,GAAY;AACjC3C,UAAA,CAAWe,SAAA,CAAU6B,cAAA,GAAiB;AACtC5C,UAAA,CAAWe,SAAA,CAAU8B,eAAA,GAAkB;AACvC7C,UAAA,CAAWe,SAAA,CAAUnB,SAAA,GAAYA,SAAA;AAEjCkD,MAAA,CAAOC,OAAA,GAAU/C,UAAA"},"metadata":{},"sourceType":"script"}