{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */\nvar TokenCacheContext = /** @class */function () {\n  function TokenCacheContext(tokenCache, hasChanged) {\n    this.cache = tokenCache;\n    this.hasChanged = hasChanged;\n  }\n  Object.defineProperty(TokenCacheContext.prototype, \"cacheHasChanged\", {\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\n    get: function get() {\n      return this.hasChanged;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TokenCacheContext.prototype, \"tokenCache\", {\n    /**\r\n     * function to retrieve the token cache\r\n     */\n    get: function get() {\n      return this.cache;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return TokenCacheContext;\n}();\nexport { TokenCacheContext };","map":{"version":3,"names":["TokenCacheContext","tokenCache","hasChanged","cache","Object","defineProperty","prototype","get"],"sources":["../../../src/cache/persistence/TokenCacheContext.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n"],"mappings":";;;AAAA;;;AAGG;AAIH;;;;AAGG,IAAAA,iBAAA;EAUC,SAAYA,kBAAAC,UAAmC,EAAEC,UAAmB;IAChE,IAAI,CAACC,KAAK,GAAGF,UAAU;IACvB,IAAI,CAACC,UAAU,GAAGA,UAAU;;EAMhCE,MAAA,CAAAC,cAAA,CAAIL,iBAAe,CAAAM,SAAA;IAHnB;;AAEG;IACHC,GAAA,WAAAA,IAAA;MACI,OAAO,IAAI,CAACL,UAAU;KACzB;;;EAAA;EAKDE,MAAA,CAAAC,cAAA,CAAIL,iBAAU,CAAAM,SAAA;IAHd;;AAEG;IACHC,GAAA,WAAAA,IAAA;MACI,OAAO,IAAI,CAACJ,KAAK;KACpB;;;EAAA;EACL,OAACH,iBAAA;AAAD,CAAC"},"metadata":{},"sourceType":"module"}