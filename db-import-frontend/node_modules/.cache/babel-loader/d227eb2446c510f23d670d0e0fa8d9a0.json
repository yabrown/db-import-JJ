{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Toposort = require(\"toposort-class\");\nvar _ = require(\"lodash\");\nvar ModelManager = /*#__PURE__*/function () {\n  function ModelManager(sequelize) {\n    _classCallCheck(this, ModelManager);\n    this.models = [];\n    this.sequelize = sequelize;\n  }\n  _createClass(ModelManager, [{\n    key: \"addModel\",\n    value: function addModel(model) {\n      this.models.push(model);\n      this.sequelize.models[model.name] = model;\n      return model;\n    }\n  }, {\n    key: \"removeModel\",\n    value: function removeModel(modelToRemove) {\n      this.models = this.models.filter(function (model) {\n        return model.name !== modelToRemove.name;\n      });\n      delete this.sequelize.models[modelToRemove.name];\n    }\n  }, {\n    key: \"getModel\",\n    value: function getModel(against, options) {\n      options = _.defaults(options || {}, {\n        attribute: \"name\"\n      });\n      return this.models.find(function (model) {\n        return model[options.attribute] === against;\n      });\n    }\n  }, {\n    key: \"all\",\n    get: function get() {\n      return this.models;\n    }\n  }, {\n    key: \"getModelsTopoSortedByForeignKey\",\n    value: function getModelsTopoSortedByForeignKey() {\n      var models = /* @__PURE__ */new Map();\n      var sorter = new Toposort();\n      var _iterator = _createForOfIteratorHelper(this.models),\n        _step;\n      try {\n        var _loop = function _loop() {\n          var model = _step.value;\n          var deps = [];\n          var tableName = model.getTableName();\n          if (_.isObject(tableName)) {\n            tableName = \"\".concat(tableName.schema, \".\").concat(tableName.tableName);\n          }\n          models.set(tableName, model);\n          for (var attrName in model.rawAttributes) {\n            if (Object.prototype.hasOwnProperty.call(model.rawAttributes, attrName)) {\n              var attribute = model.rawAttributes[attrName];\n              if (attribute.references) {\n                var dep = attribute.references.model;\n                if (_.isObject(dep)) {\n                  dep = \"\".concat(dep.schema, \".\").concat(dep.tableName);\n                }\n                deps.push(dep);\n              }\n            }\n          }\n          deps = deps.filter(function (dep) {\n            return tableName !== dep;\n          });\n          sorter.add(tableName, deps);\n        };\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var sorted;\n      try {\n        sorted = sorter.sort();\n      } catch (e) {\n        if (!e.message.startsWith(\"Cyclic dependency found.\")) {\n          throw e;\n        }\n        return null;\n      }\n      return sorted.map(function (modelName) {\n        return models.get(modelName);\n      }).filter(Boolean);\n    }\n  }, {\n    key: \"forEachModel\",\n    value: function forEachModel(iterator, options) {\n      var sortedModels = this.getModelsTopoSortedByForeignKey();\n      if (sortedModels == null) {\n        throw new Error(\"Cyclic dependency found.\");\n      }\n      options = _.defaults(options || {}, {\n        reverse: true\n      });\n      if (options.reverse) {\n        sortedModels.reverse();\n      }\n      var _iterator2 = _createForOfIteratorHelper(sortedModels),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var model = _step2.value;\n          iterator(model);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }]);\n  return ModelManager;\n}();\nmodule.exports = ModelManager;\nmodule.exports.ModelManager = ModelManager;\nmodule.exports.default = ModelManager;","map":{"version":3,"names":["Toposort","require","_","ModelManager","sequelize","_classCallCheck","models","_createClass","key","value","addModel","model","push","name","removeModel","modelToRemove","filter","getModel","against","options","defaults","attribute","find","get","getModelsTopoSortedByForeignKey","Map","sorter","_iterator","_createForOfIteratorHelper","_step","_loop","deps","tableName","getTableName","isObject","concat","schema","set","attrName","rawAttributes","Object","prototype","hasOwnProperty","call","references","dep","add","s","n","done","err","e","f","sorted","sort","message","startsWith","map","modelName","Boolean","forEachModel","iterator","sortedModels","Error","reverse","_iterator2","_step2","module","exports","default"],"sources":["../src/model-manager.js"],"sourcesContent":["'use strict';\n\nconst Toposort = require('toposort-class');\nconst _ = require('lodash');\n\nclass ModelManager {\n  constructor(sequelize) {\n    this.models = [];\n    this.sequelize = sequelize;\n  }\n\n  addModel(model) {\n    this.models.push(model);\n    this.sequelize.models[model.name] = model;\n\n    return model;\n  }\n\n  removeModel(modelToRemove) {\n    this.models = this.models.filter(model => model.name !== modelToRemove.name);\n\n    delete this.sequelize.models[modelToRemove.name];\n  }\n\n  getModel(against, options) {\n    options = _.defaults(options || {}, {\n      attribute: 'name'\n    });\n\n    return this.models.find(model => model[options.attribute] === against);\n  }\n\n  get all() {\n    return this.models;\n  }\n\n  /**\n   * Returns an array that lists every model, sorted in order\n   * of foreign key references: The first model is a model that is depended upon,\n   * the last model is a model that is not depended upon.\n   *\n   * If there is a cyclic dependency, this returns null.\n   */\n  getModelsTopoSortedByForeignKey() {\n    const models = new Map();\n    const sorter = new Toposort();\n\n    for (const model of this.models) {\n      let deps = [];\n      let tableName = model.getTableName();\n\n      if (_.isObject(tableName)) {\n        tableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      models.set(tableName, model);\n\n      for (const attrName in model.rawAttributes) {\n        if (Object.prototype.hasOwnProperty.call(model.rawAttributes, attrName)) {\n          const attribute = model.rawAttributes[attrName];\n\n          if (attribute.references) {\n            let dep = attribute.references.model;\n\n            if (_.isObject(dep)) {\n              dep = `${dep.schema}.${dep.tableName}`;\n            }\n\n            deps.push(dep);\n          }\n        }\n      }\n\n      deps = deps.filter(dep => tableName !== dep);\n\n      sorter.add(tableName, deps);\n    }\n\n    let sorted;\n    try {\n      sorted = sorter.sort();\n    } catch (e) {\n      if (!e.message.startsWith('Cyclic dependency found.')) {\n        throw e;\n      }\n\n      return null;\n    }\n\n    return sorted\n      .map(modelName => {\n        return models.get(modelName);\n      })\n      .filter(Boolean);\n  }\n\n  /**\n   * Iterate over Models in an order suitable for e.g. creating tables.\n   * Will take foreign key constraints into account so that dependencies are visited before dependents.\n   *\n   * @param {Function} iterator method to execute on each model\n   * @param {object} options\n   * @private\n   *\n   * @deprecated\n   */\n  forEachModel(iterator, options) {\n    const sortedModels = this.getModelsTopoSortedByForeignKey();\n    if (sortedModels == null) {\n      throw new Error('Cyclic dependency found.');\n    }\n\n    options = _.defaults(options || {}, {\n      reverse: true\n    });\n\n    if (options.reverse) {\n      sortedModels.reverse();\n    }\n\n    for (const model of sortedModels) {\n      iterator(model);\n    }\n  }\n}\n\nmodule.exports = ModelManager;\nmodule.exports.ModelManager = ModelManager;\nmodule.exports.default = ModelManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}