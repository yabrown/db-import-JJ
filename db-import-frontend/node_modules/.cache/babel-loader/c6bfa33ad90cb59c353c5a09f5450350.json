{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require('events'),\n  EventEmitter = _require.EventEmitter;\nvar debug = require('debug')('nock.socket');\nmodule.exports = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Socket, _EventEmitter);\n  var _super = _createSuper(Socket);\n  function Socket(options) {\n    var _this;\n    _classCallCheck(this, Socket);\n    _this = _super.call(this);\n\n    // Pretend this is a TLSSocket\n    if (options.proto === 'https') {\n      // https://github.com/nock/nock/issues/158\n      _this.authorized = true;\n      // https://github.com/nock/nock/issues/2147\n      _this.encrypted = true;\n    }\n    _this.bufferSize = 0;\n    _this.writableLength = 0;\n    _this.writable = true;\n    _this.readable = true;\n    _this.pending = false;\n    _this.destroyed = false;\n    _this.connecting = true;\n\n    // Undocumented flag used by ClientRequest to ensure errors aren't double-fired\n    _this._hadError = false;\n\n    // Maximum allowed delay. 0 means unlimited.\n    _this.timeout = 0;\n    var ipv6 = options.family === 6;\n    _this.remoteFamily = ipv6 ? 'IPv6' : 'IPv4';\n    _this.localAddress = _this.remoteAddress = ipv6 ? '::1' : '127.0.0.1';\n    _this.localPort = _this.remotePort = parseInt(options.port);\n    return _this;\n  }\n  _createClass(Socket, [{\n    key: \"setNoDelay\",\n    value: function setNoDelay() {}\n  }, {\n    key: \"setKeepAlive\",\n    value: function setKeepAlive() {}\n  }, {\n    key: \"resume\",\n    value: function resume() {}\n  }, {\n    key: \"ref\",\n    value: function ref() {}\n  }, {\n    key: \"unref\",\n    value: function unref() {}\n  }, {\n    key: \"write\",\n    value: function write() {}\n  }, {\n    key: \"address\",\n    value: function address() {\n      return {\n        port: this.remotePort,\n        family: this.remoteFamily,\n        address: this.remoteAddress\n      };\n    }\n  }, {\n    key: \"setTimeout\",\n    value: function setTimeout(timeoutMs, fn) {\n      this.timeout = timeoutMs;\n      if (fn) {\n        this.once('timeout', fn);\n      }\n      return this;\n    }\n\n    /**\n     * Artificial delay that will trip socket timeouts when appropriate.\n     *\n     * Doesn't actually wait for time to pass.\n     * Timeout events don't necessarily end the request.\n     * While many clients choose to abort the request upon a timeout, Node itself does not.\n     */\n  }, {\n    key: \"applyDelay\",\n    value: function applyDelay(delayMs) {\n      if (this.timeout && delayMs > this.timeout) {\n        debug('socket timeout');\n        this.emit('timeout');\n      }\n    }\n  }, {\n    key: \"getPeerCertificate\",\n    value: function getPeerCertificate() {\n      return Buffer.from((Math.random() * 10000 + Date.now()).toString()).toString('base64');\n    }\n\n    /**\n     * Denotes that no more I/O activity should happen on this socket.\n     *\n     * The implementation in Node if far more complex as it juggles underlying async streams.\n     * For the purposes of Nock, we just need it to set some flags and on the first call\n     * emit a 'close' and optional 'error' event. Both events propagate through the request object.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy(err) {\n      var _this2 = this;\n      if (this.destroyed) {\n        return this;\n      }\n      debug('socket destroy');\n      this.destroyed = true;\n      this.readable = this.writable = false;\n      this.readableEnded = this.writableFinished = true;\n      process.nextTick(function () {\n        if (err) {\n          _this2._hadError = true;\n          _this2.emit('error', err);\n        }\n        _this2.emit('close');\n      });\n      return this;\n    }\n  }]);\n  return Socket;\n}(EventEmitter);","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_inherits","_createSuper","_require","EventEmitter","debug","module","exports","_EventEmitter","Socket","_super","options","_this","call","proto","authorized","encrypted","bufferSize","writableLength","writable","readable","pending","destroyed","connecting","_hadError","timeout","ipv6","family","remoteFamily","localAddress","remoteAddress","localPort","remotePort","parseInt","port","key","value","setNoDelay","setKeepAlive","resume","ref","unref","write","address","setTimeout","timeoutMs","fn","once","applyDelay","delayMs","emit","getPeerCertificate","Buffer","from","Math","random","Date","now","toString","destroy","err","_this2","readableEnded","writableFinished","process","nextTick"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/nock/lib/socket.js"],"sourcesContent":["'use strict'\n\nconst { EventEmitter } = require('events')\nconst debug = require('debug')('nock.socket')\n\nmodule.exports = class Socket extends EventEmitter {\n  constructor(options) {\n    super()\n\n    // Pretend this is a TLSSocket\n    if (options.proto === 'https') {\n      // https://github.com/nock/nock/issues/158\n      this.authorized = true\n      // https://github.com/nock/nock/issues/2147\n      this.encrypted = true\n    }\n\n    this.bufferSize = 0\n    this.writableLength = 0\n    this.writable = true\n    this.readable = true\n    this.pending = false\n    this.destroyed = false\n    this.connecting = true\n\n    // Undocumented flag used by ClientRequest to ensure errors aren't double-fired\n    this._hadError = false\n\n    // Maximum allowed delay. 0 means unlimited.\n    this.timeout = 0\n\n    const ipv6 = options.family === 6\n    this.remoteFamily = ipv6 ? 'IPv6' : 'IPv4'\n    this.localAddress = this.remoteAddress = ipv6 ? '::1' : '127.0.0.1'\n    this.localPort = this.remotePort = parseInt(options.port)\n  }\n\n  setNoDelay() {}\n  setKeepAlive() {}\n  resume() {}\n  ref() {}\n  unref() {}\n  write() {}\n\n  address() {\n    return {\n      port: this.remotePort,\n      family: this.remoteFamily,\n      address: this.remoteAddress,\n    }\n  }\n\n  setTimeout(timeoutMs, fn) {\n    this.timeout = timeoutMs\n    if (fn) {\n      this.once('timeout', fn)\n    }\n    return this\n  }\n\n  /**\n   * Artificial delay that will trip socket timeouts when appropriate.\n   *\n   * Doesn't actually wait for time to pass.\n   * Timeout events don't necessarily end the request.\n   * While many clients choose to abort the request upon a timeout, Node itself does not.\n   */\n  applyDelay(delayMs) {\n    if (this.timeout && delayMs > this.timeout) {\n      debug('socket timeout')\n      this.emit('timeout')\n    }\n  }\n\n  getPeerCertificate() {\n    return Buffer.from(\n      (Math.random() * 10000 + Date.now()).toString()\n    ).toString('base64')\n  }\n\n  /**\n   * Denotes that no more I/O activity should happen on this socket.\n   *\n   * The implementation in Node if far more complex as it juggles underlying async streams.\n   * For the purposes of Nock, we just need it to set some flags and on the first call\n   * emit a 'close' and optional 'error' event. Both events propagate through the request object.\n   */\n  destroy(err) {\n    if (this.destroyed) {\n      return this\n    }\n\n    debug('socket destroy')\n    this.destroyed = true\n    this.readable = this.writable = false\n    this.readableEnded = this.writableFinished = true\n\n    process.nextTick(() => {\n      if (err) {\n        this._hadError = true\n        this.emit('error', err)\n      }\n      this.emit('close')\n    })\n\n    return this\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}