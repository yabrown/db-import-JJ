{"ast":null,"code":"module.exports = MultiPolygon;\nvar util = require('util');\nvar Types = require('./types');\nvar Geometry = require('./geometry');\nvar Point = require('./point');\nvar Polygon = require('./polygon');\nvar BinaryWriter = require('./binarywriter');\nfunction MultiPolygon(polygons, srid) {\n  Geometry.call(this);\n  this.polygons = polygons || [];\n  this.srid = srid;\n  if (this.polygons.length > 0) {\n    this.hasZ = this.polygons[0].hasZ;\n    this.hasM = this.polygons[0].hasM;\n  }\n}\nutil.inherits(MultiPolygon, Geometry);\nMultiPolygon.Z = function (polygons, srid) {\n  var multiPolygon = new MultiPolygon(polygons, srid);\n  multiPolygon.hasZ = true;\n  return multiPolygon;\n};\nMultiPolygon.M = function (polygons, srid) {\n  var multiPolygon = new MultiPolygon(polygons, srid);\n  multiPolygon.hasM = true;\n  return multiPolygon;\n};\nMultiPolygon.ZM = function (polygons, srid) {\n  var multiPolygon = new MultiPolygon(polygons, srid);\n  multiPolygon.hasZ = true;\n  multiPolygon.hasM = true;\n  return multiPolygon;\n};\nMultiPolygon._parseWkt = function (value, options) {\n  var multiPolygon = new MultiPolygon();\n  multiPolygon.srid = options.srid;\n  multiPolygon.hasZ = options.hasZ;\n  multiPolygon.hasM = options.hasM;\n  if (value.isMatch(['EMPTY'])) return multiPolygon;\n  value.expectGroupStart();\n  do {\n    value.expectGroupStart();\n    var exteriorRing = [];\n    var interiorRings = [];\n    value.expectGroupStart();\n    exteriorRing.push.apply(exteriorRing, value.matchCoordinates(options));\n    value.expectGroupEnd();\n    while (value.isMatch([','])) {\n      value.expectGroupStart();\n      interiorRings.push(value.matchCoordinates(options));\n      value.expectGroupEnd();\n    }\n    multiPolygon.polygons.push(new Polygon(exteriorRing, interiorRings));\n    value.expectGroupEnd();\n  } while (value.isMatch([',']));\n  value.expectGroupEnd();\n  return multiPolygon;\n};\nMultiPolygon._parseWkb = function (value, options) {\n  var multiPolygon = new MultiPolygon();\n  multiPolygon.srid = options.srid;\n  multiPolygon.hasZ = options.hasZ;\n  multiPolygon.hasM = options.hasM;\n  var polygonCount = value.readUInt32();\n  for (var i = 0; i < polygonCount; i++) multiPolygon.polygons.push(Geometry.parse(value, options));\n  return multiPolygon;\n};\nMultiPolygon._parseTwkb = function (value, options) {\n  var multiPolygon = new MultiPolygon();\n  multiPolygon.hasZ = options.hasZ;\n  multiPolygon.hasM = options.hasM;\n  if (options.isEmpty) return multiPolygon;\n  var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\n  var polygonCount = value.readVarInt();\n  for (var i = 0; i < polygonCount; i++) {\n    var polygon = new Polygon();\n    polygon.hasZ = options.hasZ;\n    polygon.hasM = options.hasM;\n    var ringCount = value.readVarInt();\n    var exteriorRingCount = value.readVarInt();\n    for (var j = 0; j < exteriorRingCount; j++) polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\n    for (j = 1; j < ringCount; j++) {\n      var interiorRing = [];\n      var interiorRingCount = value.readVarInt();\n      for (var k = 0; k < interiorRingCount; k++) interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\n      polygon.interiorRings.push(interiorRing);\n    }\n    multiPolygon.polygons.push(polygon);\n  }\n  return multiPolygon;\n};\nMultiPolygon._parseGeoJSON = function (value) {\n  var multiPolygon = new MultiPolygon();\n  if (value.coordinates.length > 0 && value.coordinates[0].length > 0 && value.coordinates[0][0].length > 0) multiPolygon.hasZ = value.coordinates[0][0][0].length > 2;\n  for (var i = 0; i < value.coordinates.length; i++) multiPolygon.polygons.push(Polygon._parseGeoJSON({\n    coordinates: value.coordinates[i]\n  }));\n  return multiPolygon;\n};\nMultiPolygon.prototype.toWkt = function () {\n  if (this.polygons.length === 0) return this._getWktType(Types.wkt.MultiPolygon, true);\n  var wkt = this._getWktType(Types.wkt.MultiPolygon, false) + '(';\n  for (var i = 0; i < this.polygons.length; i++) wkt += this.polygons[i]._toInnerWkt() + ',';\n  wkt = wkt.slice(0, -1);\n  wkt += ')';\n  return wkt;\n};\nMultiPolygon.prototype.toWkb = function () {\n  var wkb = new BinaryWriter(this._getWkbSize());\n  wkb.writeInt8(1);\n  this._writeWkbType(wkb, Types.wkb.MultiPolygon);\n  wkb.writeUInt32LE(this.polygons.length);\n  for (var i = 0; i < this.polygons.length; i++) wkb.writeBuffer(this.polygons[i].toWkb({\n    srid: this.srid\n  }));\n  return wkb.buffer;\n};\nMultiPolygon.prototype.toTwkb = function () {\n  var twkb = new BinaryWriter(0, true);\n  var precision = Geometry.getTwkbPrecision(5, 0, 0);\n  var isEmpty = this.polygons.length === 0;\n  this._writeTwkbHeader(twkb, Types.wkb.MultiPolygon, precision, isEmpty);\n  if (this.polygons.length > 0) {\n    twkb.writeVarInt(this.polygons.length);\n    var previousPoint = new Point(0, 0, 0, 0);\n    for (var i = 0; i < this.polygons.length; i++) {\n      twkb.writeVarInt(1 + this.polygons[i].interiorRings.length);\n      twkb.writeVarInt(this.polygons[i].exteriorRing.length);\n      for (var j = 0; j < this.polygons[i].exteriorRing.length; j++) this.polygons[i].exteriorRing[j]._writeTwkbPoint(twkb, precision, previousPoint);\n      for (j = 0; j < this.polygons[i].interiorRings.length; j++) {\n        twkb.writeVarInt(this.polygons[i].interiorRings[j].length);\n        for (var k = 0; k < this.polygons[i].interiorRings[j].length; k++) this.polygons[i].interiorRings[j][k]._writeTwkbPoint(twkb, precision, previousPoint);\n      }\n    }\n  }\n  return twkb.buffer;\n};\nMultiPolygon.prototype._getWkbSize = function () {\n  var size = 1 + 4 + 4;\n  for (var i = 0; i < this.polygons.length; i++) size += this.polygons[i]._getWkbSize();\n  return size;\n};\nMultiPolygon.prototype.toGeoJSON = function (options) {\n  var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\n  geoJSON.type = Types.geoJSON.MultiPolygon;\n  geoJSON.coordinates = [];\n  for (var i = 0; i < this.polygons.length; i++) geoJSON.coordinates.push(this.polygons[i].toGeoJSON().coordinates);\n  return geoJSON;\n};","map":{"version":3,"names":["module","exports","MultiPolygon","util","require","Types","Geometry","Point","Polygon","BinaryWriter","polygons","srid","call","length","hasZ","hasM","inherits","Z","multiPolygon","M","ZM","_parseWkt","value","options","isMatch","expectGroupStart","exteriorRing","interiorRings","push","apply","matchCoordinates","expectGroupEnd","_parseWkb","polygonCount","readUInt32","i","parse","_parseTwkb","isEmpty","previousPoint","undefined","readVarInt","polygon","ringCount","exteriorRingCount","j","_readTwkbPoint","interiorRing","interiorRingCount","k","_parseGeoJSON","coordinates","prototype","toWkt","_getWktType","wkt","_toInnerWkt","slice","toWkb","wkb","_getWkbSize","writeInt8","_writeWkbType","writeUInt32LE","writeBuffer","buffer","toTwkb","twkb","precision","getTwkbPrecision","_writeTwkbHeader","writeVarInt","_writeTwkbPoint","size","toGeoJSON","geoJSON","type"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/wkx/lib/multipolygon.js"],"sourcesContent":["module.exports = MultiPolygon;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar Polygon = require('./polygon');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiPolygon(polygons, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.polygons = polygons || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.polygons.length > 0) {\r\n        this.hasZ = this.polygons[0].hasZ;\r\n        this.hasM = this.polygons[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiPolygon, Geometry);\r\n\r\nMultiPolygon.Z = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.M = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.ZM = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkt = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiPolygon;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n\r\n        var exteriorRing = [];\r\n        var interiorRings = [];\r\n\r\n        value.expectGroupStart();\r\n        exteriorRing.push.apply(exteriorRing, value.matchCoordinates(options));\r\n        value.expectGroupEnd();\r\n\r\n        while (value.isMatch([','])) {\r\n            value.expectGroupStart();\r\n            interiorRings.push(value.matchCoordinates(options));\r\n            value.expectGroupEnd();\r\n        }\r\n\r\n        multiPolygon.polygons.push(new Polygon(exteriorRing, interiorRings));\r\n\r\n        value.expectGroupEnd();\r\n\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    var polygonCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < polygonCount; i++)\r\n        multiPolygon.polygons.push(Geometry.parse(value, options));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseTwkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiPolygon;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var polygonCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < polygonCount; i++) {\r\n        var polygon = new Polygon();\r\n        polygon.hasZ = options.hasZ;\r\n        polygon.hasM = options.hasM;\r\n\r\n        var ringCount = value.readVarInt();\r\n        var exteriorRingCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < exteriorRingCount; j++)\r\n            polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        for (j = 1; j < ringCount; j++) {\r\n            var interiorRing = [];\r\n\r\n            var interiorRingCount = value.readVarInt();\r\n\r\n            for (var k = 0; k < interiorRingCount; k++)\r\n                interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n            polygon.interiorRings.push(interiorRing);\r\n        }\r\n\r\n        multiPolygon.polygons.push(polygon);\r\n    }\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseGeoJSON = function (value) {\r\n    var multiPolygon = new MultiPolygon();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0 && value.coordinates[0][0].length > 0)\r\n        multiPolygon.hasZ = value.coordinates[0][0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiPolygon.polygons.push(Polygon._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.prototype.toWkt = function () {\r\n    if (this.polygons.length === 0)\r\n        return this._getWktType(Types.wkt.MultiPolygon, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiPolygon, false) + '(';\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkt += this.polygons[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiPolygon.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiPolygon);\r\n    wkb.writeUInt32LE(this.polygons.length);\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkb.writeBuffer(this.polygons[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.polygons.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiPolygon, precision, isEmpty);\r\n\r\n    if (this.polygons.length > 0) {\r\n        twkb.writeVarInt(this.polygons.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.polygons.length; i++) {\r\n            twkb.writeVarInt(1 + this.polygons[i].interiorRings.length);\r\n\r\n            twkb.writeVarInt(this.polygons[i].exteriorRing.length);\r\n\r\n            for (var j = 0; j < this.polygons[i].exteriorRing.length; j++)\r\n                this.polygons[i].exteriorRing[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n\r\n            for (j = 0; j < this.polygons[i].interiorRings.length; j++) {\r\n                twkb.writeVarInt(this.polygons[i].interiorRings[j].length);\r\n\r\n                for (var k = 0; k < this.polygons[i].interiorRings[j].length; k++)\r\n                    this.polygons[i].interiorRings[j][k]._writeTwkbPoint(twkb, precision, previousPoint);\r\n            }\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        size += this.polygons[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiPolygon.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiPolygon;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        geoJSON.coordinates.push(this.polygons[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}