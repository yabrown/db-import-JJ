{"ast":null,"code":"/*! @azure/msal-browser v2.37.0 2023-05-01 */\n'use strict';\n\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { PerformanceEvents, StringUtils, Constants, UrlString } from '@azure/msal-common';\nimport { InteractionHandler } from './InteractionHandler.js';\nimport { BrowserAuthError } from '../error/BrowserAuthError.js';\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from '../config/Configuration.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar SilentHandler = /** @class */function (_super) {\n  __extends(SilentHandler, _super);\n  function SilentHandler(authCodeModule, storageImpl, authCodeRequest, logger, systemOptions, performanceClient) {\n    var _this = _super.call(this, authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) || this;\n    _this.navigateFrameWait = systemOptions.navigateFrameWait;\n    _this.pollIntervalMilliseconds = systemOptions.pollIntervalMilliseconds;\n    return _this;\n  }\n  /**\r\n   * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n   * @param urlNavigate\r\n   * @param userRequestScopes\r\n   */\n  SilentHandler.prototype.initiateAuthRequest = function (requestUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerInitiateAuthRequest, this.authCodeRequest.correlationId);\n            if (StringUtils.isEmpty(requestUrl)) {\n              // Throw error if request URL is empty.\n              this.logger.info(\"Navigate url is empty\");\n              throw BrowserAuthError.createEmptyNavigationUriError();\n            }\n            if (!this.navigateFrameWait) return [3 /*break*/, 2];\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\n            return [4 /*yield*/, this.loadFrame(requestUrl)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n          case 2:\n            return [2 /*return*/, this.loadFrameSync(requestUrl)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n   * @param iframe\r\n   * @param timeout\r\n   */\n  SilentHandler.prototype.monitorIframeForHash = function (iframe, timeout) {\n    var _this = this;\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerMonitorIframeForHash, this.authCodeRequest.correlationId);\n    return new Promise(function (resolve, reject) {\n      if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n        _this.logger.warning(\"system.loadFrameTimeout or system.iframeHashTimeout set to lower (\" + timeout + \"ms) than the default (\" + DEFAULT_IFRAME_TIMEOUT_MS + \"ms). This may result in timeouts.\");\n      }\n      /*\r\n       * Polling for iframes can be purely timing based,\r\n       * since we don't need to account for interaction.\r\n       */\n      var nowMark = window.performance.now();\n      var timeoutMark = nowMark + timeout;\n      var intervalId = setInterval(function () {\n        if (window.performance.now() > timeoutMark) {\n          _this.removeHiddenIframe(iframe);\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createMonitorIframeTimeoutError());\n          return;\n        }\n        var href = Constants.EMPTY_STRING;\n        var contentWindow = iframe.contentWindow;\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\n        } catch (e) {}\n        if (StringUtils.isEmpty(href)) {\n          return;\n        }\n        var contentHash = contentWindow ? contentWindow.location.hash : Constants.EMPTY_STRING;\n        if (UrlString.hashContainsKnownProperties(contentHash)) {\n          // Success case\n          _this.removeHiddenIframe(iframe);\n          clearInterval(intervalId);\n          resolve(contentHash);\n          return;\n        }\n      }, _this.pollIntervalMilliseconds);\n    });\n  };\n  /**\r\n   * @hidden\r\n   * Loads iframe with authorization endpoint URL\r\n   * @ignore\r\n   */\n  SilentHandler.prototype.loadFrame = function (urlNavigate) {\n    var _this = this;\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\n    /*\r\n     * This trick overcomes iframe navigation in IE\r\n     * IE does not load the page consistently in iframe\r\n     */\n    return new Promise(function (resolve, reject) {\n      var frameHandle = _this.createHiddenIframe();\n      setTimeout(function () {\n        if (!frameHandle) {\n          reject(\"Unable to load iframe\");\n          return;\n        }\n        frameHandle.src = urlNavigate;\n        resolve(frameHandle);\n      }, _this.navigateFrameWait);\n    });\n  };\n  /**\r\n   * @hidden\r\n   * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n   * @param urlNavigate\r\n   * @param frameName\r\n   * @param logger\r\n   */\n  SilentHandler.prototype.loadFrameSync = function (urlNavigate) {\n    var frameHandle = this.createHiddenIframe();\n    frameHandle.src = urlNavigate;\n    return frameHandle;\n  };\n  /**\r\n   * @hidden\r\n   * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n   * @ignore\r\n   */\n  SilentHandler.prototype.createHiddenIframe = function () {\n    var authFrame = document.createElement(\"iframe\");\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n    document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n    return authFrame;\n  };\n  /**\r\n   * @hidden\r\n   * Removes a hidden iframe from the page.\r\n   * @ignore\r\n   */\n  SilentHandler.prototype.removeHiddenIframe = function (iframe) {\n    if (document.body === iframe.parentNode) {\n      document.body.removeChild(iframe);\n    }\n  };\n  return SilentHandler;\n}(InteractionHandler);\nexport { SilentHandler };","map":{"version":3,"names":["__extends","SilentHandler","_super","authCodeModule","storageImpl","authCodeRequest","logger","systemOptions","performanceClient","_this","call","navigateFrameWait","pollIntervalMilliseconds","prototype","initiateAuthRequest","requestUrl","addQueueMeasurement","PerformanceEvents","SilentHandlerInitiateAuthRequest","correlationId","StringUtils","isEmpty","info","BrowserAuthError","createEmptyNavigationUriError","setPreQueueTime","SilentHandlerLoadFrame","loadFrame","_a","sent","loadFrameSync","monitorIframeForHash","iframe","timeout","SilentHandlerMonitorIframeForHash","Promise","resolve","reject","DEFAULT_IFRAME_TIMEOUT_MS","warning","nowMark","window","performance","now","timeoutMark","intervalId","setInterval","removeHiddenIframe","clearInterval","createMonitorIframeTimeoutError","href","Constants","EMPTY_STRING","contentWindow","location","e","contentHash","hash","UrlString","hashContainsKnownProperties","urlNavigate","frameHandle","createHiddenIframe","setTimeout","src","authFrame","document","createElement","style","visibility","position","width","height","border","setAttribute","getElementsByTagName","appendChild","body","parentNode","removeChild","InteractionHandler"],"sources":["../../src/interaction_handler/SilentHandler.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { UrlString, StringUtils, CommonAuthorizationCodeRequest, AuthorizationCodeClient, Constants, Logger, IPerformanceClient, PerformanceEvents } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { BrowserSystemOptions, DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration\";\r\n\r\nexport class SilentHandler extends InteractionHandler {\r\n\r\n    private navigateFrameWait: number;\r\n    private pollIntervalMilliseconds: number;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, logger: Logger, systemOptions: Required<Pick<BrowserSystemOptions, \"navigateFrameWait\" | \"pollIntervalMilliseconds\">>, performanceClient: IPerformanceClient) {\r\n        super(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient);\r\n        this.navigateFrameWait = systemOptions.navigateFrameWait;\r\n        this.pollIntervalMilliseconds = systemOptions.pollIntervalMilliseconds;\r\n    }\r\n\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate\r\n     * @param userRequestScopes\r\n     */\r\n    async initiateAuthRequest(requestUrl: string): Promise<HTMLIFrameElement> {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerInitiateAuthRequest, this.authCodeRequest.correlationId);\r\n\r\n        if (StringUtils.isEmpty(requestUrl)) {\r\n            // Throw error if request URL is empty.\r\n            this.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n\r\n        if (this.navigateFrameWait) {\r\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\r\n            return await this.loadFrame(requestUrl);\r\n        }\r\n        return this.loadFrameSync(requestUrl);\r\n    }\r\n\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframe\r\n     * @param timeout\r\n     */\r\n    monitorIframeForHash(iframe: HTMLIFrameElement, timeout: number): Promise<string> {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerMonitorIframeForHash, this.authCodeRequest.correlationId);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\r\n                this.logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\r\n            }\r\n\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            const nowMark = window.performance.now();\r\n            const timeoutMark = nowMark + timeout;\r\n\r\n            const intervalId = setInterval(() => {\r\n                if (window.performance.now() > timeoutMark) {\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorIframeTimeoutError());\r\n                    return;\r\n                }\r\n\r\n                let href: string = Constants.EMPTY_STRING;\r\n                const contentWindow = iframe.contentWindow;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\r\n                } catch (e) {}\r\n\r\n                if (StringUtils.isEmpty(href)) {\r\n                    return;\r\n                }\r\n\r\n                const contentHash = contentWindow ? contentWindow.location.hash: Constants.EMPTY_STRING;\r\n                if (UrlString.hashContainsKnownProperties(contentHash)) {\r\n                    // Success case\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n            }, this.pollIntervalMilliseconds);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    private loadFrame(urlNavigate: string): Promise<HTMLIFrameElement> {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\r\n\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const frameHandle = this.createHiddenIframe();\r\n\r\n            setTimeout(() => {\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe\");\r\n                    return;\r\n                }\r\n\r\n                frameHandle.src = urlNavigate;\r\n\r\n                resolve(frameHandle);\r\n            }, this.navigateFrameWait);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    private loadFrameSync(urlNavigate: string): HTMLIFrameElement{\r\n        const frameHandle = this.createHiddenIframe();\r\n\r\n        frameHandle.src = urlNavigate;\r\n\r\n        return frameHandle;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    private createHiddenIframe(): HTMLIFrameElement {\r\n        const authFrame = document.createElement(\"iframe\");\r\n\r\n        authFrame.style.visibility = \"hidden\";\r\n        authFrame.style.position = \"absolute\";\r\n        authFrame.style.width = authFrame.style.height = \"0\";\r\n        authFrame.style.border = \"0\";\r\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\r\n\r\n        return authFrame;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;AAAA;;;;;EAWmCA,SAAA,CAAAC,aAAA,EAAAC,MAAA;EAK/B,SAAAD,cAAYE,cAAuC,EAAEC,WAAgC,EAAEC,eAA+C,EAAEC,MAAc,EAAEC,aAAqG,EAAEC,iBAAqC;IAApS,IAAAC,KAAA,GACIP,MAAA,CAAAQ,IAAA,OAAMP,cAAc,EAAEC,WAAW,EAAEC,eAAe,EAAEC,MAAM,EAAEE,iBAAiB,CAAC;IAC9EC,KAAI,CAACE,iBAAiB,GAAGJ,aAAa,CAACI,iBAAiB;IACxDF,KAAI,CAACG,wBAAwB,GAAGL,aAAa,CAACK,wBAAwB;;;;;;;;EAQpEX,aAAA,CAAAY,SAAA,CAAAC,mBAAmB,GAAzB,UAA0BC,UAAkB;;;;;YACxC,IAAI,CAACP,iBAAiB,CAACQ,mBAAmB,CAACC,iBAAiB,CAACC,gCAAgC,EAAE,IAAI,CAACb,eAAe,CAACc,aAAa,CAAC;YAElI,IAAIC,WAAW,CAACC,OAAO,CAACN,UAAU,CAAC,EAAE;;cAEjC,IAAI,CAACT,MAAM,CAACgB,IAAI,CAAC,uBAAuB,CAAC;cACzC,MAAMC,gBAAgB,CAACC,6BAA6B,EAAE;;iBAGtD,IAAI,CAACb,iBAAiB,EAAtB;YACA,IAAI,CAACH,iBAAiB,CAACiB,eAAe,CAACR,iBAAiB,CAACS,sBAAsB,EAAE,IAAI,CAACrB,eAAe,CAACc,aAAa,CAAC;YAC7G,qBAAM,IAAI,CAACQ,SAAS,CAACZ,UAAU,CAAC;;YAAvC,sBAAOa,EAAA,CAAAC,IAAA,EAAgC;;YAE3C,sBAAO,IAAI,CAACC,aAAa,CAACf,UAAU,CAAC;;;;GACxC;;;;;;EAODd,aAAA,CAAAY,SAAA,CAAAkB,oBAAoB,GAApB,UAAqBC,MAAyB,EAAEC,OAAe;IAA/D,IAAAxB,KAAA;IACI,IAAI,CAACD,iBAAiB,CAACQ,mBAAmB,CAACC,iBAAiB,CAACiB,iCAAiC,EAAE,IAAI,CAAC7B,eAAe,CAACc,aAAa,CAAC;IAEnI,OAAO,IAAIgB,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;MAC/B,IAAIJ,OAAO,GAAGK,yBAAyB,EAAE;QACrC7B,KAAI,CAACH,MAAM,CAACiC,OAAO,CAAC,uEAAqEN,OAAO,8BAAyBK,yBAAyB,sCAAmC,CAAC;;;;;;MAO1L,IAAME,OAAO,GAAGC,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE;MACxC,IAAMC,WAAW,GAAGJ,OAAO,GAAGP,OAAO;MAErC,IAAMY,UAAU,GAAGC,WAAW,CAAC;QAC3B,IAAIL,MAAM,CAACC,WAAW,CAACC,GAAG,EAAE,GAAGC,WAAW,EAAE;UACxCnC,KAAI,CAACsC,kBAAkB,CAACf,MAAM,CAAC;UAC/BgB,aAAa,CAACH,UAAU,CAAC;UACzBR,MAAM,CAACd,gBAAgB,CAAC0B,+BAA+B,EAAE,CAAC;UAC1D;;QAGJ,IAAIC,IAAI,GAAWC,SAAS,CAACC,YAAY;QACzC,IAAMC,aAAa,GAAGrB,MAAM,CAACqB,aAAa;QAC1C,IAAI;;;;;;UAMAH,IAAI,GAAGG,aAAa,GAAGA,aAAa,CAACC,QAAQ,CAACJ,IAAI,GAAGC,SAAS,CAACC,YAAY;SAC9E,CAAC,OAAOG,CAAC,EAAE;QAEZ,IAAInC,WAAW,CAACC,OAAO,CAAC6B,IAAI,CAAC,EAAE;UAC3B;;QAGJ,IAAMM,WAAW,GAAGH,aAAa,GAAGA,aAAa,CAACC,QAAQ,CAACG,IAAI,GAAEN,SAAS,CAACC,YAAY;QACvF,IAAIM,SAAS,CAACC,2BAA2B,CAACH,WAAW,CAAC,EAAE;;UAEpD/C,KAAI,CAACsC,kBAAkB,CAACf,MAAM,CAAC;UAC/BgB,aAAa,CAACH,UAAU,CAAC;UACzBT,OAAO,CAACoB,WAAW,CAAC;UACpB;;OAEP,EAAE/C,KAAI,CAACG,wBAAwB,CAAC;KACpC,CAAC;GACL;;;;;;EAOOX,aAAA,CAAAY,SAAA,CAAAc,SAAS,GAAjB,UAAkBiC,WAAmB;IAArC,IAAAnD,KAAA;IACI,IAAI,CAACD,iBAAiB,CAACQ,mBAAmB,CAACC,iBAAiB,CAACS,sBAAsB,EAAE,IAAI,CAACrB,eAAe,CAACc,aAAa,CAAC;;;;;IAOxH,OAAO,IAAIgB,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;MAC/B,IAAMwB,WAAW,GAAGpD,KAAI,CAACqD,kBAAkB,EAAE;MAE7CC,UAAU,CAAC;QACP,IAAI,CAACF,WAAW,EAAE;UACdxB,MAAM,CAAC,uBAAuB,CAAC;UAC/B;;QAGJwB,WAAW,CAACG,GAAG,GAAGJ,WAAW;QAE7BxB,OAAO,CAACyB,WAAW,CAAC;OACvB,EAAEpD,KAAI,CAACE,iBAAiB,CAAC;KAC7B,CAAC;GACL;;;;;;;;EASOV,aAAA,CAAAY,SAAA,CAAAiB,aAAa,GAArB,UAAsB8B,WAAmB;IACrC,IAAMC,WAAW,GAAG,IAAI,CAACC,kBAAkB,EAAE;IAE7CD,WAAW,CAACG,GAAG,GAAGJ,WAAW;IAE7B,OAAOC,WAAW;GACrB;;;;;;EAOO5D,aAAA,CAAAY,SAAA,CAAAiD,kBAAkB,GAA1B;IACI,IAAMG,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAElDF,SAAS,CAACG,KAAK,CAACC,UAAU,GAAG,QAAQ;IACrCJ,SAAS,CAACG,KAAK,CAACE,QAAQ,GAAG,UAAU;IACrCL,SAAS,CAACG,KAAK,CAACG,KAAK,GAAGN,SAAS,CAACG,KAAK,CAACI,MAAM,GAAG,GAAG;IACpDP,SAAS,CAACG,KAAK,CAACK,MAAM,GAAG,GAAG;IAC5BR,SAAS,CAACS,YAAY,CAAC,SAAS,EAAE,6CAA6C,CAAC;IAChFR,QAAQ,CAACS,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAACX,SAAS,CAAC;IAE/D,OAAOA,SAAS;GACnB;;;;;;EAOOhE,aAAA,CAAAY,SAAA,CAAAkC,kBAAkB,GAA1B,UAA2Bf,MAAyB;IAChD,IAAIkC,QAAQ,CAACW,IAAI,KAAK7C,MAAM,CAAC8C,UAAU,EAAE;MACrCZ,QAAQ,CAACW,IAAI,CAACE,WAAW,CAAC/C,MAAM,CAAC;;GAExC;EACL,OAAA/B,aAAC;AAAD,CA/JA,CAAmC+E,kBAAkB"},"metadata":{},"sourceType":"module"}