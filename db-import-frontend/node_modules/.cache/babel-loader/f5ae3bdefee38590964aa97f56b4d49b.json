{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nfunction checkNamingCollision(association) {\n  if (Object.prototype.hasOwnProperty.call(association.source.rawAttributes, association.as)) {\n    throw new Error(\"Naming collision between attribute '\".concat(association.as, \"' and association '\").concat(association.as, \"' on model \").concat(association.source.name, \". To remedy this, change either foreignKey or as in your association definition\"));\n  }\n}\nexports.checkNamingCollision = checkNamingCollision;\nfunction addForeignKeyConstraints(newAttribute, source, target, options, key) {\n  if (options.foreignKeyConstraint || options.onDelete || options.onUpdate) {\n    var primaryKeys = Object.keys(source.primaryKeys).map(function (primaryKeyAttribute) {\n      return source.rawAttributes[primaryKeyAttribute].field || primaryKeyAttribute;\n    });\n    if (primaryKeys.length === 1 || !primaryKeys.includes(key)) {\n      newAttribute.references = {\n        model: source.getTableName(),\n        key: key || primaryKeys[0]\n      };\n      newAttribute.onDelete = options.onDelete;\n      newAttribute.onUpdate = options.onUpdate;\n    }\n  }\n}\nexports.addForeignKeyConstraints = addForeignKeyConstraints;\nfunction mixinMethods(association, obj, methods, aliases) {\n  aliases = aliases || {};\n  var _iterator = _createForOfIteratorHelper(methods),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var method = _step.value;\n      if (!Object.prototype.hasOwnProperty.call(obj, association.accessors[method])) {\n        var realMethod = aliases[method] || method;\n        obj[association.accessors[method]] = function () {\n          return association[realMethod].apply(association, [this].concat(_toConsumableArray(Array.from(arguments))));\n        };\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nexports.mixinMethods = mixinMethods;","map":{"version":3,"names":["checkNamingCollision","association","Object","prototype","hasOwnProperty","call","source","rawAttributes","as","Error","concat","name","exports","addForeignKeyConstraints","newAttribute","target","options","key","foreignKeyConstraint","onDelete","onUpdate","primaryKeys","keys","map","primaryKeyAttribute","field","length","includes","references","model","getTableName","mixinMethods","obj","methods","aliases","_iterator","_createForOfIteratorHelper","_step","_loop","method","value","accessors","realMethod","apply","_toConsumableArray","Array","from","arguments","s","n","done","err","e","f"],"sources":["../../src/associations/helpers.js"],"sourcesContent":["'use strict';\n\nfunction checkNamingCollision(association) {\n  if (Object.prototype.hasOwnProperty.call(association.source.rawAttributes, association.as)) {\n    throw new Error(\n      `Naming collision between attribute '${association.as}'` +\n      ` and association '${association.as}' on model ${association.source.name}` +\n      '. To remedy this, change either foreignKey or as in your association definition'\n    );\n  }\n}\nexports.checkNamingCollision = checkNamingCollision;\n\nfunction addForeignKeyConstraints(newAttribute, source, target, options, key) {\n  // FK constraints are opt-in: users must either set `foreignKeyConstraints`\n  // on the association, or request an `onDelete` or `onUpdate` behavior\n\n  if (options.foreignKeyConstraint || options.onDelete || options.onUpdate) {\n    // Find primary keys: composite keys not supported with this approach\n    const primaryKeys = Object.keys(source.primaryKeys)\n      .map(primaryKeyAttribute => source.rawAttributes[primaryKeyAttribute].field || primaryKeyAttribute);\n\n    if (primaryKeys.length === 1 || !primaryKeys.includes(key)) {\n      newAttribute.references = {\n        model: source.getTableName(),\n        key: key || primaryKeys[0]\n      };\n\n      newAttribute.onDelete = options.onDelete;\n      newAttribute.onUpdate = options.onUpdate;\n    }\n  }\n}\nexports.addForeignKeyConstraints = addForeignKeyConstraints;\n\n/**\n * Mixin (inject) association methods to model prototype\n *\n * @private\n *\n * @param {object} association instance\n * @param {object} obj Model prototype\n * @param {Array} methods Method names to inject\n * @param {object} aliases Mapping between model and association method names\n *\n */\nfunction mixinMethods(association, obj, methods, aliases) {\n  aliases = aliases || {};\n\n  for (const method of methods) {\n    // don't override custom methods\n    if (!Object.prototype.hasOwnProperty.call(obj, association.accessors[method])) {\n      const realMethod = aliases[method] || method;\n\n      obj[association.accessors[method]] = function() {\n        return association[realMethod](this, ...Array.from(arguments));\n      };\n    }\n  }\n}\nexports.mixinMethods = mixinMethods;\n"],"mappings":";;;;AAEA,SAAAA,qBAA8BC,WAAA,EAAa;EACzC,IAAIC,MAAA,CAAOC,SAAA,CAAUC,cAAA,CAAeC,IAAA,CAAKJ,WAAA,CAAYK,MAAA,CAAOC,aAAA,EAAeN,WAAA,CAAYO,EAAA,GAAK;IAC1F,MAAM,IAAIC,KAAA,wCAAAC,MAAA,CAC+BT,WAAA,CAAYO,EAAA,yBAAAE,MAAA,CAC9BT,WAAA,CAAYO,EAAA,iBAAAE,MAAA,CAAgBT,WAAA,CAAYK,MAAA,CAAOK,IAAA;EAAA;AAAA;AAK1EC,OAAA,CAAQZ,oBAAA,GAAuBA,oBAAA;AAE/B,SAAAa,yBAAkCC,YAAA,EAAcR,MAAA,EAAQS,MAAA,EAAQC,OAAA,EAASC,GAAA,EAAK;EAI5E,IAAID,OAAA,CAAQE,oBAAA,IAAwBF,OAAA,CAAQG,QAAA,IAAYH,OAAA,CAAQI,QAAA,EAAU;IAExE,IAAMC,WAAA,GAAcnB,MAAA,CAAOoB,IAAA,CAAKhB,MAAA,CAAOe,WAAA,EACpCE,GAAA,CAAI,UAAAC,mBAAA;MAAA,OAAuBlB,MAAA,CAAOC,aAAA,CAAciB,mBAAA,EAAqBC,KAAA,IAASD,mBAAA;IAAA;IAEjF,IAAIH,WAAA,CAAYK,MAAA,KAAW,KAAK,CAACL,WAAA,CAAYM,QAAA,CAASV,GAAA,GAAM;MAC1DH,YAAA,CAAac,UAAA,GAAa;QACxBC,KAAA,EAAOvB,MAAA,CAAOwB,YAAA;QACdb,GAAA,EAAKA,GAAA,IAAOI,WAAA,CAAY;MAAA;MAG1BP,YAAA,CAAaK,QAAA,GAAWH,OAAA,CAAQG,QAAA;MAChCL,YAAA,CAAaM,QAAA,GAAWJ,OAAA,CAAQI,QAAA;IAAA;EAAA;AAAA;AAItCR,OAAA,CAAQC,wBAAA,GAA2BA,wBAAA;AAanC,SAAAkB,aAAsB9B,WAAA,EAAa+B,GAAA,EAAKC,OAAA,EAASC,OAAA,EAAS;EACxDA,OAAA,GAAUA,OAAA,IAAW;EAAA,IAAAC,SAAA,GAAAC,0BAAA,CAEAH,OAAA;IAAAI,KAAA;EAAA;IAAA,IAAAC,KAAA,YAAAA,MAAA,EAAS;MAAA,IAAnBC,MAAA,GAAAF,KAAA,CAAAG,KAAA;MAET,IAAI,CAACtC,MAAA,CAAOC,SAAA,CAAUC,cAAA,CAAeC,IAAA,CAAK2B,GAAA,EAAK/B,WAAA,CAAYwC,SAAA,CAAUF,MAAA,IAAU;QAC7E,IAAMG,UAAA,GAAaR,OAAA,CAAQK,MAAA,KAAWA,MAAA;QAEtCP,GAAA,CAAI/B,WAAA,CAAYwC,SAAA,CAAUF,MAAA,KAAW,YAAW;UAC9C,OAAOtC,WAAA,CAAYyC,UAAA,EAAAC,KAAA,CAAZ1C,WAAA,GAAwB,MAAAS,MAAA,CAAAkC,kBAAA,CAASC,KAAA,CAAMC,IAAA,CAAKC,SAAA;QAAA;MAAA;IAAA;IANzD,KAAAZ,SAAA,CAAAa,CAAA,MAAAX,KAAA,GAAAF,SAAA,CAAAc,CAAA,IAAAC,IAAA;MAAAZ,KAAA;IAAA;EAMyD,SAAAa,GAAA;IAAAhB,SAAA,CAAAiB,CAAA,CAAAD,GAAA;EAAA;IAAAhB,SAAA,CAAAkB,CAAA;EAAA;AAAA;AAK3DzC,OAAA,CAAQmB,YAAA,GAAeA,YAAA"},"metadata":{},"sourceType":"script"}