{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _assertThisInitialized = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _ = require(\"lodash\");\nvar AbstractDialect = require(\"../abstract\");\nvar ConnectionManager = require(\"./connection-manager\");\nvar Query = require(\"./query\");\nvar QueryGenerator = require(\"./query-generator\");\nvar DataTypes = require(\"../../data-types\").mssql;\nvar _require = require(\"./query-interface\"),\n  MSSqlQueryInterface = _require.MSSqlQueryInterface;\nvar MssqlDialect = /*#__PURE__*/function (_AbstractDialect) {\n  _inherits(MssqlDialect, _AbstractDialect);\n  var _super = _createSuper(MssqlDialect);\n  function MssqlDialect(sequelize) {\n    var _this;\n    _classCallCheck(this, MssqlDialect);\n    _this = _super.call(this);\n    _this.sequelize = sequelize;\n    _this.connectionManager = new ConnectionManager(_assertThisInitialized(_this), sequelize);\n    _this.queryGenerator = new QueryGenerator({\n      _dialect: _assertThisInitialized(_this),\n      sequelize: sequelize\n    });\n    _this.queryInterface = new MSSqlQueryInterface(sequelize, _this.queryGenerator);\n    return _this;\n  }\n  return _createClass(MssqlDialect);\n}(AbstractDialect);\nMssqlDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  DEFAULT: true,\n  \"DEFAULT VALUES\": true,\n  \"LIMIT ON UPDATE\": true,\n  \"ORDER NULLS\": false,\n  lock: false,\n  transactions: true,\n  migrations: false,\n  returnValues: {\n    output: true\n  },\n  schemas: true,\n  autoIncrement: {\n    identityInsert: true,\n    defaultValue: false,\n    update: false\n  },\n  constraints: {\n    restrict: false,\n    default: true\n  },\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: true,\n    using: false,\n    where: true\n  },\n  NUMERIC: true,\n  tmpTableTrigger: true\n});\nMssqlDialect.prototype.defaultVersion = \"12.0.2000\";\nMssqlDialect.prototype.Query = Query;\nMssqlDialect.prototype.name = \"mssql\";\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = \"[\";\nMssqlDialect.prototype.TICK_CHAR_RIGHT = \"]\";\nMssqlDialect.prototype.DataTypes = DataTypes;\nmodule.exports = MssqlDialect;","map":{"version":3,"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","mssql","_require","MSSqlQueryInterface","MssqlDialect","_AbstractDialect","_inherits","_super","_createSuper","sequelize","_this","_classCallCheck","call","connectionManager","_assertThisInitialized","queryGenerator","_dialect","queryInterface","_createClass","prototype","supports","merge","cloneDeep","DEFAULT","lock","transactions","migrations","returnValues","output","schemas","autoIncrement","identityInsert","defaultValue","update","constraints","restrict","default","index","collate","length","parser","type","using","where","NUMERIC","tmpTableTrigger","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["../../../src/dialects/mssql/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mssql;\nconst { MSSqlQueryInterface } = require('./query-interface');\n\nclass MssqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MSSqlQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n}\n\nMssqlDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    DEFAULT: true,\n    'DEFAULT VALUES': true,\n    'LIMIT ON UPDATE': true,\n    'ORDER NULLS': false,\n    lock: false,\n    transactions: true,\n    migrations: false,\n    returnValues: {\n      output: true\n    },\n    schemas: true,\n    autoIncrement: {\n      identityInsert: true,\n      defaultValue: false,\n      update: false\n    },\n    constraints: {\n      restrict: false,\n      default: true\n    },\n    index: {\n      collate: false,\n      length: false,\n      parser: false,\n      type: true,\n      using: false,\n      where: true\n    },\n    NUMERIC: true,\n    tmpTableTrigger: true\n  }\n);\n\nMssqlDialect.prototype.defaultVersion = '12.0.2000'; // SQL Server 2014 Express, minimum supported version\nMssqlDialect.prototype.Query = Query;\nMssqlDialect.prototype.name = 'mssql';\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = '[';\nMssqlDialect.prototype.TICK_CHAR_RIGHT = ']';\nMssqlDialect.prototype.DataTypes = DataTypes;\n\nmodule.exports = MssqlDialect;\n"],"mappings":";;;;;;;AAEA,IAAMA,CAAA,GAAIC,OAAA,CAAQ;AAClB,IAAMC,eAAA,GAAkBD,OAAA,CAAQ;AAChC,IAAME,iBAAA,GAAoBF,OAAA,CAAQ;AAClC,IAAMG,KAAA,GAAQH,OAAA,CAAQ;AACtB,IAAMI,cAAA,GAAiBJ,OAAA,CAAQ;AAC/B,IAAMK,SAAA,GAAYL,OAAA,CAAQ,oBAAoBM,KAAA;AAC9C,IAAAC,QAAA,GAAgCP,OAAA,CAAQ;EAAhCQ,mBAAA,GAAAD,QAAA,CAAAC,mBAAA;AAAgC,IAExCC,YAAA,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EACE,SAAAA,aAAYK,SAAA,EAAW;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,YAAA;IACrBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IACAF,KAAA,CAAKD,SAAA,GAAYA,SAAA;IACjBC,KAAA,CAAKG,iBAAA,GAAoB,IAAIhB,iBAAA,CAAAiB,sBAAA,CAAAJ,KAAA,GAAwBD,SAAA;IACrDC,KAAA,CAAKK,cAAA,GAAiB,IAAIhB,cAAA,CAAe;MACvCiB,QAAA,EAAAF,sBAAA,CAAAJ,KAAA,CAAU;MACVD,SAAA,EAAAA;IAAA;IAEFC,KAAA,CAAKO,cAAA,GAAiB,IAAId,mBAAA,CACxBM,SAAA,EACAC,KAAA,CAAKK,cAAA;IAAA,OAAAL,KAAA;EAAA;EAAA,OAAAQ,YAAA,CAAAd,YAAA;AAAA,EAXgBR,eAAA;AAgB3BQ,YAAA,CAAae,SAAA,CAAUC,QAAA,GAAW1B,CAAA,CAAE2B,KAAA,CAClC3B,CAAA,CAAE4B,SAAA,CAAU1B,eAAA,CAAgBuB,SAAA,CAAUC,QAAA,GACtC;EACEG,OAAA,EAAS;EACT,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACfC,IAAA,EAAM;EACNC,YAAA,EAAc;EACdC,UAAA,EAAY;EACZC,YAAA,EAAc;IACZC,MAAA,EAAQ;EAAA;EAEVC,OAAA,EAAS;EACTC,aAAA,EAAe;IACbC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,MAAA,EAAQ;EAAA;EAEVC,WAAA,EAAa;IACXC,QAAA,EAAU;IACVC,OAAA,EAAS;EAAA;EAEXC,KAAA,EAAO;IACLC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,KAAA,EAAO;EAAA;EAETC,OAAA,EAAS;EACTC,eAAA,EAAiB;AAAA;AAIrBzC,YAAA,CAAae,SAAA,CAAU2B,cAAA,GAAiB;AACxC1C,YAAA,CAAae,SAAA,CAAUrB,KAAA,GAAQA,KAAA;AAC/BM,YAAA,CAAae,SAAA,CAAU4B,IAAA,GAAO;AAC9B3C,YAAA,CAAae,SAAA,CAAU6B,SAAA,GAAY;AACnC5C,YAAA,CAAae,SAAA,CAAU8B,cAAA,GAAiB;AACxC7C,YAAA,CAAae,SAAA,CAAU+B,eAAA,GAAkB;AACzC9C,YAAA,CAAae,SAAA,CAAUnB,SAAA,GAAYA,SAAA;AAEnCmD,MAAA,CAAOC,OAAA,GAAUhD,YAAA"},"metadata":{},"sourceType":"script"}