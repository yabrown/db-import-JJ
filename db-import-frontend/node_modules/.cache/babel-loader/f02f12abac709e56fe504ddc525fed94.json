{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent\";\nvar UserAgentHeaderName = getUserAgentHeaderName();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport var userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    sendRequest: function sendRequest(request, next) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, userAgentValue);\n              }\n              return _context.abrupt(\"return\", next(request));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  };\n}","map":{"version":3,"names":["getUserAgentHeaderName","getUserAgentValue","UserAgentHeaderName","userAgentPolicyName","userAgentPolicy","options","arguments","length","undefined","userAgentValue","userAgentPrefix","name","sendRequest","request","next","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","headers","has","set","abrupt","stop"],"sources":["../../../src/policies/userAgentPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces\";\nimport { PipelinePolicy } from \"../pipeline\";\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent\";\n\nconst UserAgentHeaderName = getUserAgentHeaderName();\n\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentPolicyOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options: UserAgentPolicyOptions = {}): PipelinePolicy {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(UserAgentHeaderName)) {\n        request.headers.set(UserAgentHeaderName, userAgentValue);\n      }\n      return next(request);\n    },\n  };\n}\n"],"mappings":";;AAAA;AACA;AAIA,SAASA,sBAAsB,EAAEC,iBAAiB,QAAQ,mBAAmB;AAE7E,IAAMC,mBAAmB,GAAGF,sBAAsB,EAAE;AAEpD;;;AAGA,OAAO,IAAMG,mBAAmB,GAAG,iBAAiB;AAapD;;;;;AAKA,OAAM,SAAUC,eAAeA,CAAA,EAAqC;EAAA,IAApCC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkC,EAAE;EAClE,IAAMG,cAAc,GAAGR,iBAAiB,CAACI,OAAO,CAACK,eAAe,CAAC;EACjE,OAAO;IACLC,IAAI,EAAER,mBAAmB;IACnBS,WAAW,WAAAA,YAACC,OAAwB,EAAEC,IAAiB;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAP,IAAA;YAAA;cAC3D,IAAI,CAACD,OAAO,CAACU,OAAO,CAACC,GAAG,CAACtB,mBAAmB,CAAC,EAAE;gBAC7CW,OAAO,CAACU,OAAO,CAACE,GAAG,CAACvB,mBAAmB,EAAEO,cAAc,CAAC;;cACzD,OAAAY,QAAA,CAAAK,MAAA,WACMZ,IAAI,CAACD,OAAO,CAAC;YAAA;YAAA;cAAA,OAAAQ,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA;IACtB;GACD;AACH"},"metadata":{},"sourceType":"module"}