{"ast":null,"code":"'use strict';\n\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar mkdirp = require('../mkdirs').mkdirs;\nvar pathExists = require('../path-exists').pathExists;\nvar utimes = require('../util/utimes').utimesMillis;\nvar notExist = Symbol('notExist');\nfunction copy(src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts;\n    opts = {};\n  } else if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n  cb = cb || function () {};\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(\"fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n    see https://github.com/jprichardson/node-fs-extra/issues/269\");\n  }\n  checkPaths(src, dest, function (err, destStat) {\n    if (err) return cb(err);\n    if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb);\n    return checkParentDir(destStat, src, dest, opts, cb);\n  });\n}\nfunction checkParentDir(destStat, src, dest, opts, cb) {\n  var destParent = path.dirname(dest);\n  pathExists(destParent, function (err, dirExists) {\n    if (err) return cb(err);\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb);\n    mkdirp(destParent, function (err) {\n      if (err) return cb(err);\n      return startCopy(destStat, src, dest, opts, cb);\n    });\n  });\n}\nfunction handleFilter(onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(function (include) {\n    if (include) {\n      if (destStat) return onInclude(destStat, src, dest, opts, cb);\n      return onInclude(src, dest, opts, cb);\n    }\n    return cb();\n  }, function (error) {\n    return cb(error);\n  });\n}\nfunction startCopy(destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb);\n  return getStats(destStat, src, dest, opts, cb);\n}\nfunction getStats(destStat, src, dest, opts, cb) {\n  var stat = opts.dereference ? fs.stat : fs.lstat;\n  stat(src, function (err, srcStat) {\n    if (err) return cb(err);\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb);\n  });\n}\nfunction onFile(srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts, cb);\n  return mayCopyFile(srcStat, src, dest, opts, cb);\n}\nfunction mayCopyFile(srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, function (err) {\n      if (err) return cb(err);\n      return copyFile(srcStat, src, dest, opts, cb);\n    });\n  } else if (opts.errorOnExist) {\n    return cb(new Error(\"'\".concat(dest, \"' already exists\")));\n  } else return cb();\n}\nfunction copyFile(srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, function (err) {\n      if (err) return cb(err);\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb);\n    });\n  }\n  return copyFileFallback(srcStat, src, dest, opts, cb);\n}\nfunction copyFileFallback(srcStat, src, dest, opts, cb) {\n  var rs = fs.createReadStream(src);\n  rs.on('error', function (err) {\n    return cb(err);\n  }).once('open', function () {\n    var ws = fs.createWriteStream(dest, {\n      mode: srcStat.mode\n    });\n    ws.on('error', function (err) {\n      return cb(err);\n    }).on('open', function () {\n      return rs.pipe(ws);\n    }).once('close', function () {\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb);\n    });\n  });\n}\nfunction setDestModeAndTimestamps(srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, function (err) {\n    if (err) return cb(err);\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb);\n    }\n    return cb();\n  });\n}\nfunction onDir(srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts, cb);\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(\"Cannot overwrite non-directory '\".concat(dest, \"' with directory '\").concat(src, \"'.\")));\n  }\n  return copyDir(src, dest, opts, cb);\n}\nfunction mkDirAndCopy(srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, function (err) {\n    if (err) return cb(err);\n    copyDir(src, dest, opts, function (err) {\n      if (err) return cb(err);\n      return fs.chmod(dest, srcStat.mode, cb);\n    });\n  });\n}\nfunction copyDir(src, dest, opts, cb) {\n  fs.readdir(src, function (err, items) {\n    if (err) return cb(err);\n    return copyDirItems(items, src, dest, opts, cb);\n  });\n}\nfunction copyDirItems(items, src, dest, opts, cb) {\n  var item = items.pop();\n  if (!item) return cb();\n  return copyDirItem(items, item, src, dest, opts, cb);\n}\nfunction copyDirItem(items, item, src, dest, opts, cb) {\n  var srcItem = path.join(src, item);\n  var destItem = path.join(dest, item);\n  checkPaths(srcItem, destItem, function (err, destStat) {\n    if (err) return cb(err);\n    startCopy(destStat, srcItem, destItem, opts, function (err) {\n      if (err) return cb(err);\n      return copyDirItems(items, src, dest, opts, cb);\n    });\n  });\n}\nfunction onLink(destStat, src, dest, opts, cb) {\n  fs.readlink(src, function (err, resolvedSrc) {\n    if (err) return cb(err);\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n    }\n    if (destStat === notExist) {\n      return fs.symlink(resolvedSrc, dest, cb);\n    } else {\n      fs.readlink(dest, function (err, resolvedDest) {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb);\n          return cb(err);\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest);\n        }\n        if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(\"Cannot copy '\".concat(resolvedSrc, \"' to a subdirectory of itself, '\").concat(resolvedDest, \"'.\")));\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(\"Cannot overwrite '\".concat(resolvedDest, \"' with '\").concat(resolvedSrc, \"'.\")));\n        }\n        return copyLink(resolvedSrc, dest, cb);\n      });\n    }\n  });\n}\nfunction copyLink(resolvedSrc, dest, cb) {\n  fs.unlink(dest, function (err) {\n    if (err) return cb(err);\n    return fs.symlink(resolvedSrc, dest, cb);\n  });\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir(src, dest) {\n  var srcArray = path.resolve(src).split(path.sep);\n  var destArray = path.resolve(dest).split(path.sep);\n  return srcArray.reduce(function (acc, current, i) {\n    return acc && destArray[i] === current;\n  }, true);\n}\nfunction checkStats(src, dest, cb) {\n  fs.stat(src, function (err, srcStat) {\n    if (err) return cb(err);\n    fs.stat(dest, function (err, destStat) {\n      if (err) {\n        if (err.code === 'ENOENT') return cb(null, {\n          srcStat: srcStat,\n          destStat: notExist\n        });\n        return cb(err);\n      }\n      return cb(null, {\n        srcStat: srcStat,\n        destStat: destStat\n      });\n    });\n  });\n}\nfunction checkPaths(src, dest, cb) {\n  checkStats(src, dest, function (err, stats) {\n    if (err) return cb(err);\n    var srcStat = stats.srcStat,\n      destStat = stats.destStat;\n    if (destStat.ino && destStat.ino === srcStat.ino) {\n      return cb(new Error('Source and destination must not be the same.'));\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(\"Cannot copy '\".concat(src, \"' to a subdirectory of itself, '\").concat(dest, \"'.\")));\n    }\n    return cb(null, destStat);\n  });\n}\nmodule.exports = copy;","map":{"version":3,"names":["fs","require","path","mkdirp","mkdirs","pathExists","utimes","utimesMillis","notExist","Symbol","copy","src","dest","opts","cb","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","checkPaths","err","destStat","handleFilter","checkParentDir","destParent","dirname","dirExists","startCopy","onInclude","Promise","resolve","then","include","error","getStats","stat","dereference","lstat","srcStat","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlink","errorOnExist","Error","concat","setDestModeAndTimestamps","copyFileFallback","rs","createReadStream","on","once","ws","createWriteStream","mode","pipe","chmod","atime","mtime","mkDirAndCopy","copyDir","mkdir","readdir","items","copyDirItems","item","pop","copyDirItem","srcItem","join","destItem","readlink","resolvedSrc","cwd","symlink","resolvedDest","code","isSrcSubdir","copyLink","srcArray","split","sep","destArray","reduce","acc","current","i","checkStats","stats","ino","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/mock-aws-s3/node_modules/fs-extra/lib/copy/copy.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirp = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimes = require('../util/utimes').utimesMillis\n\nconst notExist = Symbol('notExist')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = {filter: opts}\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  checkPaths(src, dest, (err, destStat) => {\n    if (err) return cb(err)\n    if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n    return checkParentDir(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirp(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) {\n      if (destStat) return onInclude(destStat, src, dest, opts, cb)\n      return onInclude(src, dest, opts, cb)\n    }\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err)\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb)\n    })\n  }\n  return copyFileFallback(srcStat, src, dest, opts, cb)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src)\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, { mode: srcStat.mode })\n    ws.on('error', err => cb(err))\n      .on('open', () => rs.pipe(ws))\n      .once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb))\n  })\n}\n\nfunction setDestModeAndTimestamps (srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb)\n    }\n    return cb()\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return fs.chmod(dest, srcStat.mode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  checkPaths(srcItem, destItem, (err, destStat) => {\n    if (err) return cb(err)\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (destStat === notExist) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir (src, dest) {\n  const srcArray = path.resolve(src).split(path.sep)\n  const destArray = path.resolve(dest).split(path.sep)\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true)\n}\n\nfunction checkStats (src, dest, cb) {\n  fs.stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n    fs.stat(dest, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb(null, {srcStat, destStat: notExist})\n        return cb(err)\n      }\n      return cb(null, {srcStat, destStat})\n    })\n  })\n}\n\nfunction checkPaths (src, dest, cb) {\n  checkStats(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const {srcStat, destStat} = stats\n    if (destStat.ino && destStat.ino === srcStat.ino) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`))\n    }\n    return cb(null, destStat)\n  })\n}\n\nmodule.exports = copy\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}