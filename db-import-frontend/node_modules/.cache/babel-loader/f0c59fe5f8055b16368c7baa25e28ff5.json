{"ast":null,"code":"/*! @azure/msal-common v13.0.0 2023-05-01 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\nvar PerformanceEvents;\n(function (PerformanceEvents) {\n  /**\r\n   * acquireTokenByCode API (msal-browser and msal-node).\r\n   * Used to acquire tokens by trading an authorization code against the token endpoint.\r\n   */\n  PerformanceEvents[\"AcquireTokenByCode\"] = \"acquireTokenByCode\";\n  /**\r\n   * acquireTokenByRefreshToken API (msal-browser and msal-node).\r\n   * Used to renew an access token using a refresh token against the token endpoint.\r\n   */\n  PerformanceEvents[\"AcquireTokenByRefreshToken\"] = \"acquireTokenByRefreshToken\";\n  /**\r\n   * acquireTokenSilent API (msal-browser and msal-node).\r\n   * Used to silently acquire a new access token (from the cache or the network).\r\n   */\n  PerformanceEvents[\"AcquireTokenSilent\"] = \"acquireTokenSilent\";\n  /**\r\n   * acquireTokenSilentAsync (msal-browser).\r\n   * Internal API for acquireTokenSilent.\r\n   */\n  PerformanceEvents[\"AcquireTokenSilentAsync\"] = \"acquireTokenSilentAsync\";\n  /**\r\n   * acquireTokenPopup (msal-browser).\r\n   * Used to acquire a new access token interactively through pop ups\r\n   */\n  PerformanceEvents[\"AcquireTokenPopup\"] = \"acquireTokenPopup\";\n  /**\r\n   * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\r\n   * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\r\n   */\n  PerformanceEvents[\"CryptoOptsGetPublicKeyThumbprint\"] = \"cryptoOptsGetPublicKeyThumbprint\";\n  /**\r\n   * signJwt API in CryptoOpts class (msal-browser).\r\n   * Used to signed a pop token.\r\n   */\n  PerformanceEvents[\"CryptoOptsSignJwt\"] = \"cryptoOptsSignJwt\";\n  /**\r\n   * acquireToken API in the SilentCacheClient class (msal-browser).\r\n   * Used to read access tokens from the cache.\r\n   */\n  PerformanceEvents[\"SilentCacheClientAcquireToken\"] = \"silentCacheClientAcquireToken\";\n  /**\r\n   * acquireToken API in the SilentIframeClient class (msal-browser).\r\n   * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\r\n   */\n  PerformanceEvents[\"SilentIframeClientAcquireToken\"] = \"silentIframeClientAcquireToken\";\n  /**\r\n   * acquireToken API in SilentRereshClient (msal-browser).\r\n   * Used to acquire a new set of tokens from the token endpoint using a refresh token.\r\n   */\n  PerformanceEvents[\"SilentRefreshClientAcquireToken\"] = \"silentRefreshClientAcquireToken\";\n  /**\r\n   * ssoSilent API (msal-browser).\r\n   * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\r\n   */\n  PerformanceEvents[\"SsoSilent\"] = \"ssoSilent\";\n  /**\r\n   * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\r\n   * Used to load authority metadata for a request.\r\n   */\n  PerformanceEvents[\"StandardInteractionClientGetDiscoveredAuthority\"] = \"standardInteractionClientGetDiscoveredAuthority\";\n  /**\r\n   * acquireToken APIs in msal-browser.\r\n   * Used to make an /authorize endpoint call with native brokering enabled.\r\n   */\n  PerformanceEvents[\"FetchAccountIdWithNativeBroker\"] = \"fetchAccountIdWithNativeBroker\";\n  /**\r\n   * acquireToken API in NativeInteractionClient class (msal-browser).\r\n   * Used to acquire a token from Native component when native brokering is enabled.\r\n   */\n  PerformanceEvents[\"NativeInteractionClientAcquireToken\"] = \"nativeInteractionClientAcquireToken\";\n  /**\r\n   * Time spent creating default headers for requests to token endpoint\r\n   */\n  PerformanceEvents[\"BaseClientCreateTokenRequestHeaders\"] = \"baseClientCreateTokenRequestHeaders\";\n  /**\r\n   * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\r\n   */\n  PerformanceEvents[\"BrokerHandhshake\"] = \"brokerHandshake\";\n  /**\r\n   * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\r\n   */\n  PerformanceEvents[\"AcquireTokenByRefreshTokenInBroker\"] = \"acquireTokenByRefreshTokenInBroker\";\n  /**\r\n   * Time taken for token acquisition by broker\r\n   */\n  PerformanceEvents[\"AcquireTokenByBroker\"] = \"acquireTokenByBroker\";\n  /**\r\n   * Time spent on the network for refresh token acquisition\r\n   */\n  PerformanceEvents[\"RefreshTokenClientExecuteTokenRequest\"] = \"refreshTokenClientExecuteTokenRequest\";\n  /**\r\n   * Time taken for acquiring refresh token , records RT size\r\n   */\n  PerformanceEvents[\"RefreshTokenClientAcquireToken\"] = \"refreshTokenClientAcquireToken\";\n  /**\r\n   * Time taken for acquiring cached refresh token\r\n   */\n  PerformanceEvents[\"RefreshTokenClientAcquireTokenWithCachedRefreshToken\"] = \"refreshTokenClientAcquireTokenWithCachedRefreshToken\";\n  /**\r\n   * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\r\n   */\n  PerformanceEvents[\"RefreshTokenClientAcquireTokenByRefreshToken\"] = \"refreshTokenClientAcquireTokenByRefreshToken\";\n  /**\r\n   * Helper function to create token request body in RefreshTokenClient (msal-common).\r\n   */\n  PerformanceEvents[\"RefreshTokenClientCreateTokenRequestBody\"] = \"refreshTokenClientCreateTokenRequestBody\";\n  /**\r\n   * acquireTokenFromCache (msal-browser).\r\n   * Internal API for acquiring token from cache\r\n   */\n  PerformanceEvents[\"AcquireTokenFromCache\"] = \"acquireTokenFromCache\";\n  /**\r\n   * acquireTokenBySilentIframe (msal-browser).\r\n   * Internal API for acquiring token by silent Iframe\r\n   */\n  PerformanceEvents[\"AcquireTokenBySilentIframe\"] = \"acquireTokenBySilentIframe\";\n  /**\r\n   * Internal API for initializing base request in BaseInteractionClient (msal-browser)\r\n   */\n  PerformanceEvents[\"InitializeBaseRequest\"] = \"initializeBaseRequest\";\n  /**\r\n   * Internal API for initializing silent request in SilentCacheClient (msal-browser)\r\n   */\n  PerformanceEvents[\"InitializeSilentRequest\"] = \"initializeSilentRequest\";\n  PerformanceEvents[\"InitializeClientApplication\"] = \"initializeClientApplication\";\n  /**\r\n   * Helper function in SilentIframeClient class (msal-browser).\r\n   */\n  PerformanceEvents[\"SilentIframeClientTokenHelper\"] = \"silentIframeClientTokenHelper\";\n  /**\r\n   * SilentHandler\r\n   */\n  PerformanceEvents[\"SilentHandlerInitiateAuthRequest\"] = \"silentHandlerInitiateAuthRequest\";\n  PerformanceEvents[\"SilentHandlerMonitorIframeForHash\"] = \"silentHandlerMonitorIframeForHash\";\n  PerformanceEvents[\"SilentHandlerLoadFrame\"] = \"silentHandlerLoadFrame\";\n  /**\r\n   * Helper functions in StandardInteractionClient class (msal-browser)\r\n   */\n  PerformanceEvents[\"StandardInteractionClientCreateAuthCodeClient\"] = \"standardInteractionClientCreateAuthCodeClient\";\n  PerformanceEvents[\"StandardInteractionClientGetClientConfiguration\"] = \"standardInteractionClientGetClientConfiguration\";\n  PerformanceEvents[\"StandardInteractionClientInitializeAuthorizationRequest\"] = \"standardInteractionClientInitializeAuthorizationRequest\";\n  PerformanceEvents[\"StandardInteractionClientInitializeAuthorizationCodeRequest\"] = \"standardInteractionClientInitializeAuthorizationCodeRequest\";\n  /**\r\n   * getAuthCodeUrl API (msal-browser and msal-node).\r\n   */\n  PerformanceEvents[\"GetAuthCodeUrl\"] = \"getAuthCodeUrl\";\n  /**\r\n   * Functions from InteractionHandler (msal-browser)\r\n   */\n  PerformanceEvents[\"HandleCodeResponseFromServer\"] = \"handleCodeResponseFromServer\";\n  PerformanceEvents[\"HandleCodeResponseFromHash\"] = \"handleCodeResponseFromHash\";\n  PerformanceEvents[\"UpdateTokenEndpointAuthority\"] = \"updateTokenEndpointAuthority\";\n  /**\r\n   * APIs in Authorization Code Client (msal-common)\r\n   */\n  PerformanceEvents[\"AuthClientAcquireToken\"] = \"authClientAcquireToken\";\n  PerformanceEvents[\"AuthClientExecuteTokenRequest\"] = \"authClientExecuteTokenRequest\";\n  PerformanceEvents[\"AuthClientCreateTokenRequestBody\"] = \"authClientCreateTokenRequestBody\";\n  PerformanceEvents[\"AuthClientCreateQueryString\"] = \"authClientCreateQueryString\";\n  /**\r\n   * Generate functions in PopTokenGenerator (msal-common)\r\n   */\n  PerformanceEvents[\"PopTokenGenerateCnf\"] = \"popTokenGenerateCnf\";\n  PerformanceEvents[\"PopTokenGenerateKid\"] = \"popTokenGenerateKid\";\n  /**\r\n   * handleServerTokenResponse API in ResponseHandler (msal-common)\r\n   */\n  PerformanceEvents[\"HandleServerTokenResponse\"] = \"handleServerTokenResponse\";\n  /**\r\n   * Authority functions\r\n   */\n  PerformanceEvents[\"AuthorityFactoryCreateDiscoveredInstance\"] = \"authorityFactoryCreateDiscoveredInstance\";\n  PerformanceEvents[\"AuthorityResolveEndpointsAsync\"] = \"authorityResolveEndpointsAsync\";\n  PerformanceEvents[\"AuthorityGetCloudDiscoveryMetadataFromNetwork\"] = \"authorityGetCloudDiscoveryMetadataFromNetwork\";\n  PerformanceEvents[\"AuthorityUpdateCloudDiscoveryMetadata\"] = \"authorityUpdateCloudDiscoveryMetadata\";\n  PerformanceEvents[\"AuthorityGetEndpointMetadataFromNetwork\"] = \"authorityGetEndpointMetadataFromNetwork\";\n  PerformanceEvents[\"AuthorityUpdateEndpointMetadata\"] = \"authorityUpdateEndpointMetadata\";\n  PerformanceEvents[\"AuthorityUpdateMetadataWithRegionalInformation\"] = \"authorityUpdateMetadataWithRegionalInformation\";\n  /**\r\n   * Region Discovery functions\r\n   */\n  PerformanceEvents[\"RegionDiscoveryDetectRegion\"] = \"regionDiscoveryDetectRegion\";\n  PerformanceEvents[\"RegionDiscoveryGetRegionFromIMDS\"] = \"regionDiscoveryGetRegionFromIMDS\";\n  PerformanceEvents[\"RegionDiscoveryGetCurrentVersion\"] = \"regionDiscoveryGetCurrentVersion\";\n  PerformanceEvents[\"AcquireTokenByCodeAsync\"] = \"acquireTokenByCodeAsync\";\n  PerformanceEvents[\"GetEndpointMetadataFromNetwork\"] = \"getEndpointMetadataFromNetwork\";\n  PerformanceEvents[\"GetCloudDiscoveryMetadataFromNetworkMeasurement\"] = \"getCloudDiscoveryMetadataFromNetworkMeasurement\";\n  PerformanceEvents[\"HandleRedirectPromiseMeasurement\"] = \"handleRedirectPromiseMeasurement\";\n  PerformanceEvents[\"UpdateCloudDiscoveryMetadataMeasurement\"] = \"updateCloudDiscoveryMetadataMeasurement\";\n  PerformanceEvents[\"UsernamePasswordClientAcquireToken\"] = \"usernamePasswordClientAcquireToken\";\n  PerformanceEvents[\"NativeMessageHandlerHandshake\"] = \"nativeMessageHandlerHandshake\";\n})(PerformanceEvents || (PerformanceEvents = {}));\n/**\r\n * State of the performance event.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\nvar PerformanceEventStatus;\n(function (PerformanceEventStatus) {\n  PerformanceEventStatus[PerformanceEventStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  PerformanceEventStatus[PerformanceEventStatus[\"InProgress\"] = 1] = \"InProgress\";\n  PerformanceEventStatus[PerformanceEventStatus[\"Completed\"] = 2] = \"Completed\";\n})(PerformanceEventStatus || (PerformanceEventStatus = {}));\nvar IntFields = new Set([\"accessTokenSize\", \"durationMs\", \"idTokenSize\", \"matsSilentStatus\", \"matsHttpStatus\", \"refreshTokenSize\", \"queuedTimeMs\", \"startTimeMs\", \"status\"]);\nexport { IntFields, PerformanceEventStatus, PerformanceEvents };","map":{"version":3,"names":["PerformanceEvents","PerformanceEventStatus","IntFields","Set"],"sources":["../../../src/telemetry/performance/PerformanceEvent.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEvents {\n\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode = \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken = \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent = \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync = \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup = \"acquireTokenPopup\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint = \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt = \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken = \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken = \"silentIframeClientAcquireToken\",\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken = \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent = \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority = \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker = \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken = \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders = \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake = \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker = \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker = \"acquireTokenByBroker\",\n\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest = \"refreshTokenClientExecuteTokenRequest\",\n\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken = \"refreshTokenClientAcquireToken\",\n\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken = \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken = \"refreshTokenClientAcquireTokenByRefreshToken\",\n\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody = \"refreshTokenClientCreateTokenRequestBody\",\n\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache = \"acquireTokenFromCache\",\n\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe = \"acquireTokenBySilentIframe\",\n\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest = \"initializeBaseRequest\",\n\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest = \"initializeSilentRequest\",\n\n    InitializeClientApplication = \"initializeClientApplication\",\n\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper = \"silentIframeClientTokenHelper\",\n\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest = \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash = \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame = \"silentHandlerLoadFrame\",\n\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient = \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration = \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest = \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest = \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl = \"getAuthCodeUrl\",\n\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer = \"handleCodeResponseFromServer\",\n    HandleCodeResponseFromHash = \"handleCodeResponseFromHash\",\n    UpdateTokenEndpointAuthority = \"updateTokenEndpointAuthority\",\n\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken = \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest = \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody = \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString = \"authClientCreateQueryString\",\n\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf = \"popTokenGenerateCnf\",\n    PopTokenGenerateKid = \"popTokenGenerateKid\",\n\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse = \"handleServerTokenResponse\",\n\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance = \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync = \"authorityResolveEndpointsAsync\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork = \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata = \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork = \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata = \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation = \"authorityUpdateMetadataWithRegionalInformation\",\n\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion = \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS = \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion = \"regionDiscoveryGetCurrentVersion\",\n\n    AcquireTokenByCodeAsync = \"acquireTokenByCodeAsync\",\n\n    GetEndpointMetadataFromNetwork = \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement = \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n\n    HandleRedirectPromiseMeasurement= \"handleRedirectPromiseMeasurement\",\n\n    UpdateCloudDiscoveryMetadataMeasurement = \"updateCloudDiscoveryMetadataMeasurement\",\n\n    UsernamePasswordClientAcquireToken = \"usernamePasswordClientAcquireToken\",\n\n    NativeMessageHandlerHandshake = \"nativeMessageHandlerHandshake\",\n}\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEventStatus {\n    NotStarted,\n    InProgress,\n    Completed\n}\n\n/**\n * Fields whose value will not change throughout a request\n */\nexport type StaticFields = {\n    /**\n     * The Silent Token Cache Lookup Policy\n     *\n     * @type {?(number | undefined)}\n     */\n    cacheLookupPolicy?: number | undefined,\n\n    /**\n     * Size of the id token\n     *\n     * @type {number}\n     */\n    idTokenSize?: number,\n\n    /**\n     *\n     * Size of the access token\n     *\n     * @type {number}\n     */\n\n    accessTokenSize?: number,\n\n    /**\n     *\n     * Size of the refresh token\n     *\n     * @type {number}\n     */\n\n    refreshTokenSize?: number | undefined,\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string,\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string,\n\n    /**\n     * The following are fields that may be emitted in native broker scenarios\n     */\n    extensionId?: string,\n    extensionVersion?: string\n    matsBrokerVersion?: string;\n    matsAccountJoinOnStart?: string;\n    matsAccountJoinOnEnd?: string;\n    matsDeviceJoin?: string;\n    matsPromptBehavior?: string;\n    matsApiErrorCode?: number;\n    matsUiVisible?: boolean;\n    matsSilentCode?: number;\n    matsSilentBiSubCode?: number;\n    matsSilentMessage?: string;\n    matsSilentStatus?: number;\n    matsHttpStatus?: number\n    matsHttpEventCount?: number;\n    httpVerToken?: string;\n    httpVerAuthority?: string;\n\n    /**\n     * Native broker fields\n     */\n    allowNativeBroker?: boolean;\n    extensionInstalled?: boolean;\n    extensionHandshakeTimeoutMs?: number;\n    extensionHandshakeTimedOut?: boolean;\n};\n\n/**\n * Fields whose value may change throughout a request\n */\nexport type Counters = {\n    visibilityChangeCount?: number;\n    incompleteSubsCount?: number;\n    /**\n     * Amount of times queued in the JS event queue.\n     *\n     * @type {?number}\n     */\n    queuedCount?: number\n    /**\n     * Amount of manually completed queue events.\n     *\n     * @type {?number}\n     */\n    queuedManuallyCompletedCount?: number;\n};\n\nexport type SubMeasurement = {\n    name: PerformanceEvents,\n    startTimeMs: number\n};\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = StaticFields & Counters & {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string,\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus,\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string,\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string,\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null,\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null,\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {PerformanceEvents}\n     */\n    name: PerformanceEvents,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null,\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number,\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null,\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string,\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string,\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string,\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string,\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean,\n\n    /**\n     * Request ID returned from the response\n     *\n     * @type {?string}\n     */\n    requestId?: string\n\n    /**\n     * Cache lookup policy\n     *\n     * @type {?number}\n     */\n    cacheLookupPolicy?: number | undefined,\n\n    /**\n     * Amount of time spent in the JS queue in milliseconds.\n     *\n     * @type {?number}\n     */\n    queuedTimeMs?: number,\n\n    /**\n     * Sub-measurements for internal use. To be deleted before flushing.\n     */\n    incompleteSubMeasurements?: Map<string, SubMeasurement>\n};\n\nexport const IntFields: ReadonlySet<string> = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n]);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}