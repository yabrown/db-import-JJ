{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require('./errors.js'),\n  NotCachedError = _require.NotCachedError;\nvar CacheEntry = require('./entry.js');\nvar remote = require('../remote.js');\n\n// do whatever is necessary to get a Response and return it\nvar cacheFetch = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request, options) {\n    var entry, response, _entry, _needsRevalidation;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return CacheEntry.find(request, options);\n        case 2:\n          entry = _context.sent;\n          if (entry) {\n            _context.next = 11;\n            break;\n          }\n          if (!(options.cache === 'only-if-cached')) {\n            _context.next = 6;\n            break;\n          }\n          throw new NotCachedError(request.url);\n        case 6:\n          _context.next = 8;\n          return remote(request, options);\n        case 8:\n          response = _context.sent;\n          _entry = new CacheEntry({\n            request: request,\n            response: response,\n            options: options\n          });\n          return _context.abrupt(\"return\", _entry.store('miss'));\n        case 11:\n          if (!(options.cache === 'no-cache')) {\n            _context.next = 13;\n            break;\n          }\n          return _context.abrupt(\"return\", entry.revalidate(request, options));\n        case 13:\n          // if the cached entry is not stale, or if the cache mode is 'force-cache' or\n          // 'only-if-cached' we can respond with the cached entry. set the status\n          // based on the result of needsRevalidation and respond\n          _needsRevalidation = entry.policy.needsRevalidation(request);\n          if (!(options.cache === 'force-cache' || options.cache === 'only-if-cached' || !_needsRevalidation)) {\n            _context.next = 16;\n            break;\n          }\n          return _context.abrupt(\"return\", entry.respond(request.method, options, _needsRevalidation ? 'stale' : 'hit'));\n        case 16:\n          return _context.abrupt(\"return\", entry.revalidate(request, options));\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function cacheFetch(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\ncacheFetch.invalidate = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request, options) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (options.cachePath) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 2:\n          return _context2.abrupt(\"return\", CacheEntry.invalidate(request, options));\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports = cacheFetch;","map":{"version":3,"names":["_require","require","NotCachedError","CacheEntry","remote","cacheFetch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","options","entry","response","_entry","_needsRevalidation","wrap","_callee$","_context","prev","next","find","sent","cache","url","abrupt","store","revalidate","policy","needsRevalidation","respond","method","stop","_x","_x2","apply","arguments","invalidate","_ref2","_callee2","_callee2$","_context2","cachePath","_x3","_x4","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/make-fetch-happen/lib/cache/index.js"],"sourcesContent":["const { NotCachedError } = require('./errors.js')\nconst CacheEntry = require('./entry.js')\nconst remote = require('../remote.js')\n\n// do whatever is necessary to get a Response and return it\nconst cacheFetch = async (request, options) => {\n  // try to find a cached entry that satisfies this request\n  const entry = await CacheEntry.find(request, options)\n  if (!entry) {\n    // no cached result, if the cache mode is 'only-if-cached' that's a failure\n    if (options.cache === 'only-if-cached')\n      throw new NotCachedError(request.url)\n\n    // otherwise, we make a request, store it and return it\n    const response = await remote(request, options)\n    const entry = new CacheEntry({ request, response, options })\n    return entry.store('miss')\n  }\n\n  // we have a cached response that satisfies this request, however if the cache\n  // mode is 'no-cache' then we send the revalidation request no matter what\n  if (options.cache === 'no-cache')\n    return entry.revalidate(request, options)\n\n  // if the cached entry is not stale, or if the cache mode is 'force-cache' or\n  // 'only-if-cached' we can respond with the cached entry. set the status\n  // based on the result of needsRevalidation and respond\n  const _needsRevalidation = entry.policy.needsRevalidation(request)\n  if (options.cache === 'force-cache' ||\n      options.cache === 'only-if-cached' ||\n      !_needsRevalidation)\n    return entry.respond(request.method, options, _needsRevalidation ? 'stale' : 'hit')\n\n  // if we got here, the cache entry is stale so revalidate it\n  return entry.revalidate(request, options)\n}\n\ncacheFetch.invalidate = async (request, options) => {\n  if (!options.cachePath)\n    return\n\n  return CacheEntry.invalidate(request, options)\n}\n\nmodule.exports = cacheFetch\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}