{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _token = require(\"./token\");\nvar _valueParser = _interopRequireDefault(require(\"../value-parser\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// s2.2.7.13 (introduced in TDS 7.3.B)\nfunction nullHandler(_parser, _columnMetadata, _options, callback) {\n  callback(null);\n}\nfunction nbcRowParser(_x) {\n  return _nbcRowParser.apply(this, arguments);\n}\nfunction _nbcRowParser() {\n  _nbcRowParser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(parser) {\n    var colMetadata, bitmapByteLength, columns, bitmap, bytes, i, len, byte, _loop, _i, columnsMap;\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          colMetadata = parser.colMetadata;\n          bitmapByteLength = Math.ceil(colMetadata.length / 8);\n          columns = [];\n          bitmap = [];\n        case 4:\n          if (!(parser.buffer.length - parser.position < bitmapByteLength)) {\n            _context2.next = 9;\n            break;\n          }\n          _context2.next = 7;\n          return parser.streamBuffer.waitForChunk();\n        case 7:\n          _context2.next = 4;\n          break;\n        case 9:\n          bytes = parser.buffer.slice(parser.position, parser.position + bitmapByteLength);\n          parser.position += bitmapByteLength;\n          for (i = 0, len = bytes.length; i < len; i++) {\n            byte = bytes[i];\n            bitmap.push(byte & 1 ? true : false);\n            bitmap.push(byte & 2 ? true : false);\n            bitmap.push(byte & 4 ? true : false);\n            bitmap.push(byte & 8 ? true : false);\n            bitmap.push(byte & 16 ? true : false);\n            bitmap.push(byte & 32 ? true : false);\n            bitmap.push(byte & 64 ? true : false);\n            bitmap.push(byte & 128 ? true : false);\n          }\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n            var currColMetadata, value, next;\n            return _regeneratorRuntime().wrap(function _loop$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  currColMetadata = colMetadata[_i];\n                  (bitmap[_i] ? nullHandler : _valueParser.default)(parser, currColMetadata, parser.options, function (v) {\n                    value = v;\n                  });\n                case 2:\n                  if (!parser.suspended) {\n                    _context.next = 10;\n                    break;\n                  }\n                  _context.next = 5;\n                  return parser.streamBuffer.waitForChunk();\n                case 5:\n                  parser.suspended = false;\n                  next = parser.next;\n                  next();\n                  _context.next = 2;\n                  break;\n                case 10:\n                  columns.push({\n                    value: value,\n                    metadata: currColMetadata\n                  });\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _loop);\n          });\n          _i = 0;\n        case 14:\n          if (!(_i < colMetadata.length)) {\n            _context2.next = 19;\n            break;\n          }\n          return _context2.delegateYield(_loop(), \"t0\", 16);\n        case 16:\n          _i++;\n          _context2.next = 14;\n          break;\n        case 19:\n          if (!parser.options.useColumnNames) {\n            _context2.next = 25;\n            break;\n          }\n          columnsMap = {};\n          columns.forEach(function (column) {\n            var colName = column.metadata.colName;\n            if (columnsMap[colName] == null) {\n              columnsMap[colName] = column;\n            }\n          });\n          return _context2.abrupt(\"return\", new _token.NBCRowToken(columnsMap));\n        case 25:\n          return _context2.abrupt(\"return\", new _token.NBCRowToken(columns));\n        case 26:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee);\n  }));\n  return _nbcRowParser.apply(this, arguments);\n}\nvar _default = nbcRowParser;\nexports.default = _default;\nmodule.exports = nbcRowParser;","map":{"version":3,"names":["_token","require","_valueParser","_interopRequireDefault","nullHandler","_parser","_columnMetadata","_options","callback","nbcRowParser","_x","_nbcRowParser","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","parser","colMetadata","bitmapByteLength","columns","bitmap","bytes","i","len","byte","_loop","_i","columnsMap","wrap","_callee$","_context2","prev","next","Math","ceil","length","buffer","position","streamBuffer","waitForChunk","slice","push","currColMetadata","value","_loop$","_context","default","options","v","suspended","metadata","stop","delegateYield","useColumnNames","forEach","column","colName","abrupt","NBCRowToken","module","exports"],"sources":["../../src/token/nbcrow-token-parser.ts"],"sourcesContent":["// s2.2.7.13 (introduced in TDS 7.3.B)\n\nimport Parser, { ParserOptions } from './stream-parser';\nimport { ColumnMetadata } from './colmetadata-token-parser';\n\nimport { NBCRowToken } from './token';\n\nimport valueParse from '../value-parser';\n\nfunction nullHandler(_parser: Parser, _columnMetadata: ColumnMetadata, _options: ParserOptions, callback: (value: unknown) => void) {\n  callback(null);\n}\n\ninterface Column {\n  value: unknown;\n  metadata: ColumnMetadata;\n}\n\nasync function nbcRowParser(parser: Parser): Promise<NBCRowToken> {\n  const colMetadata = parser.colMetadata;\n  const bitmapByteLength = Math.ceil(colMetadata.length / 8);\n  const columns: Column[] = [];\n  const bitmap: boolean[] = [];\n\n  while (parser.buffer.length - parser.position < bitmapByteLength) {\n    await parser.streamBuffer.waitForChunk();\n  }\n\n  const bytes = parser.buffer.slice(parser.position, parser.position + bitmapByteLength);\n  parser.position += bitmapByteLength;\n\n  for (let i = 0, len = bytes.length; i < len; i++) {\n    const byte = bytes[i];\n\n    bitmap.push(byte & 0b1 ? true : false);\n    bitmap.push(byte & 0b10 ? true : false);\n    bitmap.push(byte & 0b100 ? true : false);\n    bitmap.push(byte & 0b1000 ? true : false);\n    bitmap.push(byte & 0b10000 ? true : false);\n    bitmap.push(byte & 0b100000 ? true : false);\n    bitmap.push(byte & 0b1000000 ? true : false);\n    bitmap.push(byte & 0b10000000 ? true : false);\n  }\n\n  for (let i = 0; i < colMetadata.length; i++) {\n    const currColMetadata = colMetadata[i];\n    let value;\n    (bitmap[i] ? nullHandler : valueParse)(parser, currColMetadata, parser.options, (v) => {\n      value = v;\n    });\n\n    while (parser.suspended) {\n      await parser.streamBuffer.waitForChunk();\n\n      parser.suspended = false;\n      const next = parser.next!;\n\n      next();\n    }\n    columns.push({\n      value,\n      metadata: currColMetadata\n    });\n  }\n\n  if (parser.options.useColumnNames) {\n    const columnsMap: { [key: string]: Column } = {};\n\n    columns.forEach((column) => {\n      const colName = column.metadata.colName;\n      if (columnsMap[colName] == null) {\n        columnsMap[colName] = column;\n      }\n    });\n\n    return new NBCRowToken(columnsMap);\n  } else {\n    return new NBCRowToken(columns);\n  }\n}\n\nexport default nbcRowParser;\nmodule.exports = nbcRowParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}