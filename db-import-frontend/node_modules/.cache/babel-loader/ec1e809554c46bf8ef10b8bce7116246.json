{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{Sequelize,Model,DataTypes}from'sequelize';var PORT='https://jj-table-importer.onrender.com/';var SOCKETPORT='ws://localhost:3000';function basicGet(_x,_x2,_x3){return _basicGet.apply(this,arguments);}function _basicGet(){_basicGet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(link,DBName,force){var res,body;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(PORT,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({link:link,DBName:DBName,force:force})});case 2:res=_context.sent;_context.next=5;return res.json();case 5:body=_context.sent;console.log(res);return _context.abrupt(\"return\",[res,body.message]);case 8:case\"end\":return _context.stop();}},_callee);}));return _basicGet.apply(this,arguments);}function basicSocket(_x4,_x5){return _basicSocket.apply(this,arguments);}function _basicSocket(){_basicSocket=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(link,DBName){var socket;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:socket=new WebSocket(SOCKETPORT);socket.onopen=function(){console.log('WebSocket connection established');var payload={link:link,DBName:DBName};socket.send(JSON.stringify(payload));};socket.onmessage=function(event){var text=JSON.parse(event.data);console.log(text);console.log('word');};socket.onclose=function(){console.log('WebSocket connection closed');};case 4:case\"end\":return _context2.stop();}},_callee2);}));return _basicSocket.apply(this,arguments);}export{basicGet,basicSocket};","map":{"version":3,"names":["Sequelize","Model","DataTypes","PORT","SOCKETPORT","basicGet","_x","_x2","_x3","_basicGet","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","link","DBName","force","res","body","wrap","_callee$","_context","prev","next","fetch","method","headers","JSON","stringify","sent","json","console","log","abrupt","message","stop","basicSocket","_x4","_x5","_basicSocket","_callee2","socket","_callee2$","_context2","WebSocket","onopen","payload","send","onmessage","event","text","parse","data","onclose"],"sources":["/Users/aribraun/Desktop/db-import/db-import-frontend/src/backend.js"],"sourcesContent":["\nimport { Sequelize, Model, DataTypes } from 'sequelize';\n\nconst PORT = 'https://jj-table-importer.onrender.com/'\nconst SOCKETPORT = 'ws://localhost:3000'\n\n\n\nasync function basicGet(link, DBName, force){\n    const res = await fetch(PORT, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n          },\n        body: JSON.stringify({link: link, DBName: DBName, force: force})\n    }\n    );\n    const body = await res.json()\n    console.log(res);\n    return [res, body.message];\n}\n\n\nasync function basicSocket(link, DBName){\n    const socket = new WebSocket(SOCKETPORT);\n\n    socket.onopen = () => {\n        console.log('WebSocket connection established');\n\n        const payload = { link, DBName};\n\n        socket.send(JSON.stringify(payload));\n    };\n\n    socket.onmessage = (event) => {\n        const text = JSON.parse(event.data);\n        console.log(text);\n        console.log('word');\n    };\n\n    socket.onclose = () => {\n        console.log('WebSocket connection closed');\n    };\n}\n\n\nexport {\n    basicGet,\n    basicSocket\n};\n"],"mappings":"oSACA,OAASA,SAAS,CAAEC,KAAK,CAAEC,SAAS,KAAQ,WAAW,CAEvD,GAAM,CAAAC,IAAI,CAAG,yCAAyC,CACtD,GAAM,CAAAC,UAAU,CAAG,qBAAqB,SAIzB,CAAAC,QAAQA,CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,SAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,UAAA,EAAAA,SAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAvB,SAAAC,QAAwBC,IAAI,CAAEC,MAAM,CAAEC,KAAK,MAAAC,GAAA,CAAAC,IAAA,QAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACrB,CAAAC,KAAK,CAACvB,IAAI,CAAE,CAC1BwB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBAClB,CAAC,CACHR,IAAI,CAAES,IAAI,CAACC,SAAS,CAAC,CAACd,IAAI,CAAEA,IAAI,CAAEC,MAAM,CAAEA,MAAM,CAAEC,KAAK,CAAEA,KAAK,CAAC,CACnE,CACA,CAAC,QAPKC,GAAG,CAAAI,QAAA,CAAAQ,IAAA,CAAAR,QAAA,CAAAE,IAAA,SAQU,CAAAN,GAAG,CAACa,IAAI,CAAC,CAAC,QAAvBZ,IAAI,CAAAG,QAAA,CAAAQ,IAAA,CACVE,OAAO,CAACC,GAAG,CAACf,GAAG,CAAC,CAAC,OAAAI,QAAA,CAAAY,MAAA,UACV,CAAChB,GAAG,CAAEC,IAAI,CAACgB,OAAO,CAAC,0BAAAb,QAAA,CAAAc,IAAA,MAAAtB,OAAA,GAC7B,UAAAN,SAAA,CAAAC,KAAA,MAAAC,SAAA,WAGc,CAAA2B,WAAWA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,YAAA,CAAA/B,KAAA,MAAAC,SAAA,YAAA8B,aAAA,EAAAA,YAAA,CAAA7B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA1B,SAAA4B,SAA2B1B,IAAI,CAAEC,MAAM,MAAA0B,MAAA,QAAA9B,mBAAA,GAAAQ,IAAA,UAAAuB,UAAAC,SAAA,iBAAAA,SAAA,CAAArB,IAAA,CAAAqB,SAAA,CAAApB,IAAA,SAC7BkB,MAAM,CAAG,GAAI,CAAAG,SAAS,CAAC1C,UAAU,CAAC,CAExCuC,MAAM,CAACI,MAAM,CAAG,UAAM,CAClBd,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAE/C,GAAM,CAAAc,OAAO,CAAG,CAAEhC,IAAI,CAAJA,IAAI,CAAEC,MAAM,CAANA,MAAM,CAAC,CAE/B0B,MAAM,CAACM,IAAI,CAACpB,IAAI,CAACC,SAAS,CAACkB,OAAO,CAAC,CAAC,CACxC,CAAC,CAEDL,MAAM,CAACO,SAAS,CAAG,SAACC,KAAK,CAAK,CAC1B,GAAM,CAAAC,IAAI,CAAGvB,IAAI,CAACwB,KAAK,CAACF,KAAK,CAACG,IAAI,CAAC,CACnCrB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC,CACjBnB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CACvB,CAAC,CAEDS,MAAM,CAACY,OAAO,CAAG,UAAM,CACnBtB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC9C,CAAC,CAAC,wBAAAW,SAAA,CAAAR,IAAA,MAAAK,QAAA,GACL,UAAAD,YAAA,CAAA/B,KAAA,MAAAC,SAAA,GAGD,OACIN,QAAQ,CACRiC,WAAW"},"metadata":{},"sourceType":"module"}