{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar AbstractQuery = require(\"../abstract/query\");\nvar sequelizeErrors = require(\"../../errors\");\nvar _ = require(\"lodash\");\nvar DataTypes = require(\"../../data-types\");\nvar _require = require(\"../../utils/logger\"),\n  logger = _require.logger;\nvar ER_DUP_ENTRY = 1062;\nvar ER_DEADLOCK = 1213;\nvar ER_ROW_IS_REFERENCED = 1451;\nvar ER_NO_REFERENCED_ROW = 1452;\nvar debug = logger.debugContext(\"sql:mariadb\");\nvar Query = /*#__PURE__*/function (_AbstractQuery) {\n  _inherits(Query, _AbstractQuery);\n  var _super = _createSuper(Query);\n  function Query(connection, sequelize, options) {\n    _classCallCheck(this, Query);\n    return _super.call(this, connection, sequelize, __spreadValues({\n      showWarnings: false\n    }, options));\n  }\n  _createClass(Query, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sql, parameters) {\n        var connection, options, showWarnings, complete, results, errForStack;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.sql = sql;\n              connection = this.connection, options = this.options;\n              showWarnings = this.sequelize.options.showWarnings || options.showWarnings;\n              complete = this._logQuery(sql, debug, parameters);\n              if (parameters) {\n                debug(\"parameters(%j)\", parameters);\n              }\n              errForStack = new Error();\n              _context.prev = 6;\n              _context.next = 9;\n              return connection.query(this.sql, parameters);\n            case 9:\n              results = _context.sent;\n              _context.next = 26;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](6);\n              if (!(options.transaction && _context.t0.errno === ER_DEADLOCK)) {\n                _context.next = 23;\n                break;\n              }\n              _context.prev = 15;\n              _context.next = 18;\n              return options.transaction.rollback();\n            case 18:\n              _context.next = 22;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t1 = _context[\"catch\"](15);\n            case 22:\n              options.transaction.finished = \"rollback\";\n            case 23:\n              _context.t0.sql = sql;\n              _context.t0.parameters = parameters;\n              throw this.formatError(_context.t0, errForStack.stack);\n            case 26:\n              _context.prev = 26;\n              complete();\n              return _context.finish(26);\n            case 29:\n              if (!(showWarnings && results && results.warningStatus > 0)) {\n                _context.next = 32;\n                break;\n              }\n              _context.next = 32;\n              return this.logWarnings(results);\n            case 32:\n              return _context.abrupt(\"return\", this.formatResults(results));\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[6, 12, 26, 29], [15, 20]]);\n      }));\n      function run(_x, _x2) {\n        return _run.apply(this, arguments);\n      }\n      return run;\n    }()\n  }, {\n    key: \"formatResults\",\n    value: function formatResults(data) {\n      var result = this.instance;\n      if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery()) {\n        return data.affectedRows;\n      }\n      if (this.isUpsertQuery()) {\n        return [result, data.affectedRows === 1];\n      }\n      if (this.isInsertQuery(data)) {\n        this.handleInsertQuery(data);\n        if (!this.instance) {\n          if (this.model && this.model.autoIncrementAttribute && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute && this.model.rawAttributes[this.model.primaryKeyAttribute]) {\n            var startId = data[this.getInsertIdField()];\n            result = new Array(data.affectedRows);\n            var pkField = this.model.rawAttributes[this.model.primaryKeyAttribute].field;\n            for (var i = 0; i < data.affectedRows; i++) {\n              result[i] = _defineProperty({}, pkField, startId + i);\n            }\n            return [result, data.affectedRows];\n          }\n          return [data[this.getInsertIdField()], data.affectedRows];\n        }\n      }\n      if (this.isSelectQuery()) {\n        this.handleJsonSelectQuery(data);\n        return this.handleSelectQuery(data);\n      }\n      if (this.isInsertQuery() || this.isUpdateQuery()) {\n        return [result, data.affectedRows];\n      }\n      if (this.isCallQuery()) {\n        return data[0];\n      }\n      if (this.isRawQuery()) {\n        var meta = data.meta;\n        delete data.meta;\n        return [data, meta];\n      }\n      if (this.isShowIndexesQuery()) {\n        return this.handleShowIndexesQuery(data);\n      }\n      if (this.isForeignKeysQuery() || this.isShowConstraintsQuery()) {\n        return data;\n      }\n      if (this.isShowTablesQuery()) {\n        return this.handleShowTablesQuery(data);\n      }\n      if (this.isDescribeQuery()) {\n        result = {};\n        var _iterator2 = _createForOfIteratorHelper(data),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _result = _step2.value;\n            result[_result.Field] = {\n              type: _result.Type.toLowerCase().startsWith(\"enum\") ? _result.Type.replace(/^enum/i, \"ENUM\") : _result.Type.toUpperCase(),\n              allowNull: _result.Null === \"YES\",\n              defaultValue: _result.Default,\n              primaryKey: _result.Key === \"PRI\",\n              autoIncrement: Object.prototype.hasOwnProperty.call(_result, \"Extra\") && _result.Extra.toLowerCase() === \"auto_increment\",\n              comment: _result.Comment ? _result.Comment : null\n            };\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        return result;\n      }\n      if (this.isVersionQuery()) {\n        return data[0].version;\n      }\n      return result;\n    }\n  }, {\n    key: \"handleJsonSelectQuery\",\n    value: function handleJsonSelectQuery(rows) {\n      var _this = this;\n      if (!this.model || !this.model.fieldRawAttributesMap) {\n        return;\n      }\n      var _loop = function _loop() {\n        var _field = _Object$keys[_i];\n        var modelField = _this.model.fieldRawAttributesMap[_field];\n        if (modelField.type instanceof DataTypes.JSON) {\n          rows = rows.map(function (row) {\n            if (row[modelField.fieldName] && typeof row[modelField.fieldName] === \"string\" && !_this.connection.info.hasMinVersion(10, 5, 2)) {\n              row[modelField.fieldName] = JSON.parse(row[modelField.fieldName]);\n            }\n            if (DataTypes.JSON.parse) {\n              return DataTypes.JSON.parse(modelField, _this.sequelize.options, row[modelField.fieldName]);\n            }\n            return row;\n          });\n        }\n      };\n      for (var _i = 0, _Object$keys = Object.keys(this.model.fieldRawAttributesMap); _i < _Object$keys.length; _i++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"logWarnings\",\n    value: function () {\n      var _logWarnings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(results) {\n        var warningResults, warningMessage, messages, _iterator3, _step3, _warningRow, _iterator4, _step4, _warningResult, _iterator5, _step5, _objectKey;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.run(\"SHOW WARNINGS\");\n            case 2:\n              warningResults = _context2.sent;\n              warningMessage = \"MariaDB Warnings (\".concat(this.connection.uuid || \"default\", \"): \");\n              messages = [];\n              _iterator3 = _createForOfIteratorHelper(warningResults);\n              _context2.prev = 6;\n              _iterator3.s();\n            case 8:\n              if ((_step3 = _iterator3.n()).done) {\n                _context2.next = 16;\n                break;\n              }\n              _warningRow = _step3.value;\n              if (!(_warningRow === void 0 || typeof _warningRow[Symbol.iterator] !== \"function\")) {\n                _context2.next = 12;\n                break;\n              }\n              return _context2.abrupt(\"continue\", 14);\n            case 12:\n              _iterator4 = _createForOfIteratorHelper(_warningRow);\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  _warningResult = _step4.value;\n                  if (Object.prototype.hasOwnProperty.call(_warningResult, \"Message\")) {\n                    messages.push(_warningResult.Message);\n                  } else {\n                    _iterator5 = _createForOfIteratorHelper(_warningResult.keys());\n                    try {\n                      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                        _objectKey = _step5.value;\n                        messages.push([_objectKey, _warningResult[_objectKey]].join(\": \"));\n                      }\n                    } catch (err) {\n                      _iterator5.e(err);\n                    } finally {\n                      _iterator5.f();\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            case 14:\n              _context2.next = 8;\n              break;\n            case 16:\n              _context2.next = 21;\n              break;\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](6);\n              _iterator3.e(_context2.t0);\n            case 21:\n              _context2.prev = 21;\n              _iterator3.f();\n              return _context2.finish(21);\n            case 24:\n              this.sequelize.log(warningMessage + messages.join(\"; \"), this.options);\n              return _context2.abrupt(\"return\", results);\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[6, 18, 21, 24]]);\n      }));\n      function logWarnings(_x3) {\n        return _logWarnings.apply(this, arguments);\n      }\n      return logWarnings;\n    }()\n  }, {\n    key: \"formatError\",\n    value: function formatError(err, errStack) {\n      var _this2 = this;\n      switch (err.errno) {\n        case ER_DUP_ENTRY:\n          {\n            var match = err.message.match(/Duplicate entry '([\\s\\S]*)' for key '?((.|\\s)*?)'?\\s.*$/);\n            var fields = {};\n            var message = \"Validation error\";\n            var values = match ? match[1].split(\"-\") : void 0;\n            var fieldKey = match ? match[2] : void 0;\n            var fieldVal = match ? match[1] : void 0;\n            var uniqueKey = this.model && this.model.uniqueKeys[fieldKey];\n            if (uniqueKey) {\n              if (uniqueKey.msg) message = uniqueKey.msg;\n              fields = _.zipObject(uniqueKey.fields, values);\n            } else {\n              fields[fieldKey] = fieldVal;\n            }\n            var errors = [];\n            _.forOwn(fields, function (value, field) {\n              errors.push(new sequelizeErrors.ValidationErrorItem(_this2.getUniqueConstraintErrorMessage(field), \"unique violation\", field, value, _this2.instance, \"not_unique\"));\n            });\n            return new sequelizeErrors.UniqueConstraintError({\n              message: message,\n              errors: errors,\n              parent: err,\n              fields: fields,\n              stack: errStack\n            });\n          }\n        case ER_ROW_IS_REFERENCED:\n        case ER_NO_REFERENCED_ROW:\n          {\n            var _match = err.message.match(/CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/);\n            var quoteChar = _match ? _match[1] : \"`\";\n            var _fields = _match ? _match[3].split(new RegExp(\"\".concat(quoteChar, \", *\").concat(quoteChar))) : void 0;\n            return new sequelizeErrors.ForeignKeyConstraintError({\n              reltype: err.errno === ER_ROW_IS_REFERENCED ? \"parent\" : \"child\",\n              table: _match ? _match[4] : void 0,\n              fields: _fields,\n              value: _fields && _fields.length && this.instance && this.instance[_fields[0]] || void 0,\n              index: _match ? _match[2] : void 0,\n              parent: err,\n              stack: errStack\n            });\n          }\n        default:\n          return new sequelizeErrors.DatabaseError(err, {\n            stack: errStack\n          });\n      }\n    }\n  }, {\n    key: \"handleShowTablesQuery\",\n    value: function handleShowTablesQuery(results) {\n      return results.map(function (resultSet) {\n        return {\n          tableName: resultSet.TABLE_NAME,\n          schema: resultSet.TABLE_SCHEMA\n        };\n      });\n    }\n  }, {\n    key: \"handleShowIndexesQuery\",\n    value: function handleShowIndexesQuery(data) {\n      var currItem;\n      var result = [];\n      data.forEach(function (item) {\n        if (!currItem || currItem.name !== item.Key_name) {\n          currItem = {\n            primary: item.Key_name === \"PRIMARY\",\n            fields: [],\n            name: item.Key_name,\n            tableName: item.Table,\n            unique: item.Non_unique !== 1,\n            type: item.Index_type\n          };\n          result.push(currItem);\n        }\n        currItem.fields[item.Seq_in_index - 1] = {\n          attribute: item.Column_name,\n          length: item.Sub_part || void 0,\n          order: item.Collation === \"A\" ? \"ASC\" : void 0\n        };\n      });\n      return result;\n    }\n  }], [{\n    key: \"formatBindParameters\",\n    value: function formatBindParameters(sql, values, dialect) {\n      var bindParam = [];\n      var replacementFunc = function replacementFunc(match, key, values_) {\n        if (values_[key] !== void 0) {\n          bindParam.push(values_[key]);\n          return \"?\";\n        }\n        return void 0;\n      };\n      sql = AbstractQuery.formatBindParameters(sql, values, dialect, replacementFunc)[0];\n      return [sql, bindParam.length > 0 ? bindParam : void 0];\n    }\n  }]);\n  return Query;\n}(AbstractQuery);\nmodule.exports = Query;","map":{"version":3,"names":["AbstractQuery","require","sequelizeErrors","_","DataTypes","_require","logger","ER_DUP_ENTRY","ER_DEADLOCK","ER_ROW_IS_REFERENCED","ER_NO_REFERENCED_ROW","debug","debugContext","Query","_AbstractQuery","_inherits","_super","_createSuper","connection","sequelize","options","_classCallCheck","call","__spreadValues","showWarnings","_createClass","key","value","_run","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sql","parameters","complete","results","errForStack","wrap","_callee$","_context","prev","next","_logQuery","Error","query","sent","t0","transaction","errno","rollback","t1","finished","formatError","stack","finish","warningStatus","logWarnings","abrupt","formatResults","stop","run","_x","_x2","apply","arguments","data","result","instance","isBulkUpdateQuery","isBulkDeleteQuery","affectedRows","isUpsertQuery","isInsertQuery","handleInsertQuery","model","autoIncrementAttribute","primaryKeyAttribute","rawAttributes","startId","getInsertIdField","Array","pkField","field","i","_defineProperty","isSelectQuery","handleJsonSelectQuery","handleSelectQuery","isUpdateQuery","isCallQuery","isRawQuery","meta","isShowIndexesQuery","handleShowIndexesQuery","isForeignKeysQuery","isShowConstraintsQuery","isShowTablesQuery","handleShowTablesQuery","isDescribeQuery","_iterator2","_createForOfIteratorHelper","_step2","s","n","done","_result","Field","type","Type","toLowerCase","startsWith","replace","toUpperCase","allowNull","Null","defaultValue","Default","primaryKey","Key","autoIncrement","Object","prototype","hasOwnProperty","Extra","comment","Comment","err","e","f","isVersionQuery","version","rows","_this","fieldRawAttributesMap","_loop","_field","_Object$keys","_i","modelField","JSON","map","row","fieldName","info","hasMinVersion","parse","keys","length","_logWarnings","_callee2","warningResults","warningMessage","messages","_iterator3","_step3","_warningRow","_iterator4","_step4","_warningResult","_iterator5","_step5","_objectKey","_callee2$","_context2","concat","uuid","Symbol","iterator","push","Message","join","log","_x3","errStack","_this2","match","message","fields","values","split","fieldKey","fieldVal","uniqueKey","uniqueKeys","msg","zipObject","errors","forOwn","ValidationErrorItem","getUniqueConstraintErrorMessage","UniqueConstraintError","parent","quoteChar","RegExp","ForeignKeyConstraintError","reltype","table","index","DatabaseError","resultSet","tableName","TABLE_NAME","schema","TABLE_SCHEMA","currItem","forEach","item","name","Key_name","primary","Table","unique","Non_unique","Index_type","Seq_in_index","attribute","Column_name","Sub_part","order","Collation","formatBindParameters","dialect","bindParam","replacementFunc","values_","module","exports"],"sources":["../../../src/dialects/mariadb/query.js"],"sourcesContent":["'use strict';\n\nconst AbstractQuery = require('../abstract/query');\nconst sequelizeErrors = require('../../errors');\nconst _ = require('lodash');\nconst DataTypes = require('../../data-types');\nconst { logger } = require('../../utils/logger');\n\nconst ER_DUP_ENTRY = 1062;\nconst ER_DEADLOCK = 1213;\nconst ER_ROW_IS_REFERENCED = 1451;\nconst ER_NO_REFERENCED_ROW = 1452;\n\nconst debug = logger.debugContext('sql:mariadb');\n\nclass Query extends AbstractQuery {\n  constructor(connection, sequelize, options) {\n    super(connection, sequelize, { showWarnings: false, ...options });\n  }\n\n  static formatBindParameters(sql, values, dialect) {\n    const bindParam = [];\n    const replacementFunc = (match, key, values_) => {\n      if (values_[key] !== undefined) {\n        bindParam.push(values_[key]);\n        return '?';\n      }\n      return undefined;\n    };\n    sql = AbstractQuery.formatBindParameters(sql, values, dialect, replacementFunc)[0];\n    return [sql, bindParam.length > 0 ? bindParam : undefined];\n  }\n\n  async run(sql, parameters) {\n    this.sql = sql;\n    const { connection, options } = this;\n\n    const showWarnings = this.sequelize.options.showWarnings || options.showWarnings;\n\n    const complete = this._logQuery(sql, debug, parameters);\n\n    if (parameters) {\n      debug('parameters(%j)', parameters);\n    }\n\n    let results;\n    const errForStack = new Error();\n\n    try {\n      results = await connection.query(this.sql, parameters);\n    } catch (error) {\n      if (options.transaction && error.errno === ER_DEADLOCK) {\n        // MariaDB automatically rolls-back transactions in the event of a deadlock.\n        // However, we still initiate a manual rollback to ensure the connection gets released - see #13102.\n        try {\n          await options.transaction.rollback();\n        } catch (error_) {\n          // Ignore errors - since MariaDB automatically rolled back, we're\n          // not that worried about this redundant rollback failing.\n        }\n\n        options.transaction.finished = 'rollback';\n      }\n\n      error.sql = sql;\n      error.parameters = parameters;\n      throw this.formatError(error, errForStack.stack);\n    } finally {\n      complete();\n    }\n\n    if (showWarnings && results && results.warningStatus > 0) {\n      await this.logWarnings(results);\n    }\n    return this.formatResults(results);\n  }\n\n  /**\n   * High level function that handles the results of a query execution.\n   *\n   *\n   * Example:\n   *  query.formatResults([\n   *    {\n   *      id: 1,              // this is from the main table\n   *      attr2: 'snafu',     // this is from the main table\n   *      Tasks.id: 1,        // this is from the associated table\n   *      Tasks.title: 'task' // this is from the associated table\n   *    }\n   *  ])\n   *\n   * @param {Array} data - The result of the query execution.\n   * @private\n   */\n  formatResults(data) {\n    let result = this.instance;\n\n    if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery()) {\n      return data.affectedRows;\n    }\n    if (this.isUpsertQuery()) {\n      return [result, data.affectedRows === 1];\n    }\n    if (this.isInsertQuery(data)) {\n      this.handleInsertQuery(data);\n\n      if (!this.instance) {\n        // handle bulkCreate AI primary key\n        if (\n          this.model\n          && this.model.autoIncrementAttribute\n          && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute\n          && this.model.rawAttributes[this.model.primaryKeyAttribute]\n        ) {\n          // ONLY TRUE IF @auto_increment_increment is set to 1 !!\n          // Doesn't work with GALERA => each node will reserve increment (x for first server, x+1 for next node...)\n          const startId = data[this.getInsertIdField()];\n          result = new Array(data.affectedRows);\n          const pkField = this.model.rawAttributes[this.model.primaryKeyAttribute].field;\n          for (let i = 0; i < data.affectedRows; i++) {\n            result[i] = { [pkField]: startId + i };\n          }\n          return [result, data.affectedRows];\n        }\n\n        return [data[this.getInsertIdField()], data.affectedRows];\n      }\n    }\n\n    if (this.isSelectQuery()) {\n      this.handleJsonSelectQuery(data);\n\n      return this.handleSelectQuery(data);\n    }\n    if (this.isInsertQuery() || this.isUpdateQuery()) {\n      return [result, data.affectedRows];\n    }\n    if (this.isCallQuery()) {\n      return data[0];\n    }\n    if (this.isRawQuery()) {\n      const meta = data.meta;\n      delete data.meta;\n      return [data, meta];\n    }\n    if (this.isShowIndexesQuery()) {\n      return this.handleShowIndexesQuery(data);\n    }\n    if (this.isForeignKeysQuery() || this.isShowConstraintsQuery()) {\n      return data;\n    }\n    if (this.isShowTablesQuery()) {\n      return this.handleShowTablesQuery(data);\n    }\n    if (this.isDescribeQuery()) {\n      result = {};\n\n      for (const _result of data) {\n        result[_result.Field] = {\n          type: _result.Type.toLowerCase().startsWith('enum') ? _result.Type.replace(/^enum/i,\n            'ENUM') : _result.Type.toUpperCase(),\n          allowNull: _result.Null === 'YES',\n          defaultValue: _result.Default,\n          primaryKey: _result.Key === 'PRI',\n          autoIncrement: Object.prototype.hasOwnProperty.call(_result, 'Extra')\n            && _result.Extra.toLowerCase() === 'auto_increment',\n          comment: _result.Comment ? _result.Comment : null\n        };\n      }\n      return result;\n    }\n    if (this.isVersionQuery()) {\n      return data[0].version;\n    }\n\n    return result;\n  }\n\n  handleJsonSelectQuery(rows) {\n    if (!this.model || !this.model.fieldRawAttributesMap) {\n      return;\n    }\n    for (const _field of Object.keys(this.model.fieldRawAttributesMap)) {\n      const modelField = this.model.fieldRawAttributesMap[_field];\n      if (modelField.type instanceof DataTypes.JSON) {\n        // Value is returned as String, not JSON\n        rows = rows.map(row => {\n          // JSON fields for MariaDB server 10.5.2+ already results in JSON format, skip JSON.parse\n          // this is due to this https://jira.mariadb.org/browse/MDEV-17832 and how mysql2 connector interacts with MariaDB and JSON fields\n          if (row[modelField.fieldName] && typeof row[modelField.fieldName] === 'string' && !this.connection.info.hasMinVersion(10, 5, 2)) {\n            row[modelField.fieldName] = JSON.parse(row[modelField.fieldName]);\n          }\n          if (DataTypes.JSON.parse) {\n            return DataTypes.JSON.parse(modelField, this.sequelize.options,\n              row[modelField.fieldName]);\n          }\n          return row;\n        });\n      }\n    }\n  }\n\n  async logWarnings(results) {\n    const warningResults = await this.run('SHOW WARNINGS');\n    const warningMessage = `MariaDB Warnings (${this.connection.uuid || 'default'}): `;\n    const messages = [];\n    for (const _warningRow of warningResults) {\n      if (_warningRow === undefined || typeof _warningRow[Symbol.iterator] !== 'function') {\n        continue;\n      }\n      for (const _warningResult of _warningRow) {\n        if (Object.prototype.hasOwnProperty.call(_warningResult, 'Message')) {\n          messages.push(_warningResult.Message);\n        } else {\n          for (const _objectKey of _warningResult.keys()) {\n            messages.push([_objectKey, _warningResult[_objectKey]].join(': '));\n          }\n        }\n      }\n    }\n\n    this.sequelize.log(warningMessage + messages.join('; '), this.options);\n\n    return results;\n  }\n\n  formatError(err, errStack) {\n    switch (err.errno) {\n      case ER_DUP_ENTRY: {\n        const match = err.message.match(\n          /Duplicate entry '([\\s\\S]*)' for key '?((.|\\s)*?)'?\\s.*$/);\n\n        let fields = {};\n        let message = 'Validation error';\n        const values = match ? match[1].split('-') : undefined;\n        const fieldKey = match ? match[2] : undefined;\n        const fieldVal = match ? match[1] : undefined;\n        const uniqueKey = this.model && this.model.uniqueKeys[fieldKey];\n\n        if (uniqueKey) {\n          if (uniqueKey.msg) message = uniqueKey.msg;\n          fields = _.zipObject(uniqueKey.fields, values);\n        } else {\n          fields[fieldKey] = fieldVal;\n        }\n\n        const errors = [];\n        _.forOwn(fields, (value, field) => {\n          errors.push(new sequelizeErrors.ValidationErrorItem(\n            this.getUniqueConstraintErrorMessage(field),\n            'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n            field,\n            value,\n            this.instance,\n            'not_unique'\n          ));\n        });\n\n        return new sequelizeErrors.UniqueConstraintError({ message, errors, parent: err, fields, stack: errStack });\n      }\n\n      case ER_ROW_IS_REFERENCED:\n      case ER_NO_REFERENCED_ROW: {\n        // e.g. CONSTRAINT `example_constraint_name` FOREIGN KEY (`example_id`) REFERENCES `examples` (`id`)\n        const match = err.message.match(\n          /CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/\n        );\n        const quoteChar = match ? match[1] : '`';\n        const fields = match ? match[3].split(new RegExp(`${quoteChar}, *${quoteChar}`)) : undefined;\n\n        return new sequelizeErrors.ForeignKeyConstraintError({\n          reltype: err.errno === ER_ROW_IS_REFERENCED ? 'parent' : 'child',\n          table: match ? match[4] : undefined,\n          fields,\n          value: fields && fields.length && this.instance && this.instance[fields[0]] || undefined,\n          index: match ? match[2] : undefined,\n          parent: err,\n          stack: errStack\n        });\n      }\n\n      default:\n        return new sequelizeErrors.DatabaseError(err, { stack: errStack });\n    }\n  }\n\n  handleShowTablesQuery(results) {\n    return results.map(resultSet => ({\n      tableName: resultSet.TABLE_NAME,\n      schema: resultSet.TABLE_SCHEMA\n    }));\n  }\n\n  handleShowIndexesQuery(data) {\n\n    let currItem;\n    const result = [];\n\n    data.forEach(item => {\n      if (!currItem || currItem.name !== item.Key_name) {\n        currItem = {\n          primary: item.Key_name === 'PRIMARY',\n          fields: [],\n          name: item.Key_name,\n          tableName: item.Table,\n          unique: item.Non_unique !== 1,\n          type: item.Index_type\n        };\n        result.push(currItem);\n      }\n\n      currItem.fields[item.Seq_in_index - 1] = {\n        attribute: item.Column_name,\n        length: item.Sub_part || undefined,\n        order: item.Collation === 'A' ? 'ASC' : undefined\n      };\n    });\n\n    return result;\n  }\n}\n\nmodule.exports = Query;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}