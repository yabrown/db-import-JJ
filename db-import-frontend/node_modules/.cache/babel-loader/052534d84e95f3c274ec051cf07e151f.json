{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectInParallel = connectInParallel;\nexports.connectInSequence = connectInSequence;\nexports.lookupAllAddresses = lookupAllAddresses;\nvar _net = _interopRequireDefault(require(\"net\"));\nvar punycode = _interopRequireWildcard(require(\"punycode\"));\nvar _abortError = _interopRequireDefault(require(\"./errors/abort-error\"));\nvar _esAggregateError = _interopRequireDefault(require(\"es-aggregate-error\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction connectInParallel(_x, _x2, _x3) {\n  return _connectInParallel.apply(this, arguments);\n}\nfunction _connectInParallel() {\n  _connectInParallel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options, lookup, signal) {\n    var addresses;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!signal.aborted) {\n            _context.next = 2;\n            break;\n          }\n          throw new _abortError.default();\n        case 2:\n          _context.next = 4;\n          return lookupAllAddresses(options.host, lookup, signal);\n        case 4:\n          addresses = _context.sent;\n          _context.next = 7;\n          return new Promise(function (resolve, reject) {\n            var sockets = new Array(addresses.length);\n            var errors = [];\n            function onError(err) {\n              errors.push(err);\n              this.removeListener('error', onError);\n              this.removeListener('connect', onConnect);\n              this.destroy();\n              if (errors.length === addresses.length) {\n                signal.removeEventListener('abort', onAbort);\n                reject(new _esAggregateError.default(errors, 'Could not connect (parallel)'));\n              }\n            }\n            function onConnect() {\n              signal.removeEventListener('abort', onAbort);\n              for (var j = 0; j < sockets.length; j++) {\n                var socket = sockets[j];\n                if (this === socket) {\n                  continue;\n                }\n                socket.removeListener('error', onError);\n                socket.removeListener('connect', onConnect);\n                socket.destroy();\n              }\n              resolve(this);\n            }\n            var onAbort = function onAbort() {\n              for (var j = 0; j < sockets.length; j++) {\n                var socket = sockets[j];\n                socket.removeListener('error', onError);\n                socket.removeListener('connect', onConnect);\n                socket.destroy();\n              }\n              reject(new _abortError.default());\n            };\n            for (var i = 0, len = addresses.length; i < len; i++) {\n              var socket = sockets[i] = _net.default.connect(_objectSpread(_objectSpread({}, options), {}, {\n                host: addresses[i].address,\n                family: addresses[i].family\n              }));\n              socket.on('error', onError);\n              socket.on('connect', onConnect);\n            }\n            signal.addEventListener('abort', onAbort, {\n              once: true\n            });\n          });\n        case 7:\n          return _context.abrupt(\"return\", _context.sent);\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _connectInParallel.apply(this, arguments);\n}\nfunction connectInSequence(_x4, _x5, _x6) {\n  return _connectInSequence.apply(this, arguments);\n}\n/**\n * Look up all addresses for the given hostname.\n */\nfunction _connectInSequence() {\n  _connectInSequence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options, lookup, signal) {\n    var errors, addresses, _iterator, _step, _loop, _ret;\n    return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!signal.aborted) {\n            _context3.next = 2;\n            break;\n          }\n          throw new _abortError.default();\n        case 2:\n          errors = [];\n          _context3.next = 5;\n          return lookupAllAddresses(options.host, lookup, signal);\n        case 5:\n          addresses = _context3.sent;\n          _iterator = _createForOfIteratorHelper(addresses);\n          _context3.prev = 7;\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n            var address;\n            return _regeneratorRuntime().wrap(function _loop$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  address = _step.value;\n                  _context2.prev = 1;\n                  _context2.next = 4;\n                  return new Promise(function (resolve, reject) {\n                    var socket = _net.default.connect(_objectSpread(_objectSpread({}, options), {}, {\n                      host: address.address,\n                      family: address.family\n                    }));\n                    var onAbort = function onAbort() {\n                      socket.removeListener('error', onError);\n                      socket.removeListener('connect', onConnect);\n                      socket.destroy();\n                      reject(new _abortError.default());\n                    };\n                    var onError = function onError(err) {\n                      signal.removeEventListener('abort', onAbort);\n                      socket.removeListener('error', onError);\n                      socket.removeListener('connect', onConnect);\n                      socket.destroy();\n                      reject(err);\n                    };\n                    var onConnect = function onConnect() {\n                      signal.removeEventListener('abort', onAbort);\n                      socket.removeListener('error', onError);\n                      socket.removeListener('connect', onConnect);\n                      resolve(socket);\n                    };\n                    signal.addEventListener('abort', onAbort, {\n                      once: true\n                    });\n                    socket.on('error', onError);\n                    socket.on('connect', onConnect);\n                  });\n                case 4:\n                  _context2.t0 = _context2.sent;\n                  return _context2.abrupt(\"return\", {\n                    v: _context2.t0\n                  });\n                case 8:\n                  _context2.prev = 8;\n                  _context2.t1 = _context2[\"catch\"](1);\n                  if (!(_context2.t1 instanceof Error && _context2.t1.name === 'AbortError')) {\n                    _context2.next = 12;\n                    break;\n                  }\n                  throw _context2.t1;\n                case 12:\n                  errors.push(_context2.t1);\n                  return _context2.abrupt(\"return\", \"continue\");\n                case 14:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _loop, null, [[1, 8]]);\n          });\n          _iterator.s();\n        case 10:\n          if ((_step = _iterator.n()).done) {\n            _context3.next = 19;\n            break;\n          }\n          return _context3.delegateYield(_loop(), \"t0\", 12);\n        case 12:\n          _ret = _context3.t0;\n          if (!(_ret === \"continue\")) {\n            _context3.next = 15;\n            break;\n          }\n          return _context3.abrupt(\"continue\", 17);\n        case 15:\n          if (!(typeof _ret === \"object\")) {\n            _context3.next = 17;\n            break;\n          }\n          return _context3.abrupt(\"return\", _ret.v);\n        case 17:\n          _context3.next = 10;\n          break;\n        case 19:\n          _context3.next = 24;\n          break;\n        case 21:\n          _context3.prev = 21;\n          _context3.t1 = _context3[\"catch\"](7);\n          _iterator.e(_context3.t1);\n        case 24:\n          _context3.prev = 24;\n          _iterator.f();\n          return _context3.finish(24);\n        case 27:\n          throw new _esAggregateError.default(errors, 'Could not connect (sequence)');\n        case 28:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee2, null, [[7, 21, 24, 27]]);\n  }));\n  return _connectInSequence.apply(this, arguments);\n}\nfunction lookupAllAddresses(_x7, _x8, _x9) {\n  return _lookupAllAddresses.apply(this, arguments);\n}\nfunction _lookupAllAddresses() {\n  _lookupAllAddresses = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(host, lookup, signal) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!signal.aborted) {\n            _context4.next = 2;\n            break;\n          }\n          throw new _abortError.default();\n        case 2:\n          if (!_net.default.isIPv6(host)) {\n            _context4.next = 6;\n            break;\n          }\n          return _context4.abrupt(\"return\", [{\n            address: host,\n            family: 6\n          }]);\n        case 6:\n          if (!_net.default.isIPv4(host)) {\n            _context4.next = 10;\n            break;\n          }\n          return _context4.abrupt(\"return\", [{\n            address: host,\n            family: 4\n          }]);\n        case 10:\n          _context4.next = 12;\n          return new Promise(function (resolve, reject) {\n            var onAbort = function onAbort() {\n              reject(new _abortError.default());\n            };\n            signal.addEventListener('abort', onAbort);\n            lookup(punycode.toASCII(host), {\n              all: true\n            }, function (err, addresses) {\n              signal.removeEventListener('abort', onAbort);\n              err ? reject(err) : resolve(addresses);\n            });\n          });\n        case 12:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee3);\n  }));\n  return _lookupAllAddresses.apply(this, arguments);\n}","map":{"version":3,"names":["_net","_interopRequireDefault","require","punycode","_interopRequireWildcard","_abortError","_esAggregateError","connectInParallel","_x","_x2","_x3","_connectInParallel","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","lookup","signal","addresses","wrap","_callee$","_context","prev","next","aborted","default","lookupAllAddresses","host","sent","Promise","resolve","reject","sockets","Array","length","errors","onError","err","push","removeListener","onConnect","destroy","removeEventListener","onAbort","j","socket","i","len","connect","_objectSpread","address","family","on","addEventListener","once","abrupt","stop","connectInSequence","_x4","_x5","_x6","_connectInSequence","_callee2","_iterator","_step","_loop","_ret","_callee2$","_context3","_createForOfIteratorHelper","_loop$","_context2","value","t0","v","t1","Error","name","s","n","done","delegateYield","e","f","finish","_x7","_x8","_x9","_lookupAllAddresses","_callee3","_callee3$","_context4","isIPv6","isIPv4","toASCII","all"],"sources":["../src/connector.ts"],"sourcesContent":["import net from 'net';\nimport dns, { LookupAddress } from 'dns';\n\nimport * as punycode from 'punycode';\nimport { AbortSignal } from 'node-abort-controller';\nimport AbortError from './errors/abort-error';\n\nimport AggregateError from 'es-aggregate-error';\n\ntype LookupFunction = (hostname: string, options: dns.LookupAllOptions, callback: (err: NodeJS.ErrnoException | null, addresses: dns.LookupAddress[]) => void) => void;\n\nexport async function connectInParallel(options: { host: string, port: number, localAddress?: string | undefined }, lookup: LookupFunction, signal: AbortSignal) {\n  if (signal.aborted) {\n    throw new AbortError();\n  }\n\n  const addresses = await lookupAllAddresses(options.host, lookup, signal);\n\n  return await new Promise<net.Socket>((resolve, reject) => {\n    const sockets = new Array(addresses.length);\n\n    const errors: Error[] = [];\n\n    function onError(this: net.Socket, err: Error) {\n      errors.push(err);\n\n      this.removeListener('error', onError);\n      this.removeListener('connect', onConnect);\n\n      this.destroy();\n\n      if (errors.length === addresses.length) {\n        signal.removeEventListener('abort', onAbort);\n\n        reject(new AggregateError(errors, 'Could not connect (parallel)'));\n      }\n    }\n\n    function onConnect(this: net.Socket) {\n      signal.removeEventListener('abort', onAbort);\n\n      for (let j = 0; j < sockets.length; j++) {\n        const socket = sockets[j];\n\n        if (this === socket) {\n          continue;\n        }\n\n        socket.removeListener('error', onError);\n        socket.removeListener('connect', onConnect);\n        socket.destroy();\n      }\n\n      resolve(this);\n    }\n\n    const onAbort = () => {\n      for (let j = 0; j < sockets.length; j++) {\n        const socket = sockets[j];\n\n        socket.removeListener('error', onError);\n        socket.removeListener('connect', onConnect);\n\n        socket.destroy();\n      }\n\n      reject(new AbortError());\n    };\n\n    for (let i = 0, len = addresses.length; i < len; i++) {\n      const socket = sockets[i] = net.connect({\n        ...options,\n        host: addresses[i].address,\n        family: addresses[i].family\n      });\n\n      socket.on('error', onError);\n      socket.on('connect', onConnect);\n    }\n\n    signal.addEventListener('abort', onAbort, { once: true });\n  });\n}\n\nexport async function connectInSequence(options: { host: string, port: number, localAddress?: string | undefined }, lookup: LookupFunction, signal: AbortSignal) {\n  if (signal.aborted) {\n    throw new AbortError();\n  }\n\n  const errors: any[] = [];\n  const addresses = await lookupAllAddresses(options.host, lookup, signal);\n\n  for (const address of addresses) {\n    try {\n      return await new Promise<net.Socket>((resolve, reject) => {\n        const socket = net.connect({\n          ...options,\n          host: address.address,\n          family: address.family\n        });\n\n        const onAbort = () => {\n          socket.removeListener('error', onError);\n          socket.removeListener('connect', onConnect);\n\n          socket.destroy();\n\n          reject(new AbortError());\n        };\n\n        const onError = (err: Error) => {\n          signal.removeEventListener('abort', onAbort);\n\n          socket.removeListener('error', onError);\n          socket.removeListener('connect', onConnect);\n\n          socket.destroy();\n\n          reject(err);\n        };\n\n        const onConnect = () => {\n          signal.removeEventListener('abort', onAbort);\n\n          socket.removeListener('error', onError);\n          socket.removeListener('connect', onConnect);\n\n          resolve(socket);\n        };\n\n        signal.addEventListener('abort', onAbort, { once: true });\n\n        socket.on('error', onError);\n        socket.on('connect', onConnect);\n      });\n    } catch (err) {\n      if (err instanceof Error && err.name === 'AbortError') {\n        throw err;\n      }\n\n      errors.push(err);\n\n      continue;\n    }\n  }\n\n  throw new AggregateError(errors, 'Could not connect (sequence)');\n}\n\n/**\n * Look up all addresses for the given hostname.\n */\nexport async function lookupAllAddresses(host: string, lookup: LookupFunction, signal: AbortSignal): Promise<dns.LookupAddress[]> {\n  if (signal.aborted) {\n    throw new AbortError();\n  }\n\n  if (net.isIPv6(host)) {\n    return [{ address: host, family: 6 }];\n  } else if (net.isIPv4(host)) {\n    return [{ address: host, family: 4 }];\n  } else {\n    return await new Promise<LookupAddress[]>((resolve, reject) => {\n      const onAbort = () => {\n        reject(new AbortError());\n      };\n\n      signal.addEventListener('abort', onAbort);\n\n      lookup(punycode.toASCII(host), { all: true }, (err, addresses) => {\n        signal.removeEventListener('abort', onAbort);\n\n        err ? reject(err) : resolve(addresses);\n      });\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}