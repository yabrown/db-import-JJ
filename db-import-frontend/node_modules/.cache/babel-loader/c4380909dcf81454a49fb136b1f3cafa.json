{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar AbstractQuery = require(\"../abstract/query\");\nvar sequelizeErrors = require(\"../../errors\");\nvar _ = require(\"lodash\");\nvar _require = require(\"../../utils/logger\"),\n  logger = _require.logger;\nvar ER_DUP_ENTRY = 1062;\nvar ER_DEADLOCK = 1213;\nvar ER_ROW_IS_REFERENCED = 1451;\nvar ER_NO_REFERENCED_ROW = 1452;\nvar debug = logger.debugContext(\"sql:mysql\");\nvar Query = /*#__PURE__*/function (_AbstractQuery) {\n  _inherits(Query, _AbstractQuery);\n  var _super = _createSuper(Query);\n  function Query(connection, sequelize, options) {\n    _classCallCheck(this, Query);\n    return _super.call(this, connection, sequelize, __spreadValues({\n      showWarnings: false\n    }, options));\n  }\n  _createClass(Query, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sql, parameters) {\n        var connection, options, showWarnings, complete, results, errForStack;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.sql = sql;\n              connection = this.connection, options = this.options;\n              showWarnings = this.sequelize.options.showWarnings || options.showWarnings;\n              complete = this._logQuery(sql, debug, parameters);\n              if (parameters) {\n                debug(\"parameters(%j)\", parameters);\n              }\n              errForStack = new Error();\n              _context.prev = 6;\n              if (!(parameters && parameters.length)) {\n                _context.next = 13;\n                break;\n              }\n              _context.next = 10;\n              return new Promise(function (resolve, reject) {\n                connection.execute(sql, parameters, function (error, result) {\n                  return error ? reject(error) : resolve(result);\n                }).setMaxListeners(100);\n              });\n            case 10:\n              results = _context.sent;\n              _context.next = 16;\n              break;\n            case 13:\n              _context.next = 15;\n              return new Promise(function (resolve, reject) {\n                connection.query({\n                  sql: sql\n                }, function (error, result) {\n                  return error ? reject(error) : resolve(result);\n                }).setMaxListeners(100);\n              });\n            case 15:\n              results = _context.sent;\n            case 16:\n              _context.next = 32;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](6);\n              if (!(options.transaction && _context.t0.errno === ER_DEADLOCK)) {\n                _context.next = 29;\n                break;\n              }\n              _context.prev = 21;\n              _context.next = 24;\n              return options.transaction.rollback();\n            case 24:\n              _context.next = 28;\n              break;\n            case 26:\n              _context.prev = 26;\n              _context.t1 = _context[\"catch\"](21);\n            case 28:\n              options.transaction.finished = \"rollback\";\n            case 29:\n              _context.t0.sql = sql;\n              _context.t0.parameters = parameters;\n              throw this.formatError(_context.t0, errForStack.stack);\n            case 32:\n              _context.prev = 32;\n              complete();\n              return _context.finish(32);\n            case 35:\n              if (!(showWarnings && results && results.warningStatus > 0)) {\n                _context.next = 38;\n                break;\n              }\n              _context.next = 38;\n              return this.logWarnings(results);\n            case 38:\n              return _context.abrupt(\"return\", this.formatResults(results));\n            case 39:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[6, 18, 32, 35], [21, 26]]);\n      }));\n      function run(_x, _x2) {\n        return _run.apply(this, arguments);\n      }\n      return run;\n    }()\n  }, {\n    key: \"formatResults\",\n    value: function formatResults(data) {\n      var result = this.instance;\n      if (this.isInsertQuery(data)) {\n        this.handleInsertQuery(data);\n        if (!this.instance) {\n          if (data.constructor.name === \"ResultSetHeader\" && this.model && this.model.autoIncrementAttribute && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute && this.model.rawAttributes[this.model.primaryKeyAttribute]) {\n            var startId = data[this.getInsertIdField()];\n            result = [];\n            for (var i = startId; i < startId + data.affectedRows; i++) {\n              result.push(_defineProperty({}, this.model.rawAttributes[this.model.primaryKeyAttribute].field, i));\n            }\n          } else {\n            result = data[this.getInsertIdField()];\n          }\n        }\n      }\n      if (this.isSelectQuery()) {\n        return this.handleSelectQuery(data);\n      }\n      if (this.isShowTablesQuery()) {\n        return this.handleShowTablesQuery(data);\n      }\n      if (this.isDescribeQuery()) {\n        result = {};\n        var _iterator2 = _createForOfIteratorHelper(data),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _result = _step2.value;\n            var enumRegex = /^enum/i;\n            result[_result.Field] = {\n              type: enumRegex.test(_result.Type) ? _result.Type.replace(enumRegex, \"ENUM\") : _result.Type.toUpperCase(),\n              allowNull: _result.Null === \"YES\",\n              defaultValue: _result.Default,\n              primaryKey: _result.Key === \"PRI\",\n              autoIncrement: Object.prototype.hasOwnProperty.call(_result, \"Extra\") && _result.Extra.toLowerCase() === \"auto_increment\",\n              comment: _result.Comment ? _result.Comment : null\n            };\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        return result;\n      }\n      if (this.isShowIndexesQuery()) {\n        return this.handleShowIndexesQuery(data);\n      }\n      if (this.isCallQuery()) {\n        return data[0];\n      }\n      if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery()) {\n        return data.affectedRows;\n      }\n      if (this.isVersionQuery()) {\n        return data[0].version;\n      }\n      if (this.isForeignKeysQuery()) {\n        return data;\n      }\n      if (this.isUpsertQuery()) {\n        return [result, data.affectedRows === 1];\n      }\n      if (this.isInsertQuery() || this.isUpdateQuery()) {\n        return [result, data.affectedRows];\n      }\n      if (this.isShowConstraintsQuery()) {\n        return data;\n      }\n      if (this.isRawQuery()) {\n        return [data, data];\n      }\n      return result;\n    }\n  }, {\n    key: \"logWarnings\",\n    value: function () {\n      var _logWarnings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(results) {\n        var warningResults, warningMessage, messages, _iterator3, _step3, _warningRow, _iterator4, _step4, _warningResult, _iterator5, _step5, _objectKey;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.run(\"SHOW WARNINGS\");\n            case 2:\n              warningResults = _context2.sent;\n              warningMessage = \"MySQL Warnings (\".concat(this.connection.uuid || \"default\", \"): \");\n              messages = [];\n              _iterator3 = _createForOfIteratorHelper(warningResults);\n              _context2.prev = 6;\n              _iterator3.s();\n            case 8:\n              if ((_step3 = _iterator3.n()).done) {\n                _context2.next = 16;\n                break;\n              }\n              _warningRow = _step3.value;\n              if (!(_warningRow === void 0 || typeof _warningRow[Symbol.iterator] !== \"function\")) {\n                _context2.next = 12;\n                break;\n              }\n              return _context2.abrupt(\"continue\", 14);\n            case 12:\n              _iterator4 = _createForOfIteratorHelper(_warningRow);\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  _warningResult = _step4.value;\n                  if (Object.prototype.hasOwnProperty.call(_warningResult, \"Message\")) {\n                    messages.push(_warningResult.Message);\n                  } else {\n                    _iterator5 = _createForOfIteratorHelper(_warningResult.keys());\n                    try {\n                      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                        _objectKey = _step5.value;\n                        messages.push([_objectKey, _warningResult[_objectKey]].join(\": \"));\n                      }\n                    } catch (err) {\n                      _iterator5.e(err);\n                    } finally {\n                      _iterator5.f();\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            case 14:\n              _context2.next = 8;\n              break;\n            case 16:\n              _context2.next = 21;\n              break;\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](6);\n              _iterator3.e(_context2.t0);\n            case 21:\n              _context2.prev = 21;\n              _iterator3.f();\n              return _context2.finish(21);\n            case 24:\n              this.sequelize.log(warningMessage + messages.join(\"; \"), this.options);\n              return _context2.abrupt(\"return\", results);\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[6, 18, 21, 24]]);\n      }));\n      function logWarnings(_x3) {\n        return _logWarnings.apply(this, arguments);\n      }\n      return logWarnings;\n    }()\n  }, {\n    key: \"formatError\",\n    value: function formatError(err, errStack) {\n      var _this = this;\n      var errCode = err.errno || err.code;\n      switch (errCode) {\n        case ER_DUP_ENTRY:\n          {\n            var match = err.message.match(/Duplicate entry '([\\s\\S]*)' for key '?((.|\\s)*?)'?$/);\n            var fields = {};\n            var message = \"Validation error\";\n            var values = match ? match[1].split(\"-\") : void 0;\n            var fieldKey = match ? match[2].split(\".\").pop() : void 0;\n            var fieldVal = match ? match[1] : void 0;\n            var uniqueKey = this.model && this.model.uniqueKeys[fieldKey];\n            if (uniqueKey) {\n              if (uniqueKey.msg) message = uniqueKey.msg;\n              fields = _.zipObject(uniqueKey.fields, values);\n            } else {\n              fields[fieldKey] = fieldVal;\n            }\n            var errors = [];\n            _.forOwn(fields, function (value, field) {\n              errors.push(new sequelizeErrors.ValidationErrorItem(_this.getUniqueConstraintErrorMessage(field), \"unique violation\", field, value, _this.instance, \"not_unique\"));\n            });\n            return new sequelizeErrors.UniqueConstraintError({\n              message: message,\n              errors: errors,\n              parent: err,\n              fields: fields,\n              stack: errStack\n            });\n          }\n        case ER_ROW_IS_REFERENCED:\n        case ER_NO_REFERENCED_ROW:\n          {\n            var _match = err.message.match(/CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/);\n            var quoteChar = _match ? _match[1] : \"`\";\n            var _fields = _match ? _match[3].split(new RegExp(\"\".concat(quoteChar, \", *\").concat(quoteChar))) : void 0;\n            return new sequelizeErrors.ForeignKeyConstraintError({\n              reltype: String(errCode) === String(ER_ROW_IS_REFERENCED) ? \"parent\" : \"child\",\n              table: _match ? _match[4] : void 0,\n              fields: _fields,\n              value: _fields && _fields.length && this.instance && this.instance[_fields[0]] || void 0,\n              index: _match ? _match[2] : void 0,\n              parent: err,\n              stack: errStack\n            });\n          }\n        default:\n          return new sequelizeErrors.DatabaseError(err, {\n            stack: errStack\n          });\n      }\n    }\n  }, {\n    key: \"handleShowIndexesQuery\",\n    value: function handleShowIndexesQuery(data) {\n      data = data.reduce(function (acc, item) {\n        if (!(item.Key_name in acc)) {\n          acc[item.Key_name] = item;\n          item.fields = [];\n        }\n        acc[item.Key_name].fields[item.Seq_in_index - 1] = {\n          attribute: item.Column_name,\n          length: item.Sub_part || void 0,\n          order: item.Collation === \"A\" ? \"ASC\" : void 0\n        };\n        delete item.column_name;\n        return acc;\n      }, {});\n      return _.map(data, function (item) {\n        return {\n          primary: item.Key_name === \"PRIMARY\",\n          fields: item.fields,\n          name: item.Key_name,\n          tableName: item.Table,\n          unique: item.Non_unique !== 1,\n          type: item.Index_type\n        };\n      });\n    }\n  }], [{\n    key: \"formatBindParameters\",\n    value: function formatBindParameters(sql, values, dialect) {\n      var bindParam = [];\n      var replacementFunc = function replacementFunc(match, key, values_) {\n        if (values_[key] !== void 0) {\n          bindParam.push(values_[key]);\n          return \"?\";\n        }\n        return void 0;\n      };\n      sql = AbstractQuery.formatBindParameters(sql, values, dialect, replacementFunc)[0];\n      return [sql, bindParam.length > 0 ? bindParam : void 0];\n    }\n  }]);\n  return Query;\n}(AbstractQuery);\nmodule.exports = Query;\nmodule.exports.Query = Query;\nmodule.exports.default = Query;","map":{"version":3,"names":["AbstractQuery","require","sequelizeErrors","_","_require","logger","ER_DUP_ENTRY","ER_DEADLOCK","ER_ROW_IS_REFERENCED","ER_NO_REFERENCED_ROW","debug","debugContext","Query","_AbstractQuery","_inherits","_super","_createSuper","connection","sequelize","options","_classCallCheck","call","__spreadValues","showWarnings","_createClass","key","value","_run","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sql","parameters","complete","results","errForStack","wrap","_callee$","_context","prev","next","_logQuery","Error","length","Promise","resolve","reject","execute","error","result","setMaxListeners","sent","query","t0","transaction","errno","rollback","t1","finished","formatError","stack","finish","warningStatus","logWarnings","abrupt","formatResults","stop","run","_x","_x2","apply","arguments","data","instance","isInsertQuery","handleInsertQuery","constructor","name","model","autoIncrementAttribute","primaryKeyAttribute","rawAttributes","startId","getInsertIdField","i","affectedRows","push","_defineProperty","field","isSelectQuery","handleSelectQuery","isShowTablesQuery","handleShowTablesQuery","isDescribeQuery","_iterator2","_createForOfIteratorHelper","_step2","s","n","done","_result","enumRegex","Field","type","test","Type","replace","toUpperCase","allowNull","Null","defaultValue","Default","primaryKey","Key","autoIncrement","Object","prototype","hasOwnProperty","Extra","toLowerCase","comment","Comment","err","e","f","isShowIndexesQuery","handleShowIndexesQuery","isCallQuery","isBulkUpdateQuery","isBulkDeleteQuery","isVersionQuery","version","isForeignKeysQuery","isUpsertQuery","isUpdateQuery","isShowConstraintsQuery","isRawQuery","_logWarnings","_callee2","warningResults","warningMessage","messages","_iterator3","_step3","_warningRow","_iterator4","_step4","_warningResult","_iterator5","_step5","_objectKey","_callee2$","_context2","concat","uuid","Symbol","iterator","Message","keys","join","log","_x3","errStack","_this","errCode","code","match","message","fields","values","split","fieldKey","pop","fieldVal","uniqueKey","uniqueKeys","msg","zipObject","errors","forOwn","ValidationErrorItem","getUniqueConstraintErrorMessage","UniqueConstraintError","parent","quoteChar","RegExp","ForeignKeyConstraintError","reltype","String","table","index","DatabaseError","reduce","acc","item","Key_name","Seq_in_index","attribute","Column_name","Sub_part","order","Collation","column_name","map","primary","tableName","Table","unique","Non_unique","Index_type","formatBindParameters","dialect","bindParam","replacementFunc","values_","module","exports","default"],"sources":["../../../src/dialects/mysql/query.js"],"sourcesContent":["'use strict';\n\nconst AbstractQuery = require('../abstract/query');\nconst sequelizeErrors = require('../../errors');\nconst _ = require('lodash');\nconst { logger } = require('../../utils/logger');\n\nconst ER_DUP_ENTRY = 1062;\nconst ER_DEADLOCK = 1213;\nconst ER_ROW_IS_REFERENCED = 1451;\nconst ER_NO_REFERENCED_ROW = 1452;\n\nconst debug = logger.debugContext('sql:mysql');\n\nclass Query extends AbstractQuery {\n  constructor(connection, sequelize, options) {\n    super(connection, sequelize, { showWarnings: false, ...options });\n  }\n\n  static formatBindParameters(sql, values, dialect) {\n    const bindParam = [];\n    const replacementFunc = (match, key, values_) => {\n      if (values_[key] !== undefined) {\n        bindParam.push(values_[key]);\n        return '?';\n      }\n      return undefined;\n    };\n    sql = AbstractQuery.formatBindParameters(sql, values, dialect, replacementFunc)[0];\n    return [sql, bindParam.length > 0 ? bindParam : undefined];\n  }\n\n  async run(sql, parameters) {\n    this.sql = sql;\n    const { connection, options } = this;\n\n    const showWarnings = this.sequelize.options.showWarnings || options.showWarnings;\n\n    const complete = this._logQuery(sql, debug, parameters);\n\n    if (parameters) {\n      debug('parameters(%j)', parameters);\n    }\n\n    let results;\n    const errForStack = new Error();\n\n    try {\n      if (parameters && parameters.length) {\n        results = await new Promise((resolve, reject) => {\n          connection\n            .execute(sql, parameters, (error, result) => error ? reject(error) : resolve(result))\n            .setMaxListeners(100);\n        });\n      } else {\n        results = await new Promise((resolve, reject) => {\n          connection\n            .query({ sql }, (error, result) => error ? reject(error) : resolve(result))\n            .setMaxListeners(100);\n        });\n      }\n    } catch (error) {\n      if (options.transaction && error.errno === ER_DEADLOCK) {\n        // MySQL automatically rolls-back transactions in the event of a deadlock.\n        // However, we still initiate a manual rollback to ensure the connection gets released - see #13102.\n        try {\n          await options.transaction.rollback();\n        } catch (error_) {\n          // Ignore errors - since MySQL automatically rolled back, we're\n          // not that worried about this redundant rollback failing.\n        }\n\n        options.transaction.finished = 'rollback';\n      }\n\n      error.sql = sql;\n      error.parameters = parameters;\n      throw this.formatError(error, errForStack.stack);\n    } finally {\n      complete();\n    }\n\n    if (showWarnings && results && results.warningStatus > 0) {\n      await this.logWarnings(results);\n    }\n    return this.formatResults(results);\n  }\n\n  /**\n   * High level function that handles the results of a query execution.\n   *\n   *\n   * Example:\n   *  query.formatResults([\n   *    {\n   *      id: 1,              // this is from the main table\n   *      attr2: 'snafu',     // this is from the main table\n   *      Tasks.id: 1,        // this is from the associated table\n   *      Tasks.title: 'task' // this is from the associated table\n   *    }\n   *  ])\n   *\n   * @param {Array} data - The result of the query execution.\n   * @private\n   */\n  formatResults(data) {\n    let result = this.instance;\n\n    if (this.isInsertQuery(data)) {\n      this.handleInsertQuery(data);\n\n      if (!this.instance) {\n        // handle bulkCreate AI primary key\n        if (\n          data.constructor.name === 'ResultSetHeader'\n          && this.model\n          && this.model.autoIncrementAttribute\n          && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute\n          && this.model.rawAttributes[this.model.primaryKeyAttribute]\n        ) {\n          const startId = data[this.getInsertIdField()];\n          result = [];\n          for (let i = startId; i < startId + data.affectedRows; i++) {\n            result.push({ [this.model.rawAttributes[this.model.primaryKeyAttribute].field]: i });\n          }\n        } else {\n          result = data[this.getInsertIdField()];\n        }\n      }\n    }\n\n    if (this.isSelectQuery()) {\n      return this.handleSelectQuery(data);\n    }\n    if (this.isShowTablesQuery()) {\n      return this.handleShowTablesQuery(data);\n    }\n    if (this.isDescribeQuery()) {\n      result = {};\n\n      for (const _result of data) {\n        const enumRegex = /^enum/i;\n        result[_result.Field] = {\n          type: enumRegex.test(_result.Type) ? _result.Type.replace(enumRegex, 'ENUM') : _result.Type.toUpperCase(),\n          allowNull: _result.Null === 'YES',\n          defaultValue: _result.Default,\n          primaryKey: _result.Key === 'PRI',\n          autoIncrement: Object.prototype.hasOwnProperty.call(_result, 'Extra')\n            && _result.Extra.toLowerCase() === 'auto_increment',\n          comment: _result.Comment ? _result.Comment : null\n        };\n      }\n      return result;\n    }\n    if (this.isShowIndexesQuery()) {\n      return this.handleShowIndexesQuery(data);\n    }\n    if (this.isCallQuery()) {\n      return data[0];\n    }\n    if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery()) {\n      return data.affectedRows;\n    }\n    if (this.isVersionQuery()) {\n      return data[0].version;\n    }\n    if (this.isForeignKeysQuery()) {\n      return data;\n    }\n    if (this.isUpsertQuery()) {\n      return [result, data.affectedRows === 1];\n    }\n    if (this.isInsertQuery() || this.isUpdateQuery()) {\n      return [result, data.affectedRows];\n    }\n    if (this.isShowConstraintsQuery()) {\n      return data;\n    }\n    if (this.isRawQuery()) {\n      // MySQL returns row data and metadata (affected rows etc) in a single object - let's standarize it, sorta\n      return [data, data];\n    }\n\n    return result;\n  }\n\n  async logWarnings(results) {\n    const warningResults = await this.run('SHOW WARNINGS');\n    const warningMessage = `MySQL Warnings (${this.connection.uuid || 'default'}): `;\n    const messages = [];\n    for (const _warningRow of warningResults) {\n      if (_warningRow === undefined || typeof _warningRow[Symbol.iterator] !== 'function') {\n        continue;\n      }\n      for (const _warningResult of _warningRow) {\n        if (Object.prototype.hasOwnProperty.call(_warningResult, 'Message')) {\n          messages.push(_warningResult.Message);\n        } else {\n          for (const _objectKey of _warningResult.keys()) {\n            messages.push([_objectKey, _warningResult[_objectKey]].join(': '));\n          }\n        }\n      }\n    }\n\n    this.sequelize.log(warningMessage + messages.join('; '), this.options);\n\n    return results;\n  }\n\n  formatError(err, errStack) {\n    const errCode = err.errno || err.code;\n\n    switch (errCode) {\n      case ER_DUP_ENTRY: {\n        const match = err.message.match(/Duplicate entry '([\\s\\S]*)' for key '?((.|\\s)*?)'?$/);\n        let fields = {};\n        let message = 'Validation error';\n        const values = match ? match[1].split('-') : undefined;\n        const fieldKey = match ? match[2].split('.').pop() : undefined;\n        const fieldVal = match ? match[1] : undefined;\n        const uniqueKey = this.model && this.model.uniqueKeys[fieldKey];\n\n        if (uniqueKey) {\n          if (uniqueKey.msg) message = uniqueKey.msg;\n          fields = _.zipObject(uniqueKey.fields, values);\n        } else {\n          fields[fieldKey] = fieldVal;\n        }\n\n        const errors = [];\n        _.forOwn(fields, (value, field) => {\n          errors.push(new sequelizeErrors.ValidationErrorItem(\n            this.getUniqueConstraintErrorMessage(field),\n            'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n            field,\n            value,\n            this.instance,\n            'not_unique'\n          ));\n        });\n\n        return new sequelizeErrors.UniqueConstraintError({ message, errors, parent: err, fields, stack: errStack });\n      }\n\n      case ER_ROW_IS_REFERENCED:\n      case ER_NO_REFERENCED_ROW: {\n        // e.g. CONSTRAINT `example_constraint_name` FOREIGN KEY (`example_id`) REFERENCES `examples` (`id`)\n        const match = err.message.match(\n          /CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/\n        );\n        const quoteChar = match ? match[1] : '`';\n        const fields = match ? match[3].split(new RegExp(`${quoteChar}, *${quoteChar}`)) : undefined;\n\n        return new sequelizeErrors.ForeignKeyConstraintError({\n          reltype: String(errCode) === String(ER_ROW_IS_REFERENCED) ? 'parent' : 'child',\n          table: match ? match[4] : undefined,\n          fields,\n          value: fields && fields.length && this.instance && this.instance[fields[0]] || undefined,\n          index: match ? match[2] : undefined,\n          parent: err,\n          stack: errStack\n        });\n      }\n\n      default:\n        return new sequelizeErrors.DatabaseError(err, { stack: errStack });\n    }\n  }\n\n  handleShowIndexesQuery(data) {\n    // Group by index name, and collect all fields\n    data = data.reduce((acc, item) => {\n      if (!(item.Key_name in acc)) {\n        acc[item.Key_name] = item;\n        item.fields = [];\n      }\n\n      acc[item.Key_name].fields[item.Seq_in_index - 1] = {\n        attribute: item.Column_name,\n        length: item.Sub_part || undefined,\n        order: item.Collation === 'A' ? 'ASC' : undefined\n      };\n      delete item.column_name;\n\n      return acc;\n    }, {});\n\n    return _.map(data, item => ({\n      primary: item.Key_name === 'PRIMARY',\n      fields: item.fields,\n      name: item.Key_name,\n      tableName: item.Table,\n      unique: item.Non_unique !== 1,\n      type: item.Index_type\n    }));\n  }\n}\n\nmodule.exports = Query;\nmodule.exports.Query = Query;\nmodule.exports.default = Query;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}