{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TYPE = exports.Packet = exports.OFFSET = exports.HEADER_LENGTH = void 0;\nexports.isPacketComplete = isPacketComplete;\nexports.packetLength = packetLength;\nvar _sprintfJs = require(\"sprintf-js\");\nvar HEADER_LENGTH = 8;\nexports.HEADER_LENGTH = HEADER_LENGTH;\nvar TYPE = {\n  SQL_BATCH: 0x01,\n  RPC_REQUEST: 0x03,\n  TABULAR_RESULT: 0x04,\n  ATTENTION: 0x06,\n  BULK_LOAD: 0x07,\n  TRANSACTION_MANAGER: 0x0E,\n  LOGIN7: 0x10,\n  NTLMAUTH_PKT: 0x11,\n  PRELOGIN: 0x12,\n  FEDAUTH_TOKEN: 0x08\n};\nexports.TYPE = TYPE;\nvar typeByValue = {};\nfor (var name in TYPE) {\n  typeByValue[TYPE[name]] = name;\n}\nvar STATUS = {\n  NORMAL: 0x00,\n  EOM: 0x01,\n  IGNORE: 0x02,\n  RESETCONNECTION: 0x08,\n  RESETCONNECTIONSKIPTRAN: 0x10\n};\nvar OFFSET = {\n  Type: 0,\n  Status: 1,\n  Length: 2,\n  SPID: 4,\n  PacketID: 6,\n  Window: 7\n};\nexports.OFFSET = OFFSET;\nvar DEFAULT_SPID = 0;\nvar DEFAULT_PACKETID = 1;\nvar DEFAULT_WINDOW = 0;\nvar NL = '\\n';\nvar Packet = /*#__PURE__*/function () {\n  function Packet(typeOrBuffer) {\n    _classCallCheck(this, Packet);\n    this.buffer = void 0;\n    if (typeOrBuffer instanceof Buffer) {\n      this.buffer = typeOrBuffer;\n    } else {\n      var type = typeOrBuffer;\n      this.buffer = Buffer.alloc(HEADER_LENGTH, 0);\n      this.buffer.writeUInt8(type, OFFSET.Type);\n      this.buffer.writeUInt8(STATUS.NORMAL, OFFSET.Status);\n      this.buffer.writeUInt16BE(DEFAULT_SPID, OFFSET.SPID);\n      this.buffer.writeUInt8(DEFAULT_PACKETID, OFFSET.PacketID);\n      this.buffer.writeUInt8(DEFAULT_WINDOW, OFFSET.Window);\n      this.setLength();\n    }\n  }\n  _createClass(Packet, [{\n    key: \"setLength\",\n    value: function setLength() {\n      this.buffer.writeUInt16BE(this.buffer.length, OFFSET.Length);\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return this.buffer.readUInt16BE(OFFSET.Length);\n    }\n  }, {\n    key: \"resetConnection\",\n    value: function resetConnection(reset) {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n      if (reset) {\n        status |= STATUS.RESETCONNECTION;\n      } else {\n        status &= 0xFF - STATUS.RESETCONNECTION;\n      }\n      this.buffer.writeUInt8(status, OFFSET.Status);\n    }\n  }, {\n    key: \"last\",\n    value: function last(_last) {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n      if (arguments.length > 0) {\n        if (_last) {\n          status |= STATUS.EOM;\n        } else {\n          status &= 0xFF - STATUS.EOM;\n        }\n        this.buffer.writeUInt8(status, OFFSET.Status);\n      }\n      return this.isLast();\n    }\n  }, {\n    key: \"ignore\",\n    value: function ignore(last) {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n      if (last) {\n        status |= STATUS.IGNORE;\n      } else {\n        status &= 0xFF - STATUS.IGNORE;\n      }\n      this.buffer.writeUInt8(status, OFFSET.Status);\n    }\n  }, {\n    key: \"isLast\",\n    value: function isLast() {\n      return !!(this.buffer.readUInt8(OFFSET.Status) & STATUS.EOM);\n    }\n  }, {\n    key: \"packetId\",\n    value: function packetId(_packetId) {\n      if (_packetId) {\n        this.buffer.writeUInt8(_packetId % 256, OFFSET.PacketID);\n      }\n      return this.buffer.readUInt8(OFFSET.PacketID);\n    }\n  }, {\n    key: \"addData\",\n    value: function addData(data) {\n      this.buffer = Buffer.concat([this.buffer, data]);\n      this.setLength();\n      return this;\n    }\n  }, {\n    key: \"data\",\n    value: function data() {\n      return this.buffer.slice(HEADER_LENGTH);\n    }\n  }, {\n    key: \"type\",\n    value: function type() {\n      return this.buffer.readUInt8(OFFSET.Type);\n    }\n  }, {\n    key: \"statusAsString\",\n    value: function statusAsString() {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n      var statuses = [];\n      for (var _name in STATUS) {\n        var value = STATUS[_name];\n        if (status & value) {\n          statuses.push(_name);\n        } else {\n          statuses.push(undefined);\n        }\n      }\n      return statuses.join(' ').trim();\n    }\n  }, {\n    key: \"headerToString\",\n    value: function headerToString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var text = (0, _sprintfJs.sprintf)('type:0x%02X(%s), status:0x%02X(%s), length:0x%04X, spid:0x%04X, packetId:0x%02X, window:0x%02X', this.buffer.readUInt8(OFFSET.Type), typeByValue[this.buffer.readUInt8(OFFSET.Type)], this.buffer.readUInt8(OFFSET.Status), this.statusAsString(), this.buffer.readUInt16BE(OFFSET.Length), this.buffer.readUInt16BE(OFFSET.SPID), this.buffer.readUInt8(OFFSET.PacketID), this.buffer.readUInt8(OFFSET.Window));\n      return indent + text;\n    }\n  }, {\n    key: \"dataToString\",\n    value: function dataToString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var BYTES_PER_GROUP = 0x04;\n      var CHARS_PER_GROUP = 0x08;\n      var BYTES_PER_LINE = 0x20;\n      var data = this.data();\n      var dataDump = '';\n      var chars = '';\n      for (var offset = 0; offset < data.length; offset++) {\n        if (offset % BYTES_PER_LINE === 0) {\n          dataDump += indent;\n          dataDump += (0, _sprintfJs.sprintf)('%04X  ', offset);\n        }\n        if (data[offset] < 0x20 || data[offset] > 0x7E) {\n          chars += '.';\n          if ((offset + 1) % CHARS_PER_GROUP === 0 && !((offset + 1) % BYTES_PER_LINE === 0)) {\n            chars += ' ';\n          }\n        } else {\n          chars += String.fromCharCode(data[offset]);\n        }\n        if (data[offset] != null) {\n          dataDump += (0, _sprintfJs.sprintf)('%02X', data[offset]);\n        }\n        if ((offset + 1) % BYTES_PER_GROUP === 0 && !((offset + 1) % BYTES_PER_LINE === 0)) {\n          dataDump += ' ';\n        }\n        if ((offset + 1) % BYTES_PER_LINE === 0) {\n          dataDump += '  ' + chars;\n          chars = '';\n          if (offset < data.length - 1) {\n            dataDump += NL;\n          }\n        }\n      }\n      if (chars.length) {\n        dataDump += '  ' + chars;\n      }\n      return dataDump;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return this.headerToString(indent) + '\\n' + this.dataToString(indent + indent);\n    }\n  }, {\n    key: \"payloadString\",\n    value: function payloadString() {\n      return '';\n    }\n  }]);\n  return Packet;\n}();\nexports.Packet = Packet;\nfunction isPacketComplete(potentialPacketBuffer) {\n  if (potentialPacketBuffer.length < HEADER_LENGTH) {\n    return false;\n  } else {\n    return potentialPacketBuffer.length >= potentialPacketBuffer.readUInt16BE(OFFSET.Length);\n  }\n}\nfunction packetLength(potentialPacketBuffer) {\n  return potentialPacketBuffer.readUInt16BE(OFFSET.Length);\n}","map":{"version":3,"names":["_sprintfJs","require","HEADER_LENGTH","TYPE","SQL_BATCH","RPC_REQUEST","TABULAR_RESULT","ATTENTION","BULK_LOAD","TRANSACTION_MANAGER","LOGIN7","NTLMAUTH_PKT","PRELOGIN","FEDAUTH_TOKEN","typeByValue","name","STATUS","NORMAL","EOM","IGNORE","RESETCONNECTION","RESETCONNECTIONSKIPTRAN","OFFSET","Type","Status","Length","SPID","PacketID","Window","DEFAULT_SPID","DEFAULT_PACKETID","DEFAULT_WINDOW","NL","Packet","typeOrBuffer","_classCallCheck","buffer","Buffer","type","alloc","writeUInt8","writeUInt16BE","setLength","_createClass","key","value","length","readUInt16BE","resetConnection","reset","status","readUInt8","last","arguments","isLast","ignore","packetId","addData","data","concat","slice","statusAsString","statuses","push","undefined","join","trim","headerToString","indent","text","sprintf","dataToString","BYTES_PER_GROUP","CHARS_PER_GROUP","BYTES_PER_LINE","dataDump","chars","offset","String","fromCharCode","toString","payloadString","isPacketComplete","potentialPacketBuffer","packetLength"],"sources":["../src/packet.ts"],"sourcesContent":["import { sprintf } from 'sprintf-js';\n\nexport const HEADER_LENGTH = 8;\n\nexport const TYPE: { [key: string]: number } = {\n  SQL_BATCH: 0x01,\n  RPC_REQUEST: 0x03,\n  TABULAR_RESULT: 0x04,\n  ATTENTION: 0x06,\n  BULK_LOAD: 0x07,\n  TRANSACTION_MANAGER: 0x0E,\n  LOGIN7: 0x10,\n  NTLMAUTH_PKT: 0x11,\n  PRELOGIN: 0x12,\n  FEDAUTH_TOKEN: 0x08\n};\n\nconst typeByValue: { [key: number]: string } = {};\n\nfor (const name in TYPE) {\n  typeByValue[TYPE[name]] = name;\n}\n\nconst STATUS: { [key: string]: number } = {\n  NORMAL: 0x00,\n  EOM: 0x01,\n  IGNORE: 0x02,\n  RESETCONNECTION: 0x08,\n  RESETCONNECTIONSKIPTRAN: 0x10\n};\n\nexport const OFFSET = {\n  Type: 0,\n  Status: 1,\n  Length: 2,\n  SPID: 4,\n  PacketID: 6,\n  Window: 7\n};\n\nconst DEFAULT_SPID = 0;\n\nconst DEFAULT_PACKETID = 1;\n\nconst DEFAULT_WINDOW = 0;\n\nconst NL = '\\n';\n\nexport class Packet {\n  buffer: Buffer;\n\n  constructor(typeOrBuffer: Buffer | number) {\n    if (typeOrBuffer instanceof Buffer) {\n      this.buffer = typeOrBuffer;\n    } else {\n      const type = typeOrBuffer;\n      this.buffer = Buffer.alloc(HEADER_LENGTH, 0);\n      this.buffer.writeUInt8(type, OFFSET.Type);\n      this.buffer.writeUInt8(STATUS.NORMAL, OFFSET.Status);\n      this.buffer.writeUInt16BE(DEFAULT_SPID, OFFSET.SPID);\n      this.buffer.writeUInt8(DEFAULT_PACKETID, OFFSET.PacketID);\n      this.buffer.writeUInt8(DEFAULT_WINDOW, OFFSET.Window);\n      this.setLength();\n    }\n  }\n\n  setLength() {\n    this.buffer.writeUInt16BE(this.buffer.length, OFFSET.Length);\n  }\n\n  length() {\n    return this.buffer.readUInt16BE(OFFSET.Length);\n  }\n\n  resetConnection(reset: boolean) {\n    let status = this.buffer.readUInt8(OFFSET.Status);\n    if (reset) {\n      status |= STATUS.RESETCONNECTION;\n    } else {\n      status &= 0xFF - STATUS.RESETCONNECTION;\n    }\n    this.buffer.writeUInt8(status, OFFSET.Status);\n  }\n\n  last(last?: boolean) {\n    let status = this.buffer.readUInt8(OFFSET.Status);\n    if (arguments.length > 0) {\n      if (last) {\n        status |= STATUS.EOM;\n      } else {\n        status &= 0xFF - STATUS.EOM;\n      }\n      this.buffer.writeUInt8(status, OFFSET.Status);\n    }\n    return this.isLast();\n  }\n\n  ignore(last: boolean) {\n    let status = this.buffer.readUInt8(OFFSET.Status);\n    if (last) {\n      status |= STATUS.IGNORE;\n    } else {\n      status &= 0xFF - STATUS.IGNORE;\n    }\n    this.buffer.writeUInt8(status, OFFSET.Status);\n  }\n\n  isLast() {\n    return !!(this.buffer.readUInt8(OFFSET.Status) & STATUS.EOM);\n  }\n\n  packetId(packetId?: number) {\n    if (packetId) {\n      this.buffer.writeUInt8(packetId % 256, OFFSET.PacketID);\n    }\n    return this.buffer.readUInt8(OFFSET.PacketID);\n  }\n\n  addData(data: Buffer) {\n    this.buffer = Buffer.concat([this.buffer, data]);\n    this.setLength();\n    return this;\n  }\n\n  data() {\n    return this.buffer.slice(HEADER_LENGTH);\n  }\n\n  type() {\n    return this.buffer.readUInt8(OFFSET.Type);\n  }\n\n  statusAsString() {\n    const status = this.buffer.readUInt8(OFFSET.Status);\n    const statuses = [];\n\n    for (const name in STATUS) {\n      const value = STATUS[name];\n\n      if (status & value) {\n        statuses.push(name);\n      } else {\n        statuses.push(undefined);\n      }\n    }\n\n    return statuses.join(' ').trim();\n  }\n\n  headerToString(indent = '') {\n    const text = sprintf('type:0x%02X(%s), status:0x%02X(%s), length:0x%04X, spid:0x%04X, packetId:0x%02X, window:0x%02X', this.buffer.readUInt8(OFFSET.Type), typeByValue[this.buffer.readUInt8(OFFSET.Type)], this.buffer.readUInt8(OFFSET.Status), this.statusAsString(), this.buffer.readUInt16BE(OFFSET.Length), this.buffer.readUInt16BE(OFFSET.SPID), this.buffer.readUInt8(OFFSET.PacketID), this.buffer.readUInt8(OFFSET.Window));\n    return indent + text;\n  }\n\n  dataToString(indent = '') {\n    const BYTES_PER_GROUP = 0x04;\n    const CHARS_PER_GROUP = 0x08;\n    const BYTES_PER_LINE = 0x20;\n    const data = this.data();\n\n    let dataDump = '';\n    let chars = '';\n\n\n    for (let offset = 0; offset < data.length; offset++) {\n      if (offset % BYTES_PER_LINE === 0) {\n        dataDump += indent;\n        dataDump += sprintf('%04X  ', offset);\n      }\n\n      if (data[offset] < 0x20 || data[offset] > 0x7E) {\n        chars += '.';\n        if (((offset + 1) % CHARS_PER_GROUP === 0) && !((offset + 1) % BYTES_PER_LINE === 0)) {\n          chars += ' ';\n        }\n      } else {\n        chars += String.fromCharCode(data[offset]);\n      }\n\n      if (data[offset] != null) {\n        dataDump += sprintf('%02X', data[offset]);\n      }\n\n      if (((offset + 1) % BYTES_PER_GROUP === 0) && !((offset + 1) % BYTES_PER_LINE === 0)) {\n        dataDump += ' ';\n      }\n\n      if ((offset + 1) % BYTES_PER_LINE === 0) {\n        dataDump += '  ' + chars;\n        chars = '';\n        if (offset < data.length - 1) {\n          dataDump += NL;\n        }\n      }\n    }\n\n    if (chars.length) {\n      dataDump += '  ' + chars;\n    }\n\n    return dataDump;\n  }\n\n  toString(indent = '') {\n    return this.headerToString(indent) + '\\n' + this.dataToString(indent + indent);\n  }\n\n  payloadString() {\n    return '';\n  }\n}\n\nexport function isPacketComplete(potentialPacketBuffer: Buffer) {\n  if (potentialPacketBuffer.length < HEADER_LENGTH) {\n    return false;\n  } else {\n    return potentialPacketBuffer.length >= potentialPacketBuffer.readUInt16BE(OFFSET.Length);\n  }\n}\n\nexport function packetLength(potentialPacketBuffer: Buffer) {\n  return potentialPacketBuffer.readUInt16BE(OFFSET.Length);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}