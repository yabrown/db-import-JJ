{"ast":null,"code":"/*! @azure/msal-common v7.6.0 2022-10-10 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { ThrottlingUtils } from './ThrottlingUtils.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar NetworkManager = /** @class */function () {\n  function NetworkManager(networkClient, cacheManager) {\n    this.networkClient = networkClient;\n    this.cacheManager = cacheManager;\n  }\n  /**\r\n   * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n   * @param thumbprint\r\n   * @param tokenEndpoint\r\n   * @param options\r\n   */\n  NetworkManager.prototype.sendPostRequest = function (thumbprint, tokenEndpoint, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, options)];\n          case 2:\n            response = _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _a.sent();\n            if (e_1 instanceof AuthError) {\n              throw e_1;\n            } else {\n              throw ClientAuthError.createNetworkError(tokenEndpoint, e_1);\n            }\n          case 4:\n            ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  return NetworkManager;\n}();\nexport { NetworkManager };","map":{"version":3,"names":["NetworkManager","networkClient","cacheManager","prototype","sendPostRequest","thumbprint","tokenEndpoint","options","ThrottlingUtils","preProcess","sendPostRequestAsync","response","_a","sent","e_1","AuthError","ClientAuthError","createNetworkError","postProcess"],"sources":["../../src/network/NetworkManager.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions } from \"./INetworkModule\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingUtils } from \"./ThrottlingUtils\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { AuthError } from \"../error/AuthError\";\nimport { ClientAuthError } from \"../error/ClientAuthError\";\n\nexport type NetworkResponse<T> = {\n    headers: Record<string, string>;\n    body: T;\n    status: number;\n};\n\nexport class NetworkManager {\n    private networkClient: INetworkModule;\n    private cacheManager: CacheManager;\n\n    constructor(networkClient: INetworkModule, cacheManager: CacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest<T>(thumbprint: RequestThumbprint, tokenEndpoint: string, options: NetworkRequestOptions): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync<T>(tokenEndpoint, options);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw ClientAuthError.createNetworkError(tokenEndpoint, e);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n}\n"],"mappings":";;;;;;;;AAAA;;;AAGG;AAeH,IAAAA,cAAA;EAII,SAAYA,eAAAC,aAA6B,EAAEC,YAA0B;IACjE,IAAI,CAACD,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,YAAY,GAAGA,YAAY;;EAGpC;;;;;AAKG;EACGF,cAAA,CAAAG,SAAA,CAAAC,eAAe,GAArB,UAAyBC,UAA6B,EAAEC,aAAqB,EAAEC,OAA8B;;;;;;YACzGC,eAAe,CAACC,UAAU,CAAC,IAAI,CAACP,YAAY,EAAEG,UAAU,CAAC;;;;YAI1C,OAAM,kBAAI,CAACJ,aAAa,CAACS,oBAAoB,CAAIJ,aAAa,EAAEC,OAAO,CAAC;;YAAnFI,QAAQ,GAAGC,EAAA,CAAAC,IAAA,EAAwE;;;;YAEnF,IAAIC,GAAC,YAAYC,SAAS,EAAE;cACxB,MAAMD,GAAC;YACV,OAAM;cACH,MAAME,eAAe,CAACC,kBAAkB,CAACX,aAAa,EAAEQ,GAAC,CAAC;YAC7D;;YAGLN,eAAe,CAACU,WAAW,CAAC,IAAI,CAAChB,YAAY,EAAEG,UAAU,EAAEM,QAAQ,CAAC;YAEpE,sBAAOA,QAAQ,CAAC;;;;EACnB;EACL,OAACX,cAAA;AAAD,CAAC"},"metadata":{},"sourceType":"module"}