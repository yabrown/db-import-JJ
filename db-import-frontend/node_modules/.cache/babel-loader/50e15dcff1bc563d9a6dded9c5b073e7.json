{"ast":null,"code":"var _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __markAsModule = function __markAsModule(target) {\n  return __defProp(target, \"__esModule\", {\n    value: true\n  });\n};\nvar __export = function __export(target, all) {\n  __markAsModule(target);\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __reExport = function __reExport(target, module2, desc) {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(module2)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(target, key) && key !== \"default\") __defProp(target, key, {\n          get: function get() {\n            return module2[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return target;\n};\nvar __toModule = function __toModule(module2) {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? {\n    get: function get() {\n      return module2.default;\n    },\n    enumerable: true\n  } : {\n    value: module2,\n    enumerable: true\n  })), module2);\n};\n__export(exports, {\n  noBoolOperatorAliases: function noBoolOperatorAliases() {\n    return _noBoolOperatorAliases;\n  },\n  noDoubleNestedGroup: function noDoubleNestedGroup() {\n    return _noDoubleNestedGroup;\n  },\n  noStringOperators: function noStringOperators() {\n    return _noStringOperators;\n  },\n  noTrueLogging: function noTrueLogging() {\n    return _noTrueLogging;\n  },\n  unsupportedEngine: function unsupportedEngine() {\n    return _unsupportedEngine;\n  }\n});\nvar import_util = __toModule(require(\"util\"));\nvar noop = function noop() {};\nvar _noTrueLogging = (0, import_util.deprecate)(noop, \"The logging-option should be either a function or false. Default: console.log\", \"SEQUELIZE0002\");\nvar _noStringOperators = (0, import_util.deprecate)(noop, \"String based operators are deprecated. Please use Symbol based operators for better security, read more at https://sequelize.org/master/manual/querying.html#operators\", \"SEQUELIZE0003\");\nvar _noBoolOperatorAliases = (0, import_util.deprecate)(noop, \"A boolean value was passed to options.operatorsAliases. This is a no-op with v5 and should be removed.\", \"SEQUELIZE0004\");\nvar _noDoubleNestedGroup = (0, import_util.deprecate)(noop, \"Passing a double nested nested array to `group` is unsupported and will be removed in v6.\", \"SEQUELIZE0005\");\nvar _unsupportedEngine = (0, import_util.deprecate)(noop, \"This database engine version is not supported, please update your database server. More information https://github.com/sequelize/sequelize/blob/main/ENGINE.md\", \"SEQUELIZE0006\");","map":{"version":3,"names":["__export","exports","noBoolOperatorAliases","noDoubleNestedGroup","noStringOperators","noTrueLogging","unsupportedEngine","import_util","__toModule","require","noop","deprecate"],"sources":["../../src/utils/deprecations.ts"],"sourcesContent":["import { deprecate } from 'util';\n\nconst noop = () => { /* noop */ };\n\nexport const noTrueLogging = deprecate(noop, 'The logging-option should be either a function or false. Default: console.log', 'SEQUELIZE0002');\nexport const noStringOperators = deprecate(noop, 'String based operators are deprecated. Please use Symbol based operators for better security, read more at https://sequelize.org/master/manual/querying.html#operators', 'SEQUELIZE0003');\nexport const noBoolOperatorAliases = deprecate(noop, 'A boolean value was passed to options.operatorsAliases. This is a no-op with v5 and should be removed.', 'SEQUELIZE0004');\nexport const noDoubleNestedGroup = deprecate(noop, 'Passing a double nested nested array to `group` is unsupported and will be removed in v6.', 'SEQUELIZE0005');\nexport const unsupportedEngine = deprecate(noop, 'This database engine version is not supported, please update your database server. More information https://github.com/sequelize/sequelize/blob/main/ENGINE.md', 'SEQUELIZE0006');\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,QAAA,CAAAC,OAAA;EAAAC,qBAAA,WAAAA,sBAAA;IAAA,OAAAA,sBAAA;EAAA;EAAAC,mBAAA,WAAAA,oBAAA;IAAA,OAAAA,oBAAA;EAAA;EAAAC,iBAAA,WAAAA,kBAAA;IAAA,OAAAA,kBAAA;EAAA;EAAAC,aAAA,WAAAA,cAAA;IAAA,OAAAA,cAAA;EAAA;EAAAC,iBAAA,WAAAA,kBAAA;IAAA,OAAAA,kBAAA;EAAA;AAAA;AAAA,IAAAC,WAAA,GAA0BC,UAAA,CAAAC,OAAA;AAE1B,IAAMC,IAAA,GAAO,SAAPA,KAAA,EAAa;AAEZ,IAAML,cAAA,GAAgB,IAAAE,WAAA,CAAAI,SAAA,EAAUD,IAAA,EAAM,iFAAiF;AACvH,IAAMN,kBAAA,GAAoB,IAAAG,WAAA,CAAAI,SAAA,EAAUD,IAAA,EAAM,0KAA0K;AACpN,IAAMR,sBAAA,GAAwB,IAAAK,WAAA,CAAAI,SAAA,EAAUD,IAAA,EAAM,0GAA0G;AACxJ,IAAMP,oBAAA,GAAsB,IAAAI,WAAA,CAAAI,SAAA,EAAUD,IAAA,EAAM,6FAA6F;AACzI,IAAMJ,kBAAA,GAAoB,IAAAC,WAAA,CAAAI,SAAA,EAAUD,IAAA,EAAM,kKAAkK"},"metadata":{},"sourceType":"script"}