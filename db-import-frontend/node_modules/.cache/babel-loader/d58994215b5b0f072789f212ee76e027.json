{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Minipass = require('minipass');\nvar TYPE = Symbol('type');\nvar BUFFER = Symbol('buffer');\nvar Blob = /*#__PURE__*/function (_Symbol$toStringTag) {\n  function Blob(blobParts, options) {\n    _classCallCheck(this, Blob);\n    this[TYPE] = '';\n    var buffers = [];\n    var size = 0;\n    if (blobParts) {\n      var a = blobParts;\n      var length = Number(a.length);\n      for (var i = 0; i < length; i++) {\n        var element = a[i];\n        var buffer = element instanceof Buffer ? element : ArrayBuffer.isView(element) ? Buffer.from(element.buffer, element.byteOffset, element.byteLength) : element instanceof ArrayBuffer ? Buffer.from(element) : element instanceof Blob ? element[BUFFER] : typeof element === 'string' ? Buffer.from(element) : Buffer.from(String(element));\n        size += buffer.length;\n        buffers.push(buffer);\n      }\n    }\n    this[BUFFER] = Buffer.concat(buffers, size);\n    var type = options && options.type !== undefined && String(options.type).toLowerCase();\n    if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n      this[TYPE] = type;\n    }\n  }\n  _createClass(Blob, [{\n    key: \"size\",\n    get: function get() {\n      return this[BUFFER].length;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this[TYPE];\n    }\n  }, {\n    key: \"text\",\n    value: function text() {\n      return Promise.resolve(this[BUFFER].toString());\n    }\n  }, {\n    key: \"arrayBuffer\",\n    value: function arrayBuffer() {\n      var buf = this[BUFFER];\n      var off = buf.byteOffset;\n      var len = buf.byteLength;\n      var ab = buf.buffer.slice(off, off + len);\n      return Promise.resolve(ab);\n    }\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      return new Minipass().end(this[BUFFER]);\n    }\n  }, {\n    key: \"slice\",\n    value: function slice(start, end, type) {\n      var size = this.size;\n      var relativeStart = start === undefined ? 0 : start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n      var relativeEnd = end === undefined ? size : end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n      var span = Math.max(relativeEnd - relativeStart, 0);\n      var buffer = this[BUFFER];\n      var slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n      var blob = new Blob([], {\n        type: type\n      });\n      blob[BUFFER] = slicedBuffer;\n      return blob;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Blob';\n    }\n  }], [{\n    key: \"BUFFER\",\n    get: function get() {\n      return BUFFER;\n    }\n  }]);\n  return Blob;\n}(Symbol.toStringTag);\nObject.defineProperties(Blob.prototype, {\n  size: {\n    enumerable: true\n  },\n  type: {\n    enumerable: true\n  }\n});\nmodule.exports = Blob;","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","Minipass","TYPE","Symbol","BUFFER","Blob","_Symbol$toStringTag","blobParts","options","buffers","size","a","length","Number","i","element","buffer","Buffer","ArrayBuffer","isView","from","byteOffset","byteLength","String","push","concat","type","undefined","toLowerCase","test","key","get","value","text","Promise","resolve","toString","arrayBuffer","buf","off","len","ab","slice","stream","end","start","relativeStart","Math","max","min","relativeEnd","span","slicedBuffer","blob","toStringTag","Object","defineProperties","prototype","enumerable","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/minipass-fetch/lib/blob.js"],"sourcesContent":["'use strict'\nconst Minipass = require('minipass')\nconst TYPE = Symbol('type')\nconst BUFFER = Symbol('buffer')\n\nclass Blob {\n  constructor (blobParts, options) {\n    this[TYPE] = ''\n\n    const buffers = []\n    let size = 0\n\n    if (blobParts) {\n      const a = blobParts\n      const length = Number(a.length)\n      for (let i = 0; i < length; i++) {\n        const element = a[i]\n        const buffer = element instanceof Buffer ? element\n          : ArrayBuffer.isView(element)\n            ? Buffer.from(element.buffer, element.byteOffset, element.byteLength)\n          : element instanceof ArrayBuffer ? Buffer.from(element)\n          : element instanceof Blob ? element[BUFFER]\n          : typeof element === 'string' ? Buffer.from(element)\n          : Buffer.from(String(element))\n        size += buffer.length\n        buffers.push(buffer)\n      }\n    }\n\n    this[BUFFER] = Buffer.concat(buffers, size)\n\n    const type = options && options.type !== undefined\n      && String(options.type).toLowerCase()\n    if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n      this[TYPE] = type\n    }\n  }\n\n  get size () {\n    return this[BUFFER].length\n  }\n\n  get type () {\n    return this[TYPE]\n  }\n\n  text () {\n    return Promise.resolve(this[BUFFER].toString())\n  }\n\n  arrayBuffer () {\n    const buf = this[BUFFER]\n    const off = buf.byteOffset\n    const len = buf.byteLength\n    const ab = buf.buffer.slice(off, off + len)\n    return Promise.resolve(ab)\n  }\n\n  stream () {\n    return new Minipass().end(this[BUFFER])\n  }\n\n  slice (start, end, type) {\n    const size = this.size\n    const relativeStart = start === undefined ? 0\n      : start < 0 ? Math.max(size + start, 0)\n      : Math.min(start, size)\n    const relativeEnd = end === undefined ? size\n      : end < 0 ? Math.max(size + end, 0)\n      : Math.min(end, size)\n    const span = Math.max(relativeEnd - relativeStart, 0)\n\n    const buffer = this[BUFFER]\n    const slicedBuffer = buffer.slice(\n      relativeStart,\n      relativeStart + span\n    )\n    const blob = new Blob([], { type })\n    blob[BUFFER] = slicedBuffer\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static get BUFFER () {\n    return BUFFER\n  }\n}\n\nObject.defineProperties(Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n})\n\nmodule.exports = Blob\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}