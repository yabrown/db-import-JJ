{"ast":null,"code":"/*! @azure/msal-browser v2.37.0 2023-05-01 */\n'use strict';\n\nimport { Constants } from '@azure/msal-common';\nimport { BrowserStringUtils } from '../utils/BrowserStringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\nvar Base64Encode = /** @class */function () {\n  function Base64Encode() {}\n  /**\r\n   * Returns URL Safe b64 encoded string from a plaintext string.\r\n   * @param input\r\n   */\n  Base64Encode.prototype.urlEncode = function (input) {\n    return encodeURIComponent(this.encode(input).replace(/=/g, Constants.EMPTY_STRING).replace(/\\+/g, \"-\").replace(/\\//g, \"_\"));\n  };\n  /**\r\n   * Returns URL Safe b64 encoded string from an int8Array.\r\n   * @param inputArr\r\n   */\n  Base64Encode.prototype.urlEncodeArr = function (inputArr) {\n    return this.base64EncArr(inputArr).replace(/=/g, Constants.EMPTY_STRING).replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n  };\n  /**\r\n   * Returns b64 encoded string from plaintext string.\r\n   * @param input\r\n   */\n  Base64Encode.prototype.encode = function (input) {\n    var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\n    return this.base64EncArr(inputUtf8Arr);\n  };\n  /**\r\n   * Base64 encode byte array\r\n   * @param aBytes\r\n   */\n  Base64Encode.prototype.base64EncArr = function (aBytes) {\n    var eqLen = (3 - aBytes.length % 3) % 3;\n    var sB64Enc = Constants.EMPTY_STRING;\n    for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n      nMod3 = nIdx % 3;\n      /* Uncomment the following line in order to split the output in lines 76-character long: */\n      /*\r\n       *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n       */\n      nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\n      if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n        sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\n        nUint24 = 0;\n      }\n    }\n    return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\n  };\n  /**\r\n   * Base64 string to array encoding helper\r\n   * @param nUint6\r\n   */\n  Base64Encode.prototype.uint6ToB64 = function (nUint6) {\n    return nUint6 < 26 ? nUint6 + 65 : nUint6 < 52 ? nUint6 + 71 : nUint6 < 62 ? nUint6 - 4 : nUint6 === 62 ? 43 : nUint6 === 63 ? 47 : 65;\n  };\n  return Base64Encode;\n}();\nexport { Base64Encode };","map":{"version":3,"names":["Base64Encode","prototype","urlEncode","input","encodeURIComponent","encode","replace","Constants","EMPTY_STRING","urlEncodeArr","inputArr","base64EncArr","inputUtf8Arr","BrowserStringUtils","stringToUtf8Arr","aBytes","eqLen","length","sB64Enc","nMod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToB64","substring","nUint6"],"sources":["../../src/encode/Base64Encode.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants } from \"@azure/msal-common\";\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Encode {\r\n    \r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input \r\n     */\r\n    urlEncode(input: string): string {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, Constants.EMPTY_STRING)\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    }\r\n\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr \r\n     */\r\n    urlEncodeArr(inputArr: Uint8Array): string {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, Constants.EMPTY_STRING)\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    }\r\n\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input \r\n     */\r\n    encode(input: string): string {\r\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    }\r\n\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes \r\n     */\r\n    private base64EncArr(aBytes: Uint8Array): string {  \r\n        const eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        let sB64Enc = Constants.EMPTY_STRING;\r\n      \r\n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n             */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(\r\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 12 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 6 & 63), \r\n                    this.uint6ToB64(nUint24 & 63)\r\n                );\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6 \r\n     */\r\n    private uint6ToB64 (nUint6: number): number {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n    }\r\n}\r\n"],"mappings":";;;;;;AAAA;;;;AAQA;;;;;EAIA,SAAAA,aAAA,G;;;;;EAMIA,YAAA,CAAAC,SAAA,CAAAC,SAAS,GAAT,UAAUC,KAAa;IACnB,OAAOC,kBAAkB,CAAC,IAAI,CAACC,MAAM,CAACF,KAAK,CAAC,CACvCG,OAAO,CAAC,IAAI,EAAEC,SAAS,CAACC,YAAY,CAAC,CACrCF,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;GAC5B;;;;;EAMDN,YAAA,CAAAC,SAAA,CAAAQ,YAAY,GAAZ,UAAaC,QAAoB;IAC7B,OAAO,IAAI,CAACC,YAAY,CAACD,QAAQ,CAAC,CAC7BJ,OAAO,CAAC,IAAI,EAAEC,SAAS,CAACC,YAAY,CAAC,CACrCF,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;GAC3B;;;;;EAMDN,YAAA,CAAAC,SAAA,CAAAI,MAAM,GAAN,UAAOF,KAAa;IAChB,IAAMS,YAAY,GAAGC,kBAAkB,CAACC,eAAe,CAACX,KAAK,CAAC;IAC9D,OAAO,IAAI,CAACQ,YAAY,CAACC,YAAY,CAAC;GACzC;;;;;EAMOZ,YAAA,CAAAC,SAAA,CAAAU,YAAY,GAApB,UAAqBI,MAAkB;IACnC,IAAMC,KAAK,GAAG,CAAC,CAAC,GAAID,MAAM,CAACE,MAAM,GAAG,CAAE,IAAI,CAAC;IAC3C,IAAIC,OAAO,GAAGX,SAAS,CAACC,YAAY;IAEpC,KAAK,IAAIW,KAAK,WAAEC,IAAI,GAAGL,MAAM,CAACE,MAAM,EAAEI,OAAO,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGF,IAAI,EAAEE,IAAI,EAAE,EAAE;MAC9EH,KAAK,GAAGG,IAAI,GAAG,CAAC;;;;;MAKhBD,OAAO,IAAIN,MAAM,CAACO,IAAI,CAAC,KAAK,EAAE,KAAKH,KAAK,GAAG,EAAE,CAAC;MAC9C,IAAIA,KAAK,KAAK,CAAC,IAAIJ,MAAM,CAACE,MAAM,GAAGK,IAAI,KAAK,CAAC,EAAE;QAC3CJ,OAAO,IAAIK,MAAM,CAACC,YAAY,CAC1B,IAAI,CAACC,UAAU,CAACJ,OAAO,KAAK,EAAE,GAAG,EAAE,CAAC,EACpC,IAAI,CAACI,UAAU,CAACJ,OAAO,KAAK,EAAE,GAAG,EAAE,CAAC,EACpC,IAAI,CAACI,UAAU,CAACJ,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EACnC,IAAI,CAACI,UAAU,CAACJ,OAAO,GAAG,EAAE,CAAC,CAChC;QACDA,OAAO,GAAG,CAAC;;;IAInB,OAAQL,KAAK,KAAK,CAAC,GAAGE,OAAO,GAAGA,OAAO,CAACQ,SAAS,CAAC,CAAC,EAAER,OAAO,CAACD,MAAM,GAAGD,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;GAC5G;;;;;EAMOhB,YAAA,CAAAC,SAAA,CAAAwB,UAAU,GAAlB,UAAoBE,MAAc;IAC9B,OAAOA,MAAM,GAAG,EAAE,GACdA,MAAM,GAAG,EAAE,GACTA,MAAM,GAAG,EAAE,GACTA,MAAM,GAAG,EAAE,GACTA,MAAM,GAAG,EAAE,GACTA,MAAM,GAAG,CAAC,GACRA,MAAM,KAAK,EAAE,GACX,EAAE,GACAA,MAAM,KAAK,EAAE,GACX,EAAE,GAEF,EAAE;GACzB;EACL,OAAA3B,YAAC;AAAD,CAAC"},"metadata":{},"sourceType":"module"}