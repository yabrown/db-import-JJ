{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { deserializationPolicy } from \"./deserializationPolicy\";\nimport { bearerTokenAuthenticationPolicy, createPipelineFromOptions } from \"@azure/core-rest-pipeline\";\nimport { serializationPolicy } from \"./serializationPolicy\";\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var pipeline = createPipelineFromOptions(options !== null && options !== void 0 ? options : {});\n  if (options.credentialOptions) {\n    pipeline.addPolicy(bearerTokenAuthenticationPolicy({\n      credential: options.credentialOptions.credential,\n      scopes: options.credentialOptions.credentialScopes\n    }));\n  }\n  pipeline.addPolicy(serializationPolicy(options.serializationOptions), {\n    phase: \"Serialize\"\n  });\n  pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n    phase: \"Deserialize\"\n  });\n  return pipeline;\n}","map":{"version":3,"names":["deserializationPolicy","bearerTokenAuthenticationPolicy","createPipelineFromOptions","serializationPolicy","createClientPipeline","options","arguments","length","undefined","pipeline","credentialOptions","addPolicy","credential","scopes","credentialScopes","serializationOptions","phase","deserializationOptions"],"sources":["../../src/pipeline.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DeserializationPolicyOptions, deserializationPolicy } from \"./deserializationPolicy\";\nimport {\n  InternalPipelineOptions,\n  Pipeline,\n  bearerTokenAuthenticationPolicy,\n  createPipelineFromOptions,\n} from \"@azure/core-rest-pipeline\";\nimport { SerializationPolicyOptions, serializationPolicy } from \"./serializationPolicy\";\nimport { TokenCredential } from \"@azure/core-auth\";\n\n/**\n * Options for creating a Pipeline to use with ServiceClient.\n * Mostly for customizing the auth policy (if using token auth) or\n * the deserialization options when using XML.\n */\nexport interface InternalClientPipelineOptions extends InternalPipelineOptions {\n  /**\n   * Options to customize bearerTokenAuthenticationPolicy.\n   */\n  credentialOptions?: { credentialScopes: string | string[]; credential: TokenCredential };\n  /**\n   * Options to customize deserializationPolicy.\n   */\n  deserializationOptions?: DeserializationPolicyOptions;\n  /**\n   * Options to customize serializationPolicy.\n   */\n  serializationOptions?: SerializationPolicyOptions;\n}\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline(options: InternalClientPipelineOptions = {}): Pipeline {\n  const pipeline = createPipelineFromOptions(options ?? {});\n  if (options.credentialOptions) {\n    pipeline.addPolicy(\n      bearerTokenAuthenticationPolicy({\n        credential: options.credentialOptions.credential,\n        scopes: options.credentialOptions.credentialScopes,\n      })\n    );\n  }\n\n  pipeline.addPolicy(serializationPolicy(options.serializationOptions), { phase: \"Serialize\" });\n  pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n    phase: \"Deserialize\",\n  });\n\n  return pipeline;\n}\n"],"mappings":"AAAA;AACA;AAEA,SAAuCA,qBAAqB,QAAQ,yBAAyB;AAC7F,SAGEC,+BAA+B,EAC/BC,yBAAyB,QACpB,2BAA2B;AAClC,SAAqCC,mBAAmB,QAAQ,uBAAuB;AAuBvF;;;;;;AAMA,OAAM,SAAUC,oBAAoBA,CAAA,EAA4C;EAAA,IAA3CC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyC,EAAE;EAC9E,IAAMG,QAAQ,GAAGP,yBAAyB,CAACG,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE,CAAC;EACzD,IAAIA,OAAO,CAACK,iBAAiB,EAAE;IAC7BD,QAAQ,CAACE,SAAS,CAChBV,+BAA+B,CAAC;MAC9BW,UAAU,EAAEP,OAAO,CAACK,iBAAiB,CAACE,UAAU;MAChDC,MAAM,EAAER,OAAO,CAACK,iBAAiB,CAACI;KACnC,CAAC,CACH;;EAGHL,QAAQ,CAACE,SAAS,CAACR,mBAAmB,CAACE,OAAO,CAACU,oBAAoB,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAW,CAAE,CAAC;EAC7FP,QAAQ,CAACE,SAAS,CAACX,qBAAqB,CAACK,OAAO,CAACY,sBAAsB,CAAC,EAAE;IACxED,KAAK,EAAE;GACR,CAAC;EAEF,OAAOP,QAAQ;AACjB"},"metadata":{},"sourceType":"module"}