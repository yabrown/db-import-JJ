{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transaction = exports.OPERATION_TYPE = exports.ISOLATION_LEVEL = void 0;\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\nexports.isolationLevelByValue = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar _allHeaders = require(\"./all-headers\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/*\n  s2.2.6.8\n */\nvar OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nvar ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nvar isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\nfor (var name in ISOLATION_LEVEL) {\n  var value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\nfunction assertValidIsolationLevel(isolationLevel, name) {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(\"The \\\"\".concat(name, \"\\\" \").concat(name.includes('.') ? 'property' : 'argument', \" must be of type number. Received type \").concat(typeof isolationLevel, \" (\").concat(isolationLevel, \")\"));\n  }\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(\"The value of \\\"\".concat(name, \"\\\" is out of range. It must be an integer. Received: \").concat(isolationLevel));\n  }\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(\"The value of \\\"\".concat(name, \"\\\" is out of range. It must be >= 0 && <= 5. Received: \").concat(isolationLevel));\n  }\n}\nvar Transaction = /*#__PURE__*/function () {\n  function Transaction(name) {\n    var isolationLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ISOLATION_LEVEL.NO_CHANGE;\n    _classCallCheck(this, Transaction);\n    this.name = void 0;\n    this.isolationLevel = void 0;\n    this.outstandingRequestCount = void 0;\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n  _createClass(Transaction, [{\n    key: \"beginPayload\",\n    value: function beginPayload(txnDescriptor) {\n      var _this = this,\n        _ref;\n      var buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n      buffer.writeUInt8(this.isolationLevel);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2');\n      return _ref = {}, _defineProperty(_ref, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return buffer.data;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })), _defineProperty(_ref, \"toString\", function toString() {\n        return 'Begin Transaction: name=' + _this.name + ', isolationLevel=' + isolationLevelByValue[_this.isolationLevel];\n      }), _ref;\n    }\n  }, {\n    key: \"commitPayload\",\n    value: function commitPayload(txnDescriptor) {\n      var _this2 = this,\n        _ref2;\n      var buffer = new _writableTrackingBuffer.default(100, 'ascii');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n      buffer.writeUInt8(0);\n      return _ref2 = {}, _defineProperty(_ref2, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return buffer.data;\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      })), _defineProperty(_ref2, \"toString\", function toString() {\n        return 'Commit Transaction: name=' + _this2.name;\n      }), _ref2;\n    }\n  }, {\n    key: \"rollbackPayload\",\n    value: function rollbackPayload(txnDescriptor) {\n      var _this3 = this,\n        _ref3;\n      var buffer = new _writableTrackingBuffer.default(100, 'ascii');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n      buffer.writeUInt8(0);\n      return _ref3 = {}, _defineProperty(_ref3, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return buffer.data;\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      })), _defineProperty(_ref3, \"toString\", function toString() {\n        return 'Rollback Transaction: name=' + _this3.name;\n      }), _ref3;\n    }\n  }, {\n    key: \"savePayload\",\n    value: function savePayload(txnDescriptor) {\n      var _this4 = this,\n        _ref4;\n      var buffer = new _writableTrackingBuffer.default(100, 'ascii');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2');\n      return _ref4 = {}, _defineProperty(_ref4, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return buffer.data;\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      })), _defineProperty(_ref4, \"toString\", function toString() {\n        return 'Save Transaction: name=' + _this4.name;\n      }), _ref4;\n    }\n  }, {\n    key: \"isolationLevelToTSQL\",\n    value: function isolationLevelToTSQL() {\n      switch (this.isolationLevel) {\n        case ISOLATION_LEVEL.READ_UNCOMMITTED:\n          return 'READ UNCOMMITTED';\n        case ISOLATION_LEVEL.READ_COMMITTED:\n          return 'READ COMMITTED';\n        case ISOLATION_LEVEL.REPEATABLE_READ:\n          return 'REPEATABLE READ';\n        case ISOLATION_LEVEL.SERIALIZABLE:\n          return 'SERIALIZABLE';\n        case ISOLATION_LEVEL.SNAPSHOT:\n          return 'SNAPSHOT';\n      }\n      return '';\n    }\n  }]);\n  return Transaction;\n}();\nexports.Transaction = Transaction;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","OPERATION_TYPE","TM_GET_DTC_ADDRESS","TM_PROPAGATE_XACT","TM_BEGIN_XACT","TM_PROMOTE_XACT","TM_COMMIT_XACT","TM_ROLLBACK_XACT","TM_SAVE_XACT","ISOLATION_LEVEL","NO_CHANGE","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT","isolationLevelByValue","name","value","assertValidIsolationLevel","isolationLevel","TypeError","concat","includes","Number","isInteger","RangeError","Transaction","arguments","length","undefined","_classCallCheck","outstandingRequestCount","_createClass","key","beginPayload","txnDescriptor","_this","_ref","buffer","default","writeToTrackingBuffer","writeUShort","writeUInt8","writeString","_defineProperty","Symbol","iterator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","data","stop","toString","commitPayload","_this2","_ref2","_callee2","_callee2$","_context2","rollbackPayload","_this3","_ref3","_callee3","_callee3$","_context3","savePayload","_this4","_ref4","_callee4","_callee4$","_context4","isolationLevelToTSQL"],"sources":["../src/transaction.ts"],"sourcesContent":["import WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\nimport { writeToTrackingBuffer } from './all-headers';\n\n/*\n  s2.2.6.8\n */\n\nexport const OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\n\nexport const ISOLATION_LEVEL: { [key: string]: number } = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\n\nexport const isolationLevelByValue: { [key: number]: string } = {};\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\n\nexport function assertValidIsolationLevel(isolationLevel: any, name: string): asserts isolationLevel is 0 | 1 | 2 | 3 | 4 | 5 {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\n  }\n\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\n  }\n\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\n  }\n}\n\nexport class Transaction {\n  name: string;\n  isolationLevel: number;\n  outstandingRequestCount: number;\n\n  constructor(name: string, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n\n  beginPayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ucs2');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n\n  commitPayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ascii');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    // No fBeginXact flag, so no new transaction is started.\n    buffer.writeUInt8(0);\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  rollbackPayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ascii');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    // No fBeginXact flag, so no new transaction is started.\n    buffer.writeUInt8(0);\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  savePayload(txnDescriptor: Buffer) {\n    const buffer = new WritableTrackingBuffer(100, 'ascii');\n    writeToTrackingBuffer(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n    return '';\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}