{"ast":null,"code":"var _require = require('path'),\n  dirname = _require.dirname;\nvar findMade = function findMade(opts, parent) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  // we never want the 'made' return value to be a root directory\n  if (path === parent) return Promise.resolve();\n  return opts.statAsync(parent).then(function (st) {\n    return st.isDirectory() ? path : undefined;\n  },\n  // will fail later\n  function (er) {\n    return er.code === 'ENOENT' ? findMade(opts, dirname(parent), parent) : undefined;\n  });\n};\nvar findMadeSync = function findMadeSync(opts, parent) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  if (path === parent) return undefined;\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined;\n  } catch (er) {\n    return er.code === 'ENOENT' ? findMadeSync(opts, dirname(parent), parent) : undefined;\n  }\n};\nmodule.exports = {\n  findMade: findMade,\n  findMadeSync: findMadeSync\n};","map":{"version":3,"names":["_require","require","dirname","findMade","opts","parent","path","arguments","length","undefined","Promise","resolve","statAsync","then","st","isDirectory","er","code","findMadeSync","statSync","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/tar/node_modules/mkdirp/lib/find-made.js"],"sourcesContent":["const {dirname} = require('path')\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent)\n    return Promise.resolve()\n\n  return opts.statAsync(parent).then(\n    st => st.isDirectory() ? path : undefined, // will fail later\n    er => er.code === 'ENOENT'\n      ? findMade(opts, dirname(parent), parent)\n      : undefined\n  )\n}\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent)\n    return undefined\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    return er.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n\nmodule.exports = {findMade, findMadeSync}\n"],"mappings":"AAAA,IAAAA,QAAA,GAAkBC,OAAO,CAAC,MAAM,CAAC;EAA1BC,OAAO,GAAAF,QAAA,CAAPE,OAAO;AAEd,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI,EAAEC,MAAM,EAAuB;EAAA,IAArBC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;EAC9C;EACA,IAAIH,IAAI,KAAKD,MAAM,EACjB,OAAOK,OAAO,CAACC,OAAO,CAAC,CAAC;EAE1B,OAAOP,IAAI,CAACQ,SAAS,CAACP,MAAM,CAAC,CAACQ,IAAI,CAChC,UAAAC,EAAE;IAAA,OAAIA,EAAE,CAACC,WAAW,CAAC,CAAC,GAAGT,IAAI,GAAGG,SAAS;EAAA;EAAE;EAC3C,UAAAO,EAAE;IAAA,OAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,GACtBd,QAAQ,CAACC,IAAI,EAAEF,OAAO,CAACG,MAAM,CAAC,EAAEA,MAAM,CAAC,GACvCI,SAAS;EAAA,CACf,CAAC;AACH,CAAC;AAED,IAAMS,YAAY,GAAG,SAAfA,YAAYA,CAAId,IAAI,EAAEC,MAAM,EAAuB;EAAA,IAArBC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;EAClD,IAAIH,IAAI,KAAKD,MAAM,EACjB,OAAOI,SAAS;EAElB,IAAI;IACF,OAAOL,IAAI,CAACe,QAAQ,CAACd,MAAM,CAAC,CAACU,WAAW,CAAC,CAAC,GAAGT,IAAI,GAAGG,SAAS;EAC/D,CAAC,CAAC,OAAOO,EAAE,EAAE;IACX,OAAOA,EAAE,CAACC,IAAI,KAAK,QAAQ,GACvBC,YAAY,CAACd,IAAI,EAAEF,OAAO,CAACG,MAAM,CAAC,EAAEA,MAAM,CAAC,GAC3CI,SAAS;EACf;AACF,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAG;EAAClB,QAAQ,EAARA,QAAQ;EAAEe,YAAY,EAAZA;AAAY,CAAC"},"metadata":{},"sourceType":"script"}