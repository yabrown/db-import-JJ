{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar MySQLQueryGenerator = require(\"../mysql/query-generator\");\nvar Utils = require(\"./../../utils\");\nvar MariaDBQueryGenerator = /*#__PURE__*/function (_MySQLQueryGenerator) {\n  _inherits(MariaDBQueryGenerator, _MySQLQueryGenerator);\n  var _super = _createSuper(MariaDBQueryGenerator);\n  function MariaDBQueryGenerator() {\n    _classCallCheck(this, MariaDBQueryGenerator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MariaDBQueryGenerator, [{\n    key: \"createSchema\",\n    value: function createSchema(schema, options) {\n      options = __spreadValues({\n        charset: null,\n        collate: null\n      }, options);\n      return Utils.joinSQLFragments([\"CREATE SCHEMA IF NOT EXISTS\", this.quoteIdentifier(schema), options.charset && \"DEFAULT CHARACTER SET \".concat(this.escape(options.charset)), options.collate && \"DEFAULT COLLATE \".concat(this.escape(options.collate)), \";\"]);\n    }\n  }, {\n    key: \"dropSchema\",\n    value: function dropSchema(schema) {\n      return \"DROP SCHEMA IF EXISTS \".concat(this.quoteIdentifier(schema), \";\");\n    }\n  }, {\n    key: \"showSchemasQuery\",\n    value: function showSchemasQuery(options) {\n      var schemasToSkip = [\"'MYSQL'\", \"'INFORMATION_SCHEMA'\", \"'PERFORMANCE_SCHEMA'\"];\n      if (options.skip && Array.isArray(options.skip) && options.skip.length > 0) {\n        var _iterator2 = _createForOfIteratorHelper(options.skip),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var schemaName = _step2.value;\n            schemasToSkip.push(this.escape(schemaName));\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      return Utils.joinSQLFragments([\"SELECT SCHEMA_NAME as schema_name\", \"FROM INFORMATION_SCHEMA.SCHEMATA\", \"WHERE SCHEMA_NAME NOT IN (\".concat(schemasToSkip.join(\", \"), \")\"), \";\"]);\n    }\n  }, {\n    key: \"showTablesQuery\",\n    value: function showTablesQuery(database) {\n      var query = \"SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'\";\n      if (database) {\n        query += \" AND TABLE_SCHEMA = \".concat(this.escape(database));\n      } else {\n        query += \" AND TABLE_SCHEMA NOT IN ('MYSQL', 'INFORMATION_SCHEMA', 'PERFORMANCE_SCHEMA')\";\n      }\n      return \"\".concat(query, \";\");\n    }\n  }, {\n    key: \"quoteIdentifier\",\n    value: function quoteIdentifier(identifier, force) {\n      return Utils.addTicks(Utils.removeTicks(identifier, \"`\"), \"`\");\n    }\n  }]);\n  return MariaDBQueryGenerator;\n}(MySQLQueryGenerator);\nmodule.exports = MariaDBQueryGenerator;","map":{"version":3,"names":["MySQLQueryGenerator","require","Utils","MariaDBQueryGenerator","_MySQLQueryGenerator","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","createSchema","schema","options","__spreadValues","charset","collate","joinSQLFragments","quoteIdentifier","concat","escape","dropSchema","showSchemasQuery","schemasToSkip","skip","Array","isArray","length","_iterator2","_createForOfIteratorHelper","_step2","s","n","done","schemaName","push","err","e","f","join","showTablesQuery","database","query","identifier","force","addTicks","removeTicks","module","exports"],"sources":["../../../src/dialects/mariadb/query-generator.js"],"sourcesContent":["'use strict';\n\nconst MySQLQueryGenerator = require('../mysql/query-generator');\nconst Utils = require('./../../utils');\n\nclass MariaDBQueryGenerator extends MySQLQueryGenerator {\n  createSchema(schema, options) {\n    options = {\n      charset: null,\n      collate: null,\n      ...options\n    };\n\n    return Utils.joinSQLFragments([\n      'CREATE SCHEMA IF NOT EXISTS',\n      this.quoteIdentifier(schema),\n      options.charset && `DEFAULT CHARACTER SET ${this.escape(options.charset)}`,\n      options.collate && `DEFAULT COLLATE ${this.escape(options.collate)}`,\n      ';'\n    ]);\n  }\n\n  dropSchema(schema) {\n    return `DROP SCHEMA IF EXISTS ${this.quoteIdentifier(schema)};`;\n  }\n\n  showSchemasQuery(options) {\n    const schemasToSkip = [\n      '\\'MYSQL\\'',\n      '\\'INFORMATION_SCHEMA\\'',\n      '\\'PERFORMANCE_SCHEMA\\''\n    ];\n    if (options.skip && Array.isArray(options.skip) && options.skip.length > 0) {\n      for (const schemaName of options.skip) {\n        schemasToSkip.push(this.escape(schemaName));\n      }\n    }\n    return Utils.joinSQLFragments([\n      'SELECT SCHEMA_NAME as schema_name',\n      'FROM INFORMATION_SCHEMA.SCHEMATA',\n      `WHERE SCHEMA_NAME NOT IN (${schemasToSkip.join(', ')})`,\n      ';'\n    ]);\n  }\n\n  showTablesQuery(database) {\n    let query = 'SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = \\'BASE TABLE\\'';\n    if (database) {\n      query += ` AND TABLE_SCHEMA = ${this.escape(database)}`;\n    } else {\n      query += ' AND TABLE_SCHEMA NOT IN (\\'MYSQL\\', \\'INFORMATION_SCHEMA\\', \\'PERFORMANCE_SCHEMA\\')';\n    }\n    return `${query};`;\n  }\n\n  /**\n   * Quote identifier in sql clause\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    return Utils.addTicks(Utils.removeTicks(identifier, '`'), '`');\n  }\n}\n\nmodule.exports = MariaDBQueryGenerator;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,mBAAA,GAAsBC,OAAA,CAAQ;AACpC,IAAMC,KAAA,GAAQD,OAAA,CAAQ;AAAA,IAEtBE,qBAAA,0BAAAC,oBAAA;EAAAC,SAAA,CAAAF,qBAAA,EAAAC,oBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,qBAAA;EAAA,SAAAA,sBAAA;IAAAK,eAAA,OAAAL,qBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,qBAAA;IAAAS,GAAA;IAAAC,KAAA,EACE,SAAAC,aAAaC,MAAA,EAAQC,OAAA,EAAS;MAC5BA,OAAA,GAAUC,cAAA;QACRC,OAAA,EAAS;QACTC,OAAA,EAAS;MAAA,GACNH,OAAA;MAGL,OAAOd,KAAA,CAAMkB,gBAAA,CAAiB,CAC5B,+BACA,KAAKC,eAAA,CAAgBN,MAAA,GACrBC,OAAA,CAAQE,OAAA,6BAAAI,MAAA,CAAoC,KAAKC,MAAA,CAAOP,OAAA,CAAQE,OAAA,IAChEF,OAAA,CAAQG,OAAA,uBAAAG,MAAA,CAA8B,KAAKC,MAAA,CAAOP,OAAA,CAAQG,OAAA,IAC1D;IAAA;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAIJ,SAAAW,WAAWT,MAAA,EAAQ;MACjB,gCAAAO,MAAA,CAAgC,KAAKD,eAAA,CAAgBN,MAAA;IAAA;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAGvD,SAAAY,iBAAiBT,OAAA,EAAS;MACxB,IAAMU,aAAA,GAAgB,CACpB,WACA,wBACA;MAEF,IAAIV,OAAA,CAAQW,IAAA,IAAQC,KAAA,CAAMC,OAAA,CAAQb,OAAA,CAAQW,IAAA,KAASX,OAAA,CAAQW,IAAA,CAAKG,MAAA,GAAS,GAAG;QAAA,IAAAC,UAAA,GAAAC,0BAAA,CACjDhB,OAAA,CAAQW,IAAA;UAAAM,MAAA;QAAA;UAAjC,KAAAF,UAAA,CAAAG,CAAA,MAAAD,MAAA,GAAAF,UAAA,CAAAI,CAAA,IAAAC,IAAA,GAAuC;YAAA,IAA5BC,UAAA,GAAAJ,MAAA,CAAApB,KAAA;YACTa,aAAA,CAAcY,IAAA,CAAK,KAAKf,MAAA,CAAOc,UAAA;UAAA;QAAA,SAAAE,GAAA;UAAAR,UAAA,CAAAS,CAAA,CAAAD,GAAA;QAAA;UAAAR,UAAA,CAAAU,CAAA;QAAA;MAAA;MAGnC,OAAOvC,KAAA,CAAMkB,gBAAA,CAAiB,CAC5B,qCACA,iEAAAE,MAAA,CAC6BI,aAAA,CAAcgB,IAAA,CAAK,aAChD;IAAA;EAAA;IAAA9B,GAAA;IAAAC,KAAA,EAIJ,SAAA8B,gBAAgBC,QAAA,EAAU;MACxB,IAAIC,KAAA,GAAQ;MACZ,IAAID,QAAA,EAAU;QACZC,KAAA,2BAAAvB,MAAA,CAAgC,KAAKC,MAAA,CAAOqB,QAAA;MAAA,OACvC;QACLC,KAAA,IAAS;MAAA;MAEX,UAAAvB,MAAA,CAAUuB,KAAA;IAAA;EAAA;IAAAjC,GAAA;IAAAC,KAAA,EAWZ,SAAAQ,gBAAgByB,UAAA,EAAYC,KAAA,EAAO;MACjC,OAAO7C,KAAA,CAAM8C,QAAA,CAAS9C,KAAA,CAAM+C,WAAA,CAAYH,UAAA,EAAY,MAAM;IAAA;EAAA;EAAA,OAAA3C,qBAAA;AAAA,EA3D1BH,mBAAA;AA+DpCkD,MAAA,CAAOC,OAAA,GAAUhD,qBAAA"},"metadata":{},"sourceType":"script"}