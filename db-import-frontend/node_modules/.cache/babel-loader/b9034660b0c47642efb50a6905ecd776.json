{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { credentialLogger, formatError } from \"../../util/logging\";\nvar BrowserNotSupportedError = new Error(\"ManagedIdentityCredential is not supported in the browser.\");\nvar logger = credentialLogger(\"ManagedIdentityCredential\");\nexport var ManagedIdentityCredential = /*#__PURE__*/function () {\n  function ManagedIdentityCredential() {\n    _classCallCheck(this, ManagedIdentityCredential);\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n  _createClass(ManagedIdentityCredential, [{\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n              throw BrowserNotSupportedError;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function getToken() {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }]);\n  return ManagedIdentityCredential;\n}();","map":{"version":3,"names":["credentialLogger","formatError","BrowserNotSupportedError","Error","logger","ManagedIdentityCredential","_classCallCheck","info","_createClass","key","value","_getToken","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getToken","stop","apply","arguments"],"sources":["../../../../src/credentials/managedIdentityCredential/index.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken, TokenCredential } from \"@azure/core-auth\";\n\nimport { TokenCredentialOptions } from \"../../tokenCredentialOptions\";\nimport { credentialLogger, formatError } from \"../../util/logging\";\n\nconst BrowserNotSupportedError = new Error(\n  \"ManagedIdentityCredential is not supported in the browser.\"\n);\nconst logger = credentialLogger(\"ManagedIdentityCredential\");\n\nexport class ManagedIdentityCredential implements TokenCredential {\n  constructor(clientId: string, options?: TokenCredentialOptions);\n  constructor(options?: TokenCredentialOptions);\n  constructor() {\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n\n  public async getToken(): Promise<AccessToken | null> {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAKA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,oBAAoB;AAElE,IAAMC,wBAAwB,GAAG,IAAIC,KAAK,CACxC,4DAA4D,CAC7D;AACD,IAAMC,MAAM,GAAGJ,gBAAgB,CAAC,2BAA2B,CAAC;AAE5D,WAAaK,yBAAyB;EAGpC,SAAAA,0BAAA;IAAAC,eAAA,OAAAD,yBAAA;IACED,MAAM,CAACG,IAAI,CAACN,WAAW,CAAC,EAAE,EAAEC,wBAAwB,CAAC,CAAC;IACtD,MAAMA,wBAAwB;EAChC;EAACM,YAAA,CAAAH,yBAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,SAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAEM,SAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACLhB,MAAM,CAACiB,QAAQ,CAACd,IAAI,CAACN,WAAW,CAAC,EAAE,EAAEC,wBAAwB,CAAC,CAAC;cAAC,MAC1DA,wBAAwB;YAAA;YAAA;cAAA,OAAAgB,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAP,OAAA;MAAA,CAC/B;MAAA,SAAAM,SAAA;QAAA,OAAAV,SAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,QAAA;IAAA;EAAA;EAAA,OAAAhB,yBAAA;AAAA"},"metadata":{},"sourceType":"module"}