{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar Invoke = require('./Invoke');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-iteratornext\n\nmodule.exports = function IteratorNext(iterator, value) {\n  var result = Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n  if (Type(result) !== 'Object') {\n    throw new $TypeError('iterator next must return an object');\n  }\n  return result;\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","Invoke","Type","module","exports","IteratorNext","iterator","value","result","arguments","length"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/es-abstract/2022/IteratorNext.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Invoke = require('./Invoke');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-iteratornext\n\nmodule.exports = function IteratorNext(iterator, value) {\n\tvar result = Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n\tif (Type(result) !== 'Object') {\n\t\tthrow new $TypeError('iterator next must return an object');\n\t}\n\treturn result;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAa,CAAC;AAE5C,IAAIG,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;;AAE5B;;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACvD,IAAIC,MAAM,GAAGP,MAAM,CAACK,QAAQ,EAAE,MAAM,EAAEG,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAACH,KAAK,CAAC,CAAC;EAC1E,IAAIL,IAAI,CAACM,MAAM,CAAC,KAAK,QAAQ,EAAE;IAC9B,MAAM,IAAIR,UAAU,CAAC,qCAAqC,CAAC;EAC5D;EACA,OAAOQ,MAAM;AACd,CAAC"},"metadata":{},"sourceType":"script"}