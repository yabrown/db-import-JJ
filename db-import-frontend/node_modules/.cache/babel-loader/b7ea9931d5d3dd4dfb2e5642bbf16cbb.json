{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $getProto = require('../helpers/getProto');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/7.0/#sec-ordinarygetprototypeof\n\nmodule.exports = function OrdinaryGetPrototypeOf(O) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: O must be an Object');\n  }\n  if (!$getProto) {\n    throw new $TypeError('This environment does not support fetching prototypes.');\n  }\n  return $getProto(O);\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","$getProto","Type","module","exports","OrdinaryGetPrototypeOf","O"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/es-abstract/2022/OrdinaryGetPrototypeOf.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar $getProto = require('../helpers/getProto');\n\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/7.0/#sec-ordinarygetprototypeof\n\nmodule.exports = function OrdinaryGetPrototypeOf(O) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t}\n\tif (!$getProto) {\n\t\tthrow new $TypeError('This environment does not support fetching prototypes.');\n\t}\n\treturn $getProto(O);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAa,CAAC;AAE5C,IAAIG,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAE9C,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;;AAE5B;;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,sBAAsBA,CAACC,CAAC,EAAE;EACnD,IAAIJ,IAAI,CAACI,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIN,UAAU,CAAC,uCAAuC,CAAC;EAC9D;EACA,IAAI,CAACC,SAAS,EAAE;IACf,MAAM,IAAID,UAAU,CAAC,wDAAwD,CAAC;EAC/E;EACA,OAAOC,SAAS,CAACK,CAAC,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"script"}