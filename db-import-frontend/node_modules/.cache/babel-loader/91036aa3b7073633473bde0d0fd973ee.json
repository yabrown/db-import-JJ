{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BulkLoadPayload = void 0;\nvar _Symbol$asyncIterator;\n_Symbol$asyncIterator = Symbol.asyncIterator;\nvar BulkLoadPayload = /*#__PURE__*/function (_Symbol$asyncIterator2) {\n  function BulkLoadPayload(bulkLoad) {\n    _classCallCheck(this, BulkLoadPayload);\n    this.bulkLoad = void 0;\n    this.iterator = void 0;\n    this.bulkLoad = bulkLoad; // We need to grab the iterator here so that `error` event handlers are set up\n    // as early as possible (and are not potentially lost).\n\n    this.iterator = this.bulkLoad.rowToPacketTransform[Symbol.asyncIterator]();\n  }\n  _createClass(BulkLoadPayload, [{\n    key: _Symbol$asyncIterator2,\n    value: function value() {\n      return this.iterator;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + 'BulkLoad';\n    }\n  }]);\n  return BulkLoadPayload;\n}(_Symbol$asyncIterator);\nexports.BulkLoadPayload = BulkLoadPayload;","map":{"version":3,"names":["Symbol","asyncIterator","BulkLoadPayload","_Symbol$asyncIterator2","bulkLoad","_classCallCheck","iterator","rowToPacketTransform","_createClass","key","value","toString","indent","arguments","length","undefined","_Symbol$asyncIterator"],"sources":["../src/bulk-load-payload.ts"],"sourcesContent":["import BulkLoad from './bulk-load';\n\nexport class BulkLoadPayload implements AsyncIterable<Buffer> {\n  bulkLoad: BulkLoad;\n  iterator: AsyncIterableIterator<Buffer>;\n\n  constructor(bulkLoad: BulkLoad) {\n    this.bulkLoad = bulkLoad;\n\n    // We need to grab the iterator here so that `error` event handlers are set up\n    // as early as possible (and are not potentially lost).\n    this.iterator = this.bulkLoad.rowToPacketTransform[Symbol.asyncIterator]();\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.iterator;\n  }\n\n  toString(indent = '') {\n    return indent + ('BulkLoad');\n  }\n}\n"],"mappings":";;;;;;;;;wBAcGA,MAAM,CAACC,a;IAZGC,eAAN,0BAAAC,sBAAA;EAIL,SAAAD,gBAAYE,QAAD,EAAqB;IAAAC,eAAA,OAAAH,eAAA;IAAA,KAHhCE,QAGgC;IAAA,KAFhCE,QAEgC;IAC9B,KAAKF,QAAL,GAAgBA,QAAhB,CAD8B,CAG9B;IACA;;IACA,KAAKE,QAAL,GAAgB,KAAKF,QAAL,CAAcG,oBAAd,CAAmCP,MAAM,CAACC,aAA1C,GAAhB;EACD;EAAAO,YAAA,CAAAN,eAAA;IAAAO,GAAA,EAAAN,sBAAA;IAAAO,KAAA,EAED,SAAAA,MAAA,EAAyB;MACvB,OAAO,KAAKJ,QAAZ;IACD;EAAA;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAC,SAAA,EAAsB;MAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAV;MACN,OAAOD,MAAM,GAAI,UAAjB;IACD;EAAA;EAAA,OAAAV,eAAA;AAAA,EANDc,qBAAA"},"metadata":{},"sourceType":"script"}