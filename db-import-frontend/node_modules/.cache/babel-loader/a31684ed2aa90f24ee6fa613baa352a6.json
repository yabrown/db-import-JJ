{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.retryAsPromised = exports.TimeoutError = void 0;\nvar TimeoutError = /*#__PURE__*/function (_Error) {\n  _inherits(TimeoutError, _Error);\n  var _super = _createSuper(TimeoutError);\n  function TimeoutError(message, previousError) {\n    var _this;\n    _classCallCheck(this, TimeoutError);\n    _this = _super.call(this, message);\n    _this.name = \"TimeoutError\";\n    _this.previous = previousError;\n    return _this;\n  }\n  return _createClass(TimeoutError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.TimeoutError = TimeoutError;\nfunction matches(match, err) {\n  if (typeof match === 'function') {\n    try {\n      if (err instanceof match) return true;\n    } catch (_) {\n      return !!match(err);\n    }\n  }\n  if (match === err.toString()) return true;\n  if (match === err.message) return true;\n  return match instanceof RegExp && (match.test(err.message) || match.test(err.toString()));\n}\nfunction retryAsPromised(callback, optionsInput) {\n  if (!callback || !optionsInput) {\n    throw new Error('retry-as-promised must be passed a callback and a options set');\n  }\n  optionsInput = typeof optionsInput === \"number\" ? {\n    max: optionsInput\n  } : optionsInput;\n  var options = {\n    $current: \"$current\" in optionsInput ? optionsInput.$current : 1,\n    max: optionsInput.max,\n    timeout: optionsInput.timeout || undefined,\n    match: optionsInput.match ? Array.isArray(optionsInput.match) ? optionsInput.match : [optionsInput.match] : [],\n    backoffBase: optionsInput.backoffBase === undefined ? 100 : optionsInput.backoffBase,\n    backoffExponent: optionsInput.backoffExponent || 1.1,\n    report: optionsInput.report,\n    name: optionsInput.name || callback.name || 'unknown'\n  };\n  if (options.match && !Array.isArray(options.match)) options.match = [options.match];\n  if (options.report) options.report('Trying ' + options.name + ' #' + options.$current + ' at ' + new Date().toLocaleTimeString(), options);\n  return new Promise(function (resolve, reject) {\n    var timeout;\n    var backoffTimeout;\n    var lastError;\n    if (options.timeout) {\n      timeout = setTimeout(function () {\n        if (backoffTimeout) clearTimeout(backoffTimeout);\n        reject(new TimeoutError(options.name + ' timed out', lastError));\n      }, options.timeout);\n    }\n    Promise.resolve(callback({\n      current: options.$current\n    })).then(resolve).then(function () {\n      if (timeout) clearTimeout(timeout);\n      if (backoffTimeout) clearTimeout(backoffTimeout);\n    }).catch(function (err) {\n      if (timeout) clearTimeout(timeout);\n      if (backoffTimeout) clearTimeout(backoffTimeout);\n      lastError = err;\n      if (options.report) options.report(err && err.toString() || err, options, err);\n      // Should not retry if max has been reached\n      var shouldRetry = options.$current < options.max;\n      if (!shouldRetry) return reject(err);\n      shouldRetry = options.match.length === 0 || options.match.some(function (match) {\n        return matches(match, err);\n      });\n      if (!shouldRetry) return reject(err);\n      var retryDelay = options.backoffBase * Math.pow(options.backoffExponent, options.$current - 1);\n      // Do some accounting\n      options.$current++;\n      if (options.report) options.report(\"Retrying \".concat(options.name, \" (\").concat(options.$current, \")\"), options);\n      if (retryDelay) {\n        // Use backoff function to ease retry rate\n        if (options.report) options.report(\"Delaying retry of \".concat(options.name, \" by \").concat(retryDelay), options);\n        backoffTimeout = setTimeout(function () {\n          retryAsPromised(callback, options).then(resolve).catch(reject);\n        }, retryDelay);\n      } else {\n        retryAsPromised(callback, options).then(resolve).catch(reject);\n      }\n    });\n  });\n}\nexports.retryAsPromised = retryAsPromised;\n;\nexports.default = retryAsPromised;","map":{"version":3,"names":["_createClass","require","default","_classCallCheck","_inherits","_createSuper","_wrapNativeSuper","Object","defineProperty","exports","value","retryAsPromised","TimeoutError","_Error","_super","message","previousError","_this","call","name","previous","Error","matches","match","err","_","toString","RegExp","test","callback","optionsInput","max","options","$current","timeout","undefined","Array","isArray","backoffBase","backoffExponent","report","Date","toLocaleTimeString","Promise","resolve","reject","backoffTimeout","lastError","setTimeout","clearTimeout","current","then","catch","shouldRetry","length","some","retryDelay","Math","pow","concat"],"sources":["/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/retry-as-promised/dist/index.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryAsPromised = exports.TimeoutError = void 0;\nclass TimeoutError extends Error {\n    constructor(message, previousError) {\n        super(message);\n        this.name = \"TimeoutError\";\n        this.previous = previousError;\n    }\n}\nexports.TimeoutError = TimeoutError;\nfunction matches(match, err) {\n    if (typeof match === 'function') {\n        try {\n            if (err instanceof match)\n                return true;\n        }\n        catch (_) {\n            return !!match(err);\n        }\n    }\n    if (match === err.toString())\n        return true;\n    if (match === err.message)\n        return true;\n    return match instanceof RegExp\n        && (match.test(err.message) || match.test(err.toString()));\n}\nfunction retryAsPromised(callback, optionsInput) {\n    if (!callback || !optionsInput) {\n        throw new Error('retry-as-promised must be passed a callback and a options set');\n    }\n    optionsInput = (typeof optionsInput === \"number\" ? { max: optionsInput } : optionsInput);\n    const options = {\n        $current: \"$current\" in optionsInput ? optionsInput.$current : 1,\n        max: optionsInput.max,\n        timeout: optionsInput.timeout || undefined,\n        match: optionsInput.match ? Array.isArray(optionsInput.match) ? optionsInput.match : [optionsInput.match] : [],\n        backoffBase: optionsInput.backoffBase === undefined ? 100 : optionsInput.backoffBase,\n        backoffExponent: optionsInput.backoffExponent || 1.1,\n        report: optionsInput.report,\n        name: optionsInput.name || callback.name || 'unknown'\n    };\n    if (options.match && !Array.isArray(options.match))\n        options.match = [options.match];\n    if (options.report)\n        options.report('Trying ' + options.name + ' #' + options.$current + ' at ' + new Date().toLocaleTimeString(), options);\n    return new Promise(function (resolve, reject) {\n        let timeout;\n        let backoffTimeout;\n        let lastError;\n        if (options.timeout) {\n            timeout = setTimeout(function () {\n                if (backoffTimeout)\n                    clearTimeout(backoffTimeout);\n                reject(new TimeoutError(options.name + ' timed out', lastError));\n            }, options.timeout);\n        }\n        Promise.resolve(callback({ current: options.$current }))\n            .then(resolve)\n            .then(function () {\n            if (timeout)\n                clearTimeout(timeout);\n            if (backoffTimeout)\n                clearTimeout(backoffTimeout);\n        })\n            .catch(function (err) {\n            if (timeout)\n                clearTimeout(timeout);\n            if (backoffTimeout)\n                clearTimeout(backoffTimeout);\n            lastError = err;\n            if (options.report)\n                options.report((err && err.toString()) || err, options, err);\n            // Should not retry if max has been reached\n            var shouldRetry = options.$current < options.max;\n            if (!shouldRetry)\n                return reject(err);\n            shouldRetry = options.match.length === 0 || options.match.some(function (match) {\n                return matches(match, err);\n            });\n            if (!shouldRetry)\n                return reject(err);\n            var retryDelay = options.backoffBase * Math.pow(options.backoffExponent, options.$current - 1);\n            // Do some accounting\n            options.$current++;\n            if (options.report)\n                options.report(`Retrying ${options.name} (${options.$current})`, options);\n            if (retryDelay) {\n                // Use backoff function to ease retry rate\n                if (options.report)\n                    options.report(`Delaying retry of ${options.name} by ${retryDelay}`, options);\n                backoffTimeout = setTimeout(function () {\n                    retryAsPromised(callback, options)\n                        .then(resolve)\n                        .catch(reject);\n                }, retryDelay);\n            }\n            else {\n                retryAsPromised(callback, options)\n                    .then(resolve)\n                    .catch(reject);\n            }\n        });\n    });\n}\nexports.retryAsPromised = retryAsPromised;\n;\nexports.default = retryAsPromised;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}