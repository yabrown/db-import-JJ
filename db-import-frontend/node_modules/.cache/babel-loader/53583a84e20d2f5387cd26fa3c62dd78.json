{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require('path'),\n  dirname = _require.dirname,\n  resolve = _require.resolve;\nvar fileURLToPath = require('./file-url-to-path/index.js');\nvar fs = require('../fs.js');\n\n// given a path, find the owner of the nearest parent\nvar find = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n    var resolved, stat;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (process.getuid) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", {});\n        case 2:\n          // fs methods accept URL objects with a scheme of file: so we need to unwrap\n          // those into an actual path string before we can resolve it\n          resolved = path != null && path.href && path.origin ? resolve(fileURLToPath(path)) : resolve(path);\n          _context.prev = 3;\n          _context.next = 6;\n          return fs.lstat(resolved);\n        case 6:\n          stat = _context.sent;\n        case 7:\n          _context.prev = 7;\n          if (!stat) {\n            _context.next = 10;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            uid: stat.uid,\n            gid: stat.gid\n          });\n        case 10:\n          if (!(resolved !== dirname(resolved))) {\n            _context.next = 12;\n            break;\n          }\n          return _context.abrupt(\"return\", find(dirname(resolved)));\n        case 12:\n          return _context.abrupt(\"return\", {});\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3,, 7, 14]]);\n  }));\n  return function find(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// given a path, uid, and gid update the ownership of the path if necessary\nvar update = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(path, uid, gid) {\n    var stat;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(uid === undefined && gid === undefined)) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 2:\n          _context2.prev = 2;\n          _context2.next = 5;\n          return fs.stat(path);\n        case 5:\n          stat = _context2.sent;\n          if (!(uid === stat.uid && gid === stat.gid)) {\n            _context2.next = 8;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 8:\n          _context2.next = 12;\n          break;\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](2);\n        case 12:\n          _context2.prev = 12;\n          _context2.next = 15;\n          return fs.chown(path, uid, gid);\n        case 15:\n          _context2.next = 19;\n          break;\n        case 17:\n          _context2.prev = 17;\n          _context2.t1 = _context2[\"catch\"](12);\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[2, 10], [12, 17]]);\n  }));\n  return function update(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// accepts a `path` and the `owner` property of an options object and normalizes\n// it into an object with numerical `uid` and `gid`\nvar validate = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(path, input) {\n    var uid, gid, owner;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (typeof input === 'string' || typeof input === 'number') {\n            uid = input;\n            gid = input;\n          } else if (input && typeof input === 'object') {\n            uid = input.uid;\n            gid = input.gid;\n          }\n          if (!(uid === 'inherit' || gid === 'inherit')) {\n            _context3.next = 7;\n            break;\n          }\n          _context3.next = 4;\n          return find(path);\n        case 4:\n          owner = _context3.sent;\n          if (uid === 'inherit') {\n            uid = owner.uid;\n          }\n          if (gid === 'inherit') {\n            gid = owner.gid;\n          }\n        case 7:\n          return _context3.abrupt(\"return\", {\n            uid: uid,\n            gid: gid\n          });\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function validate(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  find: find,\n  update: update,\n  validate: validate\n};","map":{"version":3,"names":["_require","require","dirname","resolve","fileURLToPath","fs","find","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","path","resolved","stat","wrap","_callee$","_context","prev","next","process","getuid","abrupt","href","origin","lstat","sent","uid","gid","stop","_x","apply","arguments","update","_ref2","_callee2","_callee2$","_context2","undefined","t0","chown","t1","_x2","_x3","_x4","validate","_ref3","_callee3","input","owner","_callee3$","_context3","_x5","_x6","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/@npmcli/fs/lib/common/owner.js"],"sourcesContent":["const { dirname, resolve } = require('path')\n\nconst fileURLToPath = require('./file-url-to-path/index.js')\nconst fs = require('../fs.js')\n\n// given a path, find the owner of the nearest parent\nconst find = async (path) => {\n  // if we have no getuid, permissions are irrelevant on this platform\n  if (!process.getuid) {\n    return {}\n  }\n\n  // fs methods accept URL objects with a scheme of file: so we need to unwrap\n  // those into an actual path string before we can resolve it\n  const resolved = path != null && path.href && path.origin\n    ? resolve(fileURLToPath(path))\n    : resolve(path)\n\n  let stat\n\n  try {\n    stat = await fs.lstat(resolved)\n  } finally {\n    // if we got a stat, return its contents\n    if (stat) {\n      return { uid: stat.uid, gid: stat.gid }\n    }\n\n    // try the parent directory\n    if (resolved !== dirname(resolved)) {\n      return find(dirname(resolved))\n    }\n\n    // no more parents, never got a stat, just return an empty object\n    return {}\n  }\n}\n\n// given a path, uid, and gid update the ownership of the path if necessary\nconst update = async (path, uid, gid) => {\n  // nothing to update, just exit\n  if (uid === undefined && gid === undefined) {\n    return\n  }\n\n  try {\n    // see if the permissions are already the same, if they are we don't\n    // need to do anything, so return early\n    const stat = await fs.stat(path)\n    if (uid === stat.uid && gid === stat.gid) {\n      return\n    }\n  } catch (err) {}\n\n  try {\n    await fs.chown(path, uid, gid)\n  } catch (err) {}\n}\n\n// accepts a `path` and the `owner` property of an options object and normalizes\n// it into an object with numerical `uid` and `gid`\nconst validate = async (path, input) => {\n  let uid\n  let gid\n\n  if (typeof input === 'string' || typeof input === 'number') {\n    uid = input\n    gid = input\n  } else if (input && typeof input === 'object') {\n    uid = input.uid\n    gid = input.gid\n  }\n\n  if (uid === 'inherit' || gid === 'inherit') {\n    const owner = await find(path)\n    if (uid === 'inherit') {\n      uid = owner.uid\n    }\n\n    if (gid === 'inherit') {\n      gid = owner.gid\n    }\n  }\n\n  return { uid, gid }\n}\n\nmodule.exports = {\n  find,\n  update,\n  validate,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}