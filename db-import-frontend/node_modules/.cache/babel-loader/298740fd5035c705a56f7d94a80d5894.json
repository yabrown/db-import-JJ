{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _assertThisInitialized = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _ = require(\"lodash\");\nvar _require = require(\"../abstract\"),\n  AbstractDialect = _require.AbstractDialect;\nvar _require2 = require(\"./connection-manager\"),\n  OracleConnectionManager = _require2.OracleConnectionManager;\nvar _require3 = require(\"./query\"),\n  OracleQuery = _require3.OracleQuery;\nvar _require4 = require(\"./query-generator\"),\n  OracleQueryGenerator = _require4.OracleQueryGenerator;\nvar DataTypes = require(\"../../data-types\").oracle;\nvar _require5 = require(\"./query-interface\"),\n  OracleQueryInterface = _require5.OracleQueryInterface;\nvar OracleDialect = /*#__PURE__*/function (_AbstractDialect) {\n  _inherits(OracleDialect, _AbstractDialect);\n  var _super = _createSuper(OracleDialect);\n  function OracleDialect(sequelize) {\n    var _this;\n    _classCallCheck(this, OracleDialect);\n    _this = _super.call(this);\n    _this.sequelize = sequelize;\n    _this.connectionManager = new OracleConnectionManager(_assertThisInitialized(_this), sequelize);\n    _this.connectionManager.initPools();\n    _this.queryGenerator = new OracleQueryGenerator({\n      _dialect: _assertThisInitialized(_this),\n      sequelize: sequelize\n    });\n    _this.queryInterface = new OracleQueryInterface(sequelize, _this.queryGenerator);\n    return _this;\n  }\n  return _createClass(OracleDialect);\n}(AbstractDialect);\nOracleDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"VALUES ()\": true,\n  \"LIMIT ON UPDATE\": true,\n  IGNORE: \" IGNORE\",\n  lock: false,\n  forShare: \" IN SHARE MODE\",\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false\n  },\n  constraints: {\n    restrict: false\n  },\n  returnValues: false,\n  returnIntoValues: true,\n  \"ORDER NULLS\": true,\n  schemas: true,\n  updateOnDuplicate: false,\n  indexViaAlter: false,\n  NUMERIC: true,\n  JSON: true,\n  upserts: true,\n  bulkDefault: true,\n  topLevelOrderByRequired: true,\n  GEOMETRY: false\n});\nOracleDialect.prototype.defaultVersion = \"18.0.0\";\nOracleDialect.prototype.Query = OracleQuery;\nOracleDialect.prototype.queryGenerator = OracleQueryGenerator;\nOracleDialect.prototype.DataTypes = DataTypes;\nOracleDialect.prototype.name = \"oracle\";\nOracleDialect.prototype.TICK_CHAR = '\"';\nOracleDialect.prototype.TICK_CHAR_LEFT = OracleDialect.prototype.TICK_CHAR;\nOracleDialect.prototype.TICK_CHAR_RIGHT = OracleDialect.prototype.TICK_CHAR;\nmodule.exports = OracleDialect;","map":{"version":3,"names":["_","require","_require","AbstractDialect","_require2","OracleConnectionManager","_require3","OracleQuery","_require4","OracleQueryGenerator","DataTypes","oracle","_require5","OracleQueryInterface","OracleDialect","_AbstractDialect","_inherits","_super","_createSuper","sequelize","_this","_classCallCheck","call","connectionManager","_assertThisInitialized","initPools","queryGenerator","_dialect","queryInterface","_createClass","prototype","supports","merge","cloneDeep","IGNORE","lock","forShare","index","collate","length","parser","type","using","constraints","restrict","returnValues","returnIntoValues","schemas","updateOnDuplicate","indexViaAlter","NUMERIC","JSON","upserts","bulkDefault","topLevelOrderByRequired","GEOMETRY","defaultVersion","Query","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["../../../src/dialects/oracle/index.js"],"sourcesContent":["// Copyright (c) 2022, Oracle and/or its affiliates. All rights reserved\n\n'use strict';\n\nconst _ = require('lodash');\nconst { AbstractDialect } = require('../abstract');\nconst { OracleConnectionManager } = require('./connection-manager');\nconst { OracleQuery } = require('./query');\nconst { OracleQueryGenerator } = require('./query-generator');\nconst DataTypes = require('../../data-types').oracle;\nconst { OracleQueryInterface } = require('./query-interface');\n\nclass OracleDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new OracleConnectionManager(this, sequelize);\n    this.connectionManager.initPools();\n    this.queryGenerator = new OracleQueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new OracleQueryInterface(sequelize, this.queryGenerator);\n  }\n}\n\nOracleDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'VALUES ()': true,\n  'LIMIT ON UPDATE': true,\n  IGNORE: ' IGNORE',\n  lock: false,\n  forShare: ' IN SHARE MODE',\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false\n  },\n  constraints: {\n    restrict: false\n  },\n  returnValues: false,\n  returnIntoValues: true,\n  'ORDER NULLS': true,\n  schemas: true,\n  updateOnDuplicate: false,\n  indexViaAlter: false,\n  NUMERIC: true,\n  JSON: true,\n  upserts: true,\n  bulkDefault: true,\n  topLevelOrderByRequired: true,\n  GEOMETRY: false\n});\n\nOracleDialect.prototype.defaultVersion = '18.0.0';\nOracleDialect.prototype.Query = OracleQuery;\nOracleDialect.prototype.queryGenerator = OracleQueryGenerator;\nOracleDialect.prototype.DataTypes = DataTypes;\nOracleDialect.prototype.name = 'oracle';\nOracleDialect.prototype.TICK_CHAR = '\"';\nOracleDialect.prototype.TICK_CHAR_LEFT = OracleDialect.prototype.TICK_CHAR;\nOracleDialect.prototype.TICK_CHAR_RIGHT = OracleDialect.prototype.TICK_CHAR;\n\nmodule.exports = OracleDialect;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}