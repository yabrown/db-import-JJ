{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param buffer - Raw binary data.\n * @internal\n */\nexport function bufferToHex(buffer) {\n  var bytes = new Uint8Array(buffer);\n  return Array.prototype.map.call(bytes, byteToHex).join(\"\");\n}\n/**\n * Converts a byte to a hexadecimal string.\n * @param byte - An integer representation of a byte.\n * @internal\n */\nfunction byteToHex(byte) {\n  var hex = byte.toString(16);\n  return hex.length === 2 ? hex : \"0\".concat(hex);\n}","map":{"version":3,"names":["bufferToHex","buffer","bytes","Uint8Array","Array","prototype","map","call","byteToHex","join","byte","hex","toString","length","concat"],"sources":["../../src/hex.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param buffer - Raw binary data.\n * @internal\n */\nexport function bufferToHex(buffer: ArrayBuffer): string {\n  const bytes = new Uint8Array(buffer);\n  return Array.prototype.map.call(bytes, byteToHex).join(\"\");\n}\n\n/**\n * Converts a byte to a hexadecimal string.\n * @param byte - An integer representation of a byte.\n * @internal\n */\nfunction byteToHex(byte: number): string {\n  const hex = byte.toString(16);\n  return hex.length === 2 ? hex : `0${hex}`;\n}\n"],"mappings":"AAAA;AACA;AAEA;;;;;AAKA,OAAM,SAAUA,WAAWA,CAACC,MAAmB;EAC7C,IAAMC,KAAK,GAAG,IAAIC,UAAU,CAACF,MAAM,CAAC;EACpC,OAAOG,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,IAAI,CAACL,KAAK,EAAEM,SAAS,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAC5D;AAEA;;;;;AAKA,SAASD,SAASA,CAACE,IAAY;EAC7B,IAAMC,GAAG,GAAGD,IAAI,CAACE,QAAQ,CAAC,EAAE,CAAC;EAC7B,OAAOD,GAAG,CAACE,MAAM,KAAK,CAAC,GAAGF,GAAG,OAAAG,MAAA,CAAOH,GAAG,CAAE;AAC3C"},"metadata":{},"sourceType":"module"}