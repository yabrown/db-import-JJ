{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errorParser = errorParser;\nexports.infoParser = infoParser;\nvar _token = require(\"./token\");\nfunction parseToken(parser, options, callback) {\n  // length\n  parser.readUInt16LE(function () {\n    parser.readUInt32LE(function (number) {\n      parser.readUInt8(function (state) {\n        parser.readUInt8(function (clazz) {\n          parser.readUsVarChar(function (message) {\n            parser.readBVarChar(function (serverName) {\n              parser.readBVarChar(function (procName) {\n                (options.tdsVersion < '7_2' ? parser.readUInt16LE : parser.readUInt32LE).call(parser, function (lineNumber) {\n                  callback({\n                    'number': number,\n                    'state': state,\n                    'class': clazz,\n                    'message': message,\n                    'serverName': serverName,\n                    'procName': procName,\n                    'lineNumber': lineNumber\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\nfunction infoParser(parser, options, callback) {\n  parseToken(parser, options, function (data) {\n    callback(new _token.InfoMessageToken(data));\n  });\n}\nfunction errorParser(parser, options, callback) {\n  parseToken(parser, options, function (data) {\n    callback(new _token.ErrorMessageToken(data));\n  });\n}","map":{"version":3,"names":["_token","require","parseToken","parser","options","callback","readUInt16LE","readUInt32LE","number","readUInt8","state","clazz","readUsVarChar","message","readBVarChar","serverName","procName","tdsVersion","call","lineNumber","infoParser","data","InfoMessageToken","errorParser","ErrorMessageToken"],"sources":["../../src/token/infoerror-token-parser.ts"],"sourcesContent":["import Parser, { ParserOptions } from './stream-parser';\n\nimport { InfoMessageToken, ErrorMessageToken } from './token';\n\ninterface TokenData {\n  number: number;\n  state: number;\n  class: number;\n  message: string;\n  serverName: string;\n  procName: string;\n  lineNumber: number;\n}\n\nfunction parseToken(parser: Parser, options: ParserOptions, callback: (data: TokenData) => void) {\n  // length\n  parser.readUInt16LE(() => {\n    parser.readUInt32LE((number) => {\n      parser.readUInt8((state) => {\n        parser.readUInt8((clazz) => {\n          parser.readUsVarChar((message) => {\n            parser.readBVarChar((serverName) => {\n              parser.readBVarChar((procName) => {\n                (options.tdsVersion < '7_2' ? parser.readUInt16LE : parser.readUInt32LE).call(parser, (lineNumber: number) => {\n                  callback({\n                    'number': number,\n                    'state': state,\n                    'class': clazz,\n                    'message': message,\n                    'serverName': serverName,\n                    'procName': procName,\n                    'lineNumber': lineNumber\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nexport function infoParser(parser: Parser, options: ParserOptions, callback: (token: InfoMessageToken) => void) {\n  parseToken(parser, options, (data) => {\n    callback(new InfoMessageToken(data));\n  });\n}\n\nexport function errorParser(parser: Parser, options: ParserOptions, callback: (token: ErrorMessageToken) => void) {\n  parseToken(parser, options, (data) => {\n    callback(new ErrorMessageToken(data));\n  });\n}\n"],"mappings":";;;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;AAYA,SAASC,UAATA,CAAoBC,MAApB,EAAoCC,OAApC,EAA4DC,QAA5D,EAAiG;EAC/F;EACAF,MAAM,CAACG,YAAP,CAAoB,YAAM;IACxBH,MAAM,CAACI,YAAP,CAAqB,UAAAC,MAAD,EAAY;MAC9BL,MAAM,CAACM,SAAP,CAAkB,UAAAC,KAAD,EAAW;QAC1BP,MAAM,CAACM,SAAP,CAAkB,UAAAE,KAAD,EAAW;UAC1BR,MAAM,CAACS,aAAP,CAAsB,UAAAC,OAAD,EAAa;YAChCV,MAAM,CAACW,YAAP,CAAqB,UAAAC,UAAD,EAAgB;cAClCZ,MAAM,CAACW,YAAP,CAAqB,UAAAE,QAAD,EAAc;gBAChC,CAACZ,OAAO,CAACa,UAAR,GAAqB,KAArB,GAA6Bd,MAAM,CAACG,YAApC,GAAmDH,MAAM,CAACI,YAA3D,EAAyEW,IAAzE,CAA8Ef,MAA9E,EAAuF,UAAAgB,UAAD,EAAwB;kBAC5Gd,QAAQ,CAAC;oBACP,UAAUG,MADH;oBAEP,SAASE,KAFF;oBAGP,SAASC,KAHF;oBAIP,WAAWE,OAJJ;oBAKP,cAAcE,UALP;oBAMP,YAAYC,QANL;oBAOP,cAAcG;kBAPP,CAAD,CAAR;gBASD,CAVD;cAWD,CAZD;YAaD,CAdD;UAeD,CAhBD;QAiBD,CAlBD;MAmBD,CApBD;IAqBD,CAtBD;EAuBD,CAxBD;AAyBD;AAEM,SAASC,UAATA,CAAoBjB,MAApB,EAAoCC,OAApC,EAA4DC,QAA5D,EAAyG;EAC9GH,UAAU,CAACC,MAAD,EAASC,OAAT,EAAmB,UAAAiB,IAAD,EAAU;IACpChB,QAAQ,CAAC,IAAIL,MAAA,CAAAsB,gBAAJ,CAAqBD,IAArB,CAAD,CAAR;EACD,CAFS,CAAV;AAGD;AAEM,SAASE,WAATA,CAAqBpB,MAArB,EAAqCC,OAArC,EAA6DC,QAA7D,EAA2G;EAChHH,UAAU,CAACC,MAAD,EAASC,OAAT,EAAmB,UAAAiB,IAAD,EAAU;IACpChB,QAAQ,CAAC,IAAIL,MAAA,CAAAwB,iBAAJ,CAAsBH,IAAtB,CAAD,CAAR;EACD,CAFS,CAAV;AAGD"},"metadata":{},"sourceType":"script"}