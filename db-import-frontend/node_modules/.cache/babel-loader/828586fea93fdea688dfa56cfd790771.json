{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\nvar Image = {\n  id: 0x22,\n  type: 'IMAGE',\n  name: 'Image',\n  hasTableName: true,\n  declaration: function declaration() {\n    return 'image';\n  },\n  resolveLength: function resolveLength(parameter) {\n    if (parameter.value != null) {\n      var value = parameter.value; // TODO: Temporary solution. Replace 'any' more with specific type;\n\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter) {\n    var buffer = Buffer.alloc(5);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length, 1);\n    return buffer;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    var buffer = Buffer.alloc(4);\n    buffer.writeInt32LE(parameter.value.length, 0);\n    return buffer;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime().mark(function generateParameterData(parameter, options) {\n    return _regeneratorRuntime().wrap(function generateParameterData$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(parameter.value == null)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 2:\n          _context.next = 4;\n          return parameter.value;\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n    return value;\n  }\n};\nvar _default = Image;\nexports.default = _default;\nmodule.exports = Image;","map":{"version":3,"names":["NULL_LENGTH","Buffer","from","Image","id","type","name","hasTableName","declaration","resolveLength","parameter","value","length","generateTypeInfo","buffer","alloc","writeUInt8","writeInt32LE","generateParameterLength","options","generateParameterData","_regeneratorRuntime","mark","wrap","generateParameterData$","_context","prev","next","abrupt","stop","validate","isBuffer","TypeError","module","exports"],"sources":["../../src/data-types/image.ts"],"sourcesContent":["import { DataType } from '../data-type';\n\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\n\nconst Image: DataType = {\n  id: 0x22,\n  type: 'IMAGE',\n  name: 'Image',\n  hasTableName: true,\n\n  declaration: function() {\n    return 'image';\n  },\n\n  resolveLength: function(parameter) {\n    if (parameter.value != null) {\n      const value = parameter.value as any; // TODO: Temporary solution. Replace 'any' more with specific type;\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    const buffer = Buffer.alloc(5);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length!, 1);\n    return buffer;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const buffer = Buffer.alloc(4);\n    buffer.writeInt32LE(parameter.value.length!, 0);\n    return buffer;\n  },\n\n  * generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    yield parameter.value;\n  },\n\n  validate: function(value): null | Buffer {\n    if (value == null) {\n      return null;\n    }\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n    return value;\n  }\n};\n\nexport default Image;\nmodule.exports = Image;\n"],"mappings":";;;;;;;AAEA,IAAMA,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAZ,CAApB;AAEA,IAAMC,KAAe,GAAG;EACtBC,EAAE,EAAE,IADkB;EAEtBC,IAAI,EAAE,OAFgB;EAGtBC,IAAI,EAAE,OAHgB;EAItBC,YAAY,EAAE,IAJQ;EAMtBC,WAAW,EAAE,SAAAA,YAAA,EAAW;IACtB,OAAO,OAAP;EACD,CARqB;EAUtBC,aAAa,EAAE,SAAAA,cAASC,SAAT,EAAoB;IACjC,IAAIA,SAAS,CAACC,KAAV,IAAmB,IAAvB,EAA6B;MAC3B,IAAMA,KAAK,GAAGD,SAAS,CAACC,KAAxB,CAD2B,CACW;;MACtC,OAAOA,KAAK,CAACC,MAAb;IACD,CAHD,MAGO;MACL,OAAO,CAAC,CAAR;IACD;EACF,CAjBqB;EAmBtBC,gBAAgB,WAAAA,iBAACH,SAAD,EAAY;IAC1B,IAAMI,MAAM,GAAGb,MAAM,CAACc,KAAP,CAAa,CAAb,CAAf;IACAD,MAAM,CAACE,UAAP,CAAkB,KAAKZ,EAAvB,EAA2B,CAA3B;IACAU,MAAM,CAACG,YAAP,CAAoBP,SAAS,CAACE,MAA9B,EAAuC,CAAvC;IACA,OAAOE,MAAP;EACD,CAxBqB;EA0BtBI,uBAAuB,WAAAA,wBAACR,SAAD,EAAYS,OAAZ,EAAqB;IAC1C,IAAIT,SAAS,CAACC,KAAV,IAAmB,IAAvB,EAA6B;MAC3B,OAAOX,WAAP;IACD;IAED,IAAMc,MAAM,GAAGb,MAAM,CAACc,KAAP,CAAa,CAAb,CAAf;IACAD,MAAM,CAACG,YAAP,CAAoBP,SAAS,CAACC,KAAV,CAAgBC,MAApC,EAA6C,CAA7C;IACA,OAAOE,MAAP;EACD,CAlCqB;EAoCpBM,qBAAF,eAAAC,mBAAA,GAAAC,IAAA,UAAAF,sBAAwBV,SAAxB,EAAmCS,OAAnC;IAAA,OAAAE,mBAAA,GAAAE,IAAA,UAAAC,uBAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MACMjB,SAAS,CAACC,KAAV,IAAmB,IAAvB;YAAAc,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA;QAAA;UAAAH,QAAA,CAAAE,IAAA;UAIA,OAAMjB,SAAS,CAACC,KAAhB;QAAA;QAAA;UAAA,OAAAc,QAAA,CAAAI,IAAA;MAAA;IAAA,GAAAT,qBAAA;EAAA;EAGFU,QAAQ,EAAE,SAAAA,SAASnB,KAAT,EAA+B;IACvC,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAO,IAAP;IACD;IACD,IAAI,CAACV,MAAM,CAAC8B,QAAP,CAAgBpB,KAAhB,CAAL,EAA6B;MAC3B,MAAM,IAAIqB,SAAJ,CAAc,iBAAd,CAAN;IACD;IACD,OAAOrB,KAAP;EACD;AApDqB,CAAxB;eAuDeR,K;;AACf8B,MAAM,CAACC,OAAP,GAAiB/B,KAAjB"},"metadata":{},"sourceType":"script"}