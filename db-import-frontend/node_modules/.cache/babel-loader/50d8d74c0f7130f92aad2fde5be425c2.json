{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _toConsumableArray = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar fs = require('graceful-fs');\nvar os = require('os');\nvar tar = require('tar');\nvar path = require('path');\nvar util = require('util');\nvar stream = require('stream');\nvar crypto = require('crypto');\nvar log = require('npmlog');\nvar semver = require('semver');\nvar fetch = require('make-fetch-happen');\nvar processRelease = require('./process-release');\nvar win = process.platform === 'win32';\nvar streamPipeline = util.promisify(stream.pipeline);\n\n/**\n * @param {typeof import('graceful-fs')} fs\n */\nfunction install(_x, _x2, _x3) {\n  return _install.apply(this, arguments);\n}\nfunction _install() {\n  _install = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(fs, gyp, argv) {\n    var release, devDir, installVersionFile, installVersion, ver, go, _go, valid, rollback, _rollback, eaccesFallback, _eaccesFallback;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _eaccesFallback = function _eaccesFallback3() {\n            _eaccesFallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(err) {\n              var noretry, tmpdir, userString;\n              return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    noretry = '--node_gyp_internal_noretry';\n                    if (!(argv.indexOf(noretry) !== -1)) {\n                      _context5.next = 3;\n                      break;\n                    }\n                    throw err;\n                  case 3:\n                    tmpdir = os.tmpdir();\n                    gyp.devDir = path.resolve(tmpdir, '.node-gyp');\n                    userString = '';\n                    try {\n                      // os.userInfo can fail on some systems, it's not critical here\n                      userString = \" (\\\"\".concat(os.userInfo().username, \"\\\")\");\n                    } catch (e) {}\n                    log.warn('EACCES', 'current user%s does not have permission to access the dev dir \"%s\"', userString, devDir);\n                    log.warn('EACCES', 'attempting to reinstall using temporary dev dir \"%s\"', gyp.devDir);\n                    if (process.cwd() === tmpdir) {\n                      log.verbose('tmpdir == cwd', 'automatically will remove dev files after to save disk space');\n                      gyp.todo.push({\n                        name: 'remove',\n                        args: argv\n                      });\n                    }\n                    return _context5.abrupt(\"return\", util.promisify(gyp.commands.install)([noretry].concat(argv)));\n                  case 11:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5);\n            }));\n            return _eaccesFallback.apply(this, arguments);\n          };\n          eaccesFallback = function _eaccesFallback2(_x8) {\n            return _eaccesFallback.apply(this, arguments);\n          };\n          _rollback = function _rollback3() {\n            _rollback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(err) {\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    log.warn('install', 'got an error, rolling back install');\n                    // roll-back the install if anything went wrong\n                    _context4.next = 3;\n                    return util.promisify(gyp.commands.remove)([release.versionDir]);\n                  case 3:\n                    throw err;\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4);\n            }));\n            return _rollback.apply(this, arguments);\n          };\n          rollback = function _rollback2(_x7) {\n            return _rollback.apply(this, arguments);\n          };\n          valid = function _valid(file) {\n            // header files\n            var extname = path.extname(file);\n            return extname === '.h' || extname === '.gypi';\n          };\n          _go = function _go3() {\n            _go = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n              var created, tarPath, extractCount, contentShasums, expectShasums, isValid, res, installVersionPath, k, downloadShasums, _downloadShasums, downloadNodeLib;\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    downloadNodeLib = function _downloadNodeLib() {\n                      log.verbose('on Windows; need to download `' + release.name + '.lib`...');\n                      var archs = ['ia32', 'x64', 'arm64'];\n                      return archs.map( /*#__PURE__*/function () {\n                        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arch) {\n                          var dir, targetLibPath, _release$arch, libUrl, libPath, name, res;\n                          return _regeneratorRuntime().wrap(function _callee$(_context) {\n                            while (1) switch (_context.prev = _context.next) {\n                              case 0:\n                                dir = path.resolve(devDir, arch);\n                                targetLibPath = path.resolve(dir, release.name + '.lib');\n                                _release$arch = release[arch], libUrl = _release$arch.libUrl, libPath = _release$arch.libPath;\n                                name = \"\".concat(arch, \" \").concat(release.name, \".lib\");\n                                log.verbose(name, 'dir', dir);\n                                log.verbose(name, 'url', libUrl);\n                                _context.next = 8;\n                                return fs.promises.mkdir(dir, {\n                                  recursive: true\n                                });\n                              case 8:\n                                log.verbose('streaming', name, 'to:', targetLibPath);\n                                _context.next = 11;\n                                return download(gyp, libUrl);\n                              case 11:\n                                res = _context.sent;\n                                if (!(res.status === 403 || res.status === 404)) {\n                                  _context.next = 17;\n                                  break;\n                                }\n                                if (arch === 'arm64') {\n                                  // Arm64 is a newer platform on Windows and not all node distributions provide it.\n                                  log.verbose(\"\".concat(name, \" was not found in \").concat(libUrl));\n                                } else {\n                                  log.warn(\"\".concat(name, \" was not found in \").concat(libUrl));\n                                }\n                                return _context.abrupt(\"return\");\n                              case 17:\n                                if (!(res.status !== 200)) {\n                                  _context.next = 19;\n                                  break;\n                                }\n                                throw new Error(\"\".concat(res.status, \" status code downloading \").concat(name));\n                              case 19:\n                                return _context.abrupt(\"return\", streamPipeline(res.body, new ShaSum(function (_, checksum) {\n                                  contentShasums[libPath] = checksum;\n                                  log.verbose('content checksum', libPath, checksum);\n                                }), fs.createWriteStream(targetLibPath)));\n                              case 20:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }, _callee);\n                        }));\n                        return function (_x9) {\n                          return _ref.apply(this, arguments);\n                        };\n                      }());\n                    };\n                    _downloadShasums = function _downloadShasums3() {\n                      _downloadShasums = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                        var res, _iterator, _step, line, items, name;\n                        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                          while (1) switch (_context2.prev = _context2.next) {\n                            case 0:\n                              log.verbose('check download content checksum, need to download `SHASUMS256.txt`...');\n                              log.verbose('checksum url', release.shasumsUrl);\n                              _context2.next = 4;\n                              return download(gyp, release.shasumsUrl);\n                            case 4:\n                              res = _context2.sent;\n                              if (!(res.status !== 200)) {\n                                _context2.next = 7;\n                                break;\n                              }\n                              throw new Error(\"\".concat(res.status, \"  status code downloading checksum\"));\n                            case 7:\n                              _context2.t0 = _createForOfIteratorHelper;\n                              _context2.next = 10;\n                              return res.text();\n                            case 10:\n                              _context2.t1 = _context2.sent.trim().split('\\n');\n                              _iterator = (0, _context2.t0)(_context2.t1);\n                              _context2.prev = 12;\n                              _iterator.s();\n                            case 14:\n                              if ((_step = _iterator.n()).done) {\n                                _context2.next = 23;\n                                break;\n                              }\n                              line = _step.value;\n                              items = line.trim().split(/\\s+/);\n                              if (!(items.length !== 2)) {\n                                _context2.next = 19;\n                                break;\n                              }\n                              return _context2.abrupt(\"return\");\n                            case 19:\n                              // 0035d18e2dcf9aad669b1c7c07319e17abfe3762  ./node-v0.11.4.tar.gz\n                              name = items[1].replace(/^\\.\\//, '');\n                              expectShasums[name] = items[0];\n                            case 21:\n                              _context2.next = 14;\n                              break;\n                            case 23:\n                              _context2.next = 28;\n                              break;\n                            case 25:\n                              _context2.prev = 25;\n                              _context2.t2 = _context2[\"catch\"](12);\n                              _iterator.e(_context2.t2);\n                            case 28:\n                              _context2.prev = 28;\n                              _iterator.f();\n                              return _context2.finish(28);\n                            case 31:\n                              log.verbose('checksum data', JSON.stringify(expectShasums));\n                            case 32:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }, _callee2, null, [[12, 25, 28, 31]]);\n                      }));\n                      return _downloadShasums.apply(this, arguments);\n                    };\n                    downloadShasums = function _downloadShasums2() {\n                      return _downloadShasums.apply(this, arguments);\n                    };\n                    isValid = function _isValid(path) {\n                      var isValid = valid(path);\n                      if (isValid) {\n                        log.verbose('extracted file from tarball', path);\n                        extractCount++;\n                      } else {\n                        // invalid\n                        log.silly('ignoring from tarball', path);\n                      }\n                      return isValid;\n                    };\n                    log.verbose('ensuring nodedir is created', devDir);\n\n                    // first create the dir for the node dev files\n                    _context3.prev = 5;\n                    _context3.next = 8;\n                    return fs.promises.mkdir(devDir, {\n                      recursive: true\n                    });\n                  case 8:\n                    created = _context3.sent;\n                    if (created) {\n                      log.verbose('created nodedir', created);\n                    }\n                    _context3.next = 17;\n                    break;\n                  case 12:\n                    _context3.prev = 12;\n                    _context3.t0 = _context3[\"catch\"](5);\n                    if (!(_context3.t0.code === 'EACCES')) {\n                      _context3.next = 16;\n                      break;\n                    }\n                    return _context3.abrupt(\"return\", eaccesFallback(_context3.t0));\n                  case 16:\n                    throw _context3.t0;\n                  case 17:\n                    // now download the node tarball\n                    tarPath = gyp.opts.tarball;\n                    extractCount = 0;\n                    contentShasums = {};\n                    expectShasums = {}; // checks if a file to be extracted from the tarball is valid.\n                    // only .h header files and the gyp files get extracted\n                    if (!tarPath) {\n                      _context3.next = 26;\n                      break;\n                    }\n                    _context3.next = 24;\n                    return tar.extract({\n                      file: tarPath,\n                      strip: 1,\n                      filter: isValid,\n                      cwd: devDir\n                    });\n                  case 24:\n                    _context3.next = 41;\n                    break;\n                  case 26:\n                    _context3.prev = 26;\n                    _context3.next = 29;\n                    return download(gyp, release.tarballUrl);\n                  case 29:\n                    res = _context3.sent;\n                    if (!(res.status !== 200)) {\n                      _context3.next = 32;\n                      break;\n                    }\n                    throw new Error(\"\".concat(res.status, \" response downloading \").concat(release.tarballUrl));\n                  case 32:\n                    _context3.next = 34;\n                    return streamPipeline(res.body,\n                    // content checksum\n                    new ShaSum(function (_, checksum) {\n                      var filename = path.basename(release.tarballUrl).trim();\n                      contentShasums[filename] = checksum;\n                      log.verbose('content checksum', filename, checksum);\n                    }), tar.extract({\n                      strip: 1,\n                      cwd: devDir,\n                      filter: isValid\n                    }));\n                  case 34:\n                    _context3.next = 41;\n                    break;\n                  case 36:\n                    _context3.prev = 36;\n                    _context3.t1 = _context3[\"catch\"](26);\n                    if (!(_context3.t1.code === 'ENOTFOUND')) {\n                      _context3.next = 40;\n                      break;\n                    }\n                    throw new Error('This is most likely not a problem with node-gyp or the package itself and\\n' + 'is related to network connectivity. In most cases you are behind a proxy or have bad \\n' + 'network settings.');\n                  case 40:\n                    throw _context3.t1;\n                  case 41:\n                    if (!(extractCount === 0)) {\n                      _context3.next = 43;\n                      break;\n                    }\n                    throw new Error('There was a fatal problem while downloading/extracting the tarball');\n                  case 43:\n                    log.verbose('tarball', 'done parsing tarball');\n                    installVersionPath = path.resolve(devDir, 'installVersion');\n                    _context3.next = 47;\n                    return Promise.all([].concat(_toConsumableArray(win ? downloadNodeLib() : []), [\n                    // write the \"installVersion\" file\n                    fs.promises.writeFile(installVersionPath, gyp.package.installVersion + '\\n')], _toConsumableArray(!tarPath || win ? [downloadShasums()] : [])));\n                  case 47:\n                    log.verbose('download contents checksum', JSON.stringify(contentShasums));\n                    // check content shasums\n                    _context3.t2 = _regeneratorRuntime().keys(contentShasums);\n                  case 49:\n                    if ((_context3.t3 = _context3.t2()).done) {\n                      _context3.next = 56;\n                      break;\n                    }\n                    k = _context3.t3.value;\n                    log.verbose('validating download checksum for ' + k, '(%s == %s)', contentShasums[k], expectShasums[k]);\n                    if (!(contentShasums[k] !== expectShasums[k])) {\n                      _context3.next = 54;\n                      break;\n                    }\n                    throw new Error(k + ' local checksum ' + contentShasums[k] + ' not match remote ' + expectShasums[k]);\n                  case 54:\n                    _context3.next = 49;\n                    break;\n                  case 56:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3, null, [[5, 12], [26, 36]]);\n            }));\n            return _go.apply(this, arguments);\n          };\n          go = function _go2() {\n            return _go.apply(this, arguments);\n          };\n          release = processRelease(argv, gyp, process.version, process.release); // Determine which node dev files version we are installing\n          log.verbose('install', 'input version string %j', release.version);\n          if (release.semver) {\n            _context6.next = 11;\n            break;\n          }\n          throw new Error('Invalid version number: ' + release.version);\n        case 11:\n          if (!semver.lt(release.version, '0.8.0')) {\n            _context6.next = 13;\n            break;\n          }\n          throw new Error('Minimum target version is `0.8.0` or greater. Got: ' + release.version);\n        case 13:\n          if (!(release.semver.prerelease[0] === 'pre')) {\n            _context6.next = 19;\n            break;\n          }\n          log.verbose('detected \"pre\" node version', release.version);\n          if (gyp.opts.nodedir) {\n            _context6.next = 17;\n            break;\n          }\n          throw new Error('\"pre\" versions of node cannot be installed, use the --nodedir flag instead');\n        case 17:\n          log.verbose('--nodedir flag was passed; skipping install', gyp.opts.nodedir);\n          return _context6.abrupt(\"return\");\n        case 19:\n          // flatten version into String\n          log.verbose('install', 'installing version: %s', release.versionDir);\n\n          // the directory where the dev files will be installed\n          devDir = path.resolve(gyp.devDir, release.versionDir); // If '--ensure' was passed, then don't *always* install the version;\n          // check if it is already installed, and only install when needed\n          if (!gyp.opts.ensure) {\n            _context6.next = 76;\n            break;\n          }\n          log.verbose('install', '--ensure was passed, so won\\'t reinstall if already installed');\n          _context6.prev = 23;\n          _context6.next = 26;\n          return fs.promises.stat(devDir);\n        case 26:\n          _context6.next = 46;\n          break;\n        case 28:\n          _context6.prev = 28;\n          _context6.t0 = _context6[\"catch\"](23);\n          if (!(_context6.t0.code === 'ENOENT')) {\n            _context6.next = 43;\n            break;\n          }\n          log.verbose('install', 'version not already installed, continuing with install', release.version);\n          _context6.prev = 32;\n          _context6.next = 35;\n          return go();\n        case 35:\n          return _context6.abrupt(\"return\", _context6.sent);\n        case 38:\n          _context6.prev = 38;\n          _context6.t1 = _context6[\"catch\"](32);\n          return _context6.abrupt(\"return\", rollback(_context6.t1));\n        case 41:\n          _context6.next = 45;\n          break;\n        case 43:\n          if (!(_context6.t0.code === 'EACCES')) {\n            _context6.next = 45;\n            break;\n          }\n          return _context6.abrupt(\"return\", eaccesFallback(_context6.t0));\n        case 45:\n          throw _context6.t0;\n        case 46:\n          log.verbose('install', 'version is already installed, need to check \"installVersion\"');\n          installVersionFile = path.resolve(devDir, 'installVersion');\n          installVersion = 0;\n          _context6.prev = 49;\n          _context6.next = 52;\n          return fs.promises.readFile(installVersionFile, 'ascii');\n        case 52:\n          ver = _context6.sent;\n          installVersion = parseInt(ver, 10) || 0;\n          _context6.next = 60;\n          break;\n        case 56:\n          _context6.prev = 56;\n          _context6.t2 = _context6[\"catch\"](49);\n          if (!(_context6.t2.code !== 'ENOENT')) {\n            _context6.next = 60;\n            break;\n          }\n          throw _context6.t2;\n        case 60:\n          log.verbose('got \"installVersion\"', installVersion);\n          log.verbose('needs \"installVersion\"', gyp.package.installVersion);\n          if (!(installVersion < gyp.package.installVersion)) {\n            _context6.next = 73;\n            break;\n          }\n          log.verbose('install', 'version is no good; reinstalling');\n          _context6.prev = 64;\n          _context6.next = 67;\n          return go();\n        case 67:\n          return _context6.abrupt(\"return\", _context6.sent);\n        case 70:\n          _context6.prev = 70;\n          _context6.t3 = _context6[\"catch\"](64);\n          return _context6.abrupt(\"return\", rollback(_context6.t3));\n        case 73:\n          log.verbose('install', 'version is good');\n          _context6.next = 85;\n          break;\n        case 76:\n          _context6.prev = 76;\n          _context6.next = 79;\n          return go();\n        case 79:\n          return _context6.abrupt(\"return\", _context6.sent);\n        case 82:\n          _context6.prev = 82;\n          _context6.t4 = _context6[\"catch\"](76);\n          return _context6.abrupt(\"return\", rollback(_context6.t4));\n        case 85:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[23, 28], [32, 38], [49, 56], [64, 70], [76, 82]]);\n  }));\n  return _install.apply(this, arguments);\n}\nvar ShaSum = /*#__PURE__*/function (_stream$Transform) {\n  _inherits(ShaSum, _stream$Transform);\n  var _super = _createSuper(ShaSum);\n  function ShaSum(callback) {\n    var _this;\n    _classCallCheck(this, ShaSum);\n    _this = _super.call(this);\n    _this._callback = callback;\n    _this._digester = crypto.createHash('sha256');\n    return _this;\n  }\n  _createClass(ShaSum, [{\n    key: \"_transform\",\n    value: function _transform(chunk, _, callback) {\n      this._digester.update(chunk);\n      callback(null, chunk);\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush(callback) {\n      this._callback(null, this._digester.digest('hex'));\n      callback();\n    }\n  }]);\n  return ShaSum;\n}(stream.Transform);\nfunction download(_x4, _x5) {\n  return _download.apply(this, arguments);\n}\nfunction _download() {\n  _download = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(gyp, url) {\n    var requestOpts, cafile, res;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          log.http('GET', url);\n          requestOpts = {\n            headers: {\n              'User-Agent': \"node-gyp v\".concat(gyp.version, \" (node \").concat(process.version, \")\"),\n              Connection: 'keep-alive'\n            },\n            proxy: gyp.opts.proxy,\n            noProxy: gyp.opts.noproxy\n          };\n          cafile = gyp.opts.cafile;\n          if (!cafile) {\n            _context7.next = 7;\n            break;\n          }\n          _context7.next = 6;\n          return readCAFile(cafile);\n        case 6:\n          requestOpts.ca = _context7.sent;\n        case 7:\n          _context7.next = 9;\n          return fetch(url, requestOpts);\n        case 9:\n          res = _context7.sent;\n          log.http(res.status, res.url);\n          return _context7.abrupt(\"return\", res);\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _download.apply(this, arguments);\n}\nfunction readCAFile(_x6) {\n  return _readCAFile.apply(this, arguments);\n}\nfunction _readCAFile() {\n  _readCAFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(filename) {\n    var ca, re;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return fs.promises.readFile(filename, 'utf8');\n        case 2:\n          ca = _context8.sent;\n          re = /(-----BEGIN CERTIFICATE-----[\\S\\s]*?-----END CERTIFICATE-----)/g;\n          return _context8.abrupt(\"return\", ca.match(re));\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _readCAFile.apply(this, arguments);\n}\nmodule.exports = function (gyp, argv, callback) {\n  install(fs, gyp, argv).then(callback.bind(undefined, null), callback);\n};\nmodule.exports.test = {\n  download: download,\n  install: install,\n  readCAFile: readCAFile\n};\nmodule.exports.usage = 'Install node development files for the specified node version.';","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","_regeneratorRuntime","_toConsumableArray","_classCallCheck","_createClass","_inherits","_createSuper","_asyncToGenerator","fs","os","tar","path","util","stream","crypto","log","semver","fetch","processRelease","win","process","platform","streamPipeline","promisify","pipeline","install","_x","_x2","_x3","_install","apply","arguments","mark","_callee6","gyp","argv","release","devDir","installVersionFile","installVersion","ver","go","_go","valid","rollback","_rollback","eaccesFallback","_eaccesFallback","wrap","_callee6$","_context6","prev","next","_eaccesFallback3","_callee5","err","noretry","tmpdir","userString","_callee5$","_context5","indexOf","resolve","concat","userInfo","username","e","warn","cwd","verbose","todo","push","name","args","abrupt","commands","stop","_eaccesFallback2","_x8","_rollback3","_callee4","_callee4$","_context4","remove","versionDir","_rollback2","_x7","_valid","file","extname","_go3","_callee3","created","tarPath","extractCount","contentShasums","expectShasums","isValid","res","installVersionPath","k","downloadShasums","_downloadShasums","downloadNodeLib","_callee3$","_context3","_downloadNodeLib","archs","map","_ref","_callee","arch","dir","targetLibPath","_release$arch","libUrl","libPath","_callee$","_context","promises","mkdir","recursive","download","sent","status","Error","body","ShaSum","_","checksum","createWriteStream","_x9","_downloadShasums3","_callee2","_iterator","_step","line","items","_callee2$","_context2","shasumsUrl","t0","text","t1","trim","split","s","n","done","value","length","replace","t2","f","finish","JSON","stringify","_downloadShasums2","_isValid","silly","code","opts","tarball","extract","strip","filter","tarballUrl","filename","basename","Promise","all","writeFile","package","keys","t3","_go2","version","lt","prerelease","nodedir","ensure","stat","readFile","parseInt","t4","_stream$Transform","_super","callback","_this","call","_callback","_digester","createHash","key","_transform","chunk","update","_flush","digest","Transform","_x4","_x5","_download","_callee7","url","requestOpts","cafile","_callee7$","_context7","http","headers","Connection","proxy","noProxy","noproxy","readCAFile","ca","_x6","_readCAFile","_callee8","re","_callee8$","_context8","match","module","exports","then","bind","undefined","test","usage"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/node-gyp/lib/install.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst os = require('os')\nconst tar = require('tar')\nconst path = require('path')\nconst util = require('util')\nconst stream = require('stream')\nconst crypto = require('crypto')\nconst log = require('npmlog')\nconst semver = require('semver')\nconst fetch = require('make-fetch-happen')\nconst processRelease = require('./process-release')\nconst win = process.platform === 'win32'\nconst streamPipeline = util.promisify(stream.pipeline)\n\n/**\n * @param {typeof import('graceful-fs')} fs\n */\n\nasync function install (fs, gyp, argv) {\n  const release = processRelease(argv, gyp, process.version, process.release)\n\n  // Determine which node dev files version we are installing\n  log.verbose('install', 'input version string %j', release.version)\n\n  if (!release.semver) {\n    // could not parse the version string with semver\n    throw new Error('Invalid version number: ' + release.version)\n  }\n\n  if (semver.lt(release.version, '0.8.0')) {\n    throw new Error('Minimum target version is `0.8.0` or greater. Got: ' + release.version)\n  }\n\n  // 0.x.y-pre versions are not published yet and cannot be installed. Bail.\n  if (release.semver.prerelease[0] === 'pre') {\n    log.verbose('detected \"pre\" node version', release.version)\n    if (!gyp.opts.nodedir) {\n      throw new Error('\"pre\" versions of node cannot be installed, use the --nodedir flag instead')\n    }\n    log.verbose('--nodedir flag was passed; skipping install', gyp.opts.nodedir)\n    return\n  }\n\n  // flatten version into String\n  log.verbose('install', 'installing version: %s', release.versionDir)\n\n  // the directory where the dev files will be installed\n  const devDir = path.resolve(gyp.devDir, release.versionDir)\n\n  // If '--ensure' was passed, then don't *always* install the version;\n  // check if it is already installed, and only install when needed\n  if (gyp.opts.ensure) {\n    log.verbose('install', '--ensure was passed, so won\\'t reinstall if already installed')\n    try {\n      await fs.promises.stat(devDir)\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        log.verbose('install', 'version not already installed, continuing with install', release.version)\n        try {\n          return await go()\n        } catch (err) {\n          return rollback(err)\n        }\n      } else if (err.code === 'EACCES') {\n        return eaccesFallback(err)\n      }\n      throw err\n    }\n    log.verbose('install', 'version is already installed, need to check \"installVersion\"')\n    const installVersionFile = path.resolve(devDir, 'installVersion')\n    let installVersion = 0\n    try {\n      const ver = await fs.promises.readFile(installVersionFile, 'ascii')\n      installVersion = parseInt(ver, 10) || 0\n    } catch (err) {\n      if (err.code !== 'ENOENT') {\n        throw err\n      }\n    }\n    log.verbose('got \"installVersion\"', installVersion)\n    log.verbose('needs \"installVersion\"', gyp.package.installVersion)\n    if (installVersion < gyp.package.installVersion) {\n      log.verbose('install', 'version is no good; reinstalling')\n      try {\n        return await go()\n      } catch (err) {\n        return rollback(err)\n      }\n    }\n    log.verbose('install', 'version is good')\n  } else {\n    try {\n      return await go()\n    } catch (err) {\n      return rollback(err)\n    }\n  }\n\n  async function go () {\n    log.verbose('ensuring nodedir is created', devDir)\n\n    // first create the dir for the node dev files\n    try {\n      const created = await fs.promises.mkdir(devDir, { recursive: true })\n\n      if (created) {\n        log.verbose('created nodedir', created)\n      }\n    } catch (err) {\n      if (err.code === 'EACCES') {\n        return eaccesFallback(err)\n      }\n\n      throw err\n    }\n\n    // now download the node tarball\n    const tarPath = gyp.opts.tarball\n    let extractCount = 0\n    const contentShasums = {}\n    const expectShasums = {}\n\n    // checks if a file to be extracted from the tarball is valid.\n    // only .h header files and the gyp files get extracted\n    function isValid (path) {\n      const isValid = valid(path)\n      if (isValid) {\n        log.verbose('extracted file from tarball', path)\n        extractCount++\n      } else {\n        // invalid\n        log.silly('ignoring from tarball', path)\n      }\n      return isValid\n    }\n\n    // download the tarball and extract!\n\n    if (tarPath) {\n      await tar.extract({\n        file: tarPath,\n        strip: 1,\n        filter: isValid,\n        cwd: devDir\n      })\n    } else {\n      try {\n        const res = await download(gyp, release.tarballUrl)\n\n        if (res.status !== 200) {\n          throw new Error(`${res.status} response downloading ${release.tarballUrl}`)\n        }\n\n        await streamPipeline(\n          res.body,\n          // content checksum\n          new ShaSum((_, checksum) => {\n            const filename = path.basename(release.tarballUrl).trim()\n            contentShasums[filename] = checksum\n            log.verbose('content checksum', filename, checksum)\n          }),\n          tar.extract({\n            strip: 1,\n            cwd: devDir,\n            filter: isValid\n          })\n        )\n      } catch (err) {\n        // something went wrong downloading the tarball?\n        if (err.code === 'ENOTFOUND') {\n          throw new Error('This is most likely not a problem with node-gyp or the package itself and\\n' +\n            'is related to network connectivity. In most cases you are behind a proxy or have bad \\n' +\n            'network settings.')\n        }\n        throw err\n      }\n    }\n\n    // invoked after the tarball has finished being extracted\n    if (extractCount === 0) {\n      throw new Error('There was a fatal problem while downloading/extracting the tarball')\n    }\n\n    log.verbose('tarball', 'done parsing tarball')\n\n    const installVersionPath = path.resolve(devDir, 'installVersion')\n    await Promise.all([\n      // need to download node.lib\n      ...(win ? downloadNodeLib() : []),\n      // write the \"installVersion\" file\n      fs.promises.writeFile(installVersionPath, gyp.package.installVersion + '\\n'),\n      // Only download SHASUMS.txt if we downloaded something in need of SHA verification\n      ...(!tarPath || win ? [downloadShasums()] : [])\n    ])\n\n    log.verbose('download contents checksum', JSON.stringify(contentShasums))\n    // check content shasums\n    for (const k in contentShasums) {\n      log.verbose('validating download checksum for ' + k, '(%s == %s)', contentShasums[k], expectShasums[k])\n      if (contentShasums[k] !== expectShasums[k]) {\n        throw new Error(k + ' local checksum ' + contentShasums[k] + ' not match remote ' + expectShasums[k])\n      }\n    }\n\n    async function downloadShasums () {\n      log.verbose('check download content checksum, need to download `SHASUMS256.txt`...')\n      log.verbose('checksum url', release.shasumsUrl)\n\n      const res = await download(gyp, release.shasumsUrl)\n\n      if (res.status !== 200) {\n        throw new Error(`${res.status}  status code downloading checksum`)\n      }\n\n      for (const line of (await res.text()).trim().split('\\n')) {\n        const items = line.trim().split(/\\s+/)\n        if (items.length !== 2) {\n          return\n        }\n\n        // 0035d18e2dcf9aad669b1c7c07319e17abfe3762  ./node-v0.11.4.tar.gz\n        const name = items[1].replace(/^\\.\\//, '')\n        expectShasums[name] = items[0]\n      }\n\n      log.verbose('checksum data', JSON.stringify(expectShasums))\n    }\n\n    function downloadNodeLib () {\n      log.verbose('on Windows; need to download `' + release.name + '.lib`...')\n      const archs = ['ia32', 'x64', 'arm64']\n      return archs.map(async (arch) => {\n        const dir = path.resolve(devDir, arch)\n        const targetLibPath = path.resolve(dir, release.name + '.lib')\n        const { libUrl, libPath } = release[arch]\n        const name = `${arch} ${release.name}.lib`\n        log.verbose(name, 'dir', dir)\n        log.verbose(name, 'url', libUrl)\n\n        await fs.promises.mkdir(dir, { recursive: true })\n        log.verbose('streaming', name, 'to:', targetLibPath)\n\n        const res = await download(gyp, libUrl)\n\n        if (res.status === 403 || res.status === 404) {\n          if (arch === 'arm64') {\n            // Arm64 is a newer platform on Windows and not all node distributions provide it.\n            log.verbose(`${name} was not found in ${libUrl}`)\n          } else {\n            log.warn(`${name} was not found in ${libUrl}`)\n          }\n          return\n        } else if (res.status !== 200) {\n          throw new Error(`${res.status} status code downloading ${name}`)\n        }\n\n        return streamPipeline(\n          res.body,\n          new ShaSum((_, checksum) => {\n            contentShasums[libPath] = checksum\n            log.verbose('content checksum', libPath, checksum)\n          }),\n          fs.createWriteStream(targetLibPath)\n        )\n      })\n    } // downloadNodeLib()\n  } // go()\n\n  /**\n   * Checks if a given filename is \"valid\" for this installation.\n   */\n\n  function valid (file) {\n    // header files\n    const extname = path.extname(file)\n    return extname === '.h' || extname === '.gypi'\n  }\n\n  async function rollback (err) {\n    log.warn('install', 'got an error, rolling back install')\n    // roll-back the install if anything went wrong\n    await util.promisify(gyp.commands.remove)([release.versionDir])\n    throw err\n  }\n\n  /**\n   * The EACCES fallback is a workaround for npm's `sudo` behavior, where\n   * it drops the permissions before invoking any child processes (like\n   * node-gyp). So what happens is the \"nobody\" user doesn't have\n   * permission to create the dev dir. As a fallback, make the tmpdir() be\n   * the dev dir for this installation. This is not ideal, but at least\n   * the compilation will succeed...\n   */\n\n  async function eaccesFallback (err) {\n    const noretry = '--node_gyp_internal_noretry'\n    if (argv.indexOf(noretry) !== -1) {\n      throw err\n    }\n    const tmpdir = os.tmpdir()\n    gyp.devDir = path.resolve(tmpdir, '.node-gyp')\n    let userString = ''\n    try {\n      // os.userInfo can fail on some systems, it's not critical here\n      userString = ` (\"${os.userInfo().username}\")`\n    } catch (e) {}\n    log.warn('EACCES', 'current user%s does not have permission to access the dev dir \"%s\"', userString, devDir)\n    log.warn('EACCES', 'attempting to reinstall using temporary dev dir \"%s\"', gyp.devDir)\n    if (process.cwd() === tmpdir) {\n      log.verbose('tmpdir == cwd', 'automatically will remove dev files after to save disk space')\n      gyp.todo.push({ name: 'remove', args: argv })\n    }\n    return util.promisify(gyp.commands.install)([noretry].concat(argv))\n  }\n}\n\nclass ShaSum extends stream.Transform {\n  constructor (callback) {\n    super()\n    this._callback = callback\n    this._digester = crypto.createHash('sha256')\n  }\n\n  _transform (chunk, _, callback) {\n    this._digester.update(chunk)\n    callback(null, chunk)\n  }\n\n  _flush (callback) {\n    this._callback(null, this._digester.digest('hex'))\n    callback()\n  }\n}\n\nasync function download (gyp, url) {\n  log.http('GET', url)\n\n  const requestOpts = {\n    headers: {\n      'User-Agent': `node-gyp v${gyp.version} (node ${process.version})`,\n      Connection: 'keep-alive'\n    },\n    proxy: gyp.opts.proxy,\n    noProxy: gyp.opts.noproxy\n  }\n\n  const cafile = gyp.opts.cafile\n  if (cafile) {\n    requestOpts.ca = await readCAFile(cafile)\n  }\n\n  const res = await fetch(url, requestOpts)\n  log.http(res.status, res.url)\n\n  return res\n}\n\nasync function readCAFile (filename) {\n  // The CA file can contain multiple certificates so split on certificate\n  // boundaries.  [\\S\\s]*? is used to match everything including newlines.\n  const ca = await fs.promises.readFile(filename, 'utf8')\n  const re = /(-----BEGIN CERTIFICATE-----[\\S\\s]*?-----END CERTIFICATE-----)/g\n  return ca.match(re)\n}\n\nmodule.exports = function (gyp, argv, callback) {\n  install(fs, gyp, argv).then(callback.bind(undefined, null), callback)\n}\nmodule.exports.test = {\n  download,\n  install,\n  readCAFile\n}\nmodule.exports.usage = 'Install node development files for the specified node version.'\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}