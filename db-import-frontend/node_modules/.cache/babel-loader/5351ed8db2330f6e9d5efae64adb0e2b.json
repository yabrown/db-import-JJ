{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/db-import-frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _moneyn = _interopRequireDefault(require(\"./moneyn\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nvar SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\nvar NULL_LENGTH = Buffer.from([0x00]);\nvar DATA_LENGTH = Buffer.from([0x08]);\nvar Money = {\n  id: 0x3C,\n  type: 'MONEY',\n  name: 'Money',\n  declaration: function declaration() {\n    return 'money';\n  },\n  generateTypeInfo: function generateTypeInfo() {\n    return Buffer.from([_moneyn.default.id, 0x08]);\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n    return DATA_LENGTH;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime().mark(function generateParameterData(parameter, options) {\n    var value, buffer;\n    return _regeneratorRuntime().wrap(function generateParameterData$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(parameter.value == null)) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 2:\n          value = parameter.value * 10000;\n          buffer = Buffer.alloc(8);\n          buffer.writeInt32LE(Math.floor(value * SHIFT_RIGHT_32), 0);\n          buffer.writeInt32LE(value & -1, 4);\n          _context.next = 8;\n          return buffer;\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n    value = parseFloat(value);\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n    return value;\n  }\n};\nvar _default = Money;\nexports.default = _default;\nmodule.exports = Money;","map":{"version":3,"names":["_moneyn","_interopRequireDefault","require","SHIFT_LEFT_32","SHIFT_RIGHT_32","NULL_LENGTH","Buffer","from","DATA_LENGTH","Money","id","type","name","declaration","generateTypeInfo","default","generateParameterLength","parameter","options","value","generateParameterData","_regeneratorRuntime","mark","buffer","wrap","generateParameterData$","_context","prev","next","abrupt","alloc","writeInt32LE","Math","floor","stop","validate","parseFloat","isNaN","TypeError","module","exports"],"sources":["../../src/data-types/money.ts"],"sourcesContent":["import { DataType } from '../data-type';\nimport MoneyN from './moneyn';\n\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst DATA_LENGTH = Buffer.from([0x08]);\n\nconst Money: DataType = {\n  id: 0x3C,\n  type: 'MONEY',\n  name: 'Money',\n\n  declaration: function() {\n    return 'money';\n  },\n\n  generateTypeInfo: function() {\n    return Buffer.from([MoneyN.id, 0x08]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n\n  * generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const value = parameter.value * 10000;\n\n    const buffer = Buffer.alloc(8);\n    buffer.writeInt32LE(Math.floor(value * SHIFT_RIGHT_32), 0);\n    buffer.writeInt32LE(value & -1, 4);\n    yield buffer;\n  },\n\n  validate: function(value): number | null {\n    if (value == null) {\n      return null;\n    }\n    value = parseFloat(value);\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n    return value;\n  }\n};\n\nexport default Money;\nmodule.exports = Money;\n"],"mappings":";;;;;;;AACA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;;;;;;AAEA,IAAMC,aAAa,GAAG,CAAC,KAAK,EAAN,KAAa,KAAK,EAAlB,CAAtB;AACA,IAAMC,cAAc,GAAG,IAAID,aAA3B;AAEA,IAAME,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AACA,IAAMC,WAAW,GAAGF,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AAEA,IAAME,KAAe,GAAG;EACtBC,EAAE,EAAE,IADkB;EAEtBC,IAAI,EAAE,OAFgB;EAGtBC,IAAI,EAAE,OAHgB;EAKtBC,WAAW,EAAE,SAAAA,YAAA,EAAW;IACtB,OAAO,OAAP;EACD,CAPqB;EAStBC,gBAAgB,EAAE,SAAAA,iBAAA,EAAW;IAC3B,OAAOR,MAAM,CAACC,IAAP,CAAY,CAACP,OAAA,CAAAe,OAAA,CAAOL,EAAR,EAAY,IAAZ,CAAZ,CAAP;EACD,CAXqB;EAatBM,uBAAuB,WAAAA,wBAACC,SAAD,EAAYC,OAAZ,EAAqB;IAC1C,IAAID,SAAS,CAACE,KAAV,IAAmB,IAAvB,EAA6B;MAC3B,OAAOd,WAAP;IACD;IAED,OAAOG,WAAP;EACD,CAnBqB;EAqBpBY,qBAAF,eAAAC,mBAAA,GAAAC,IAAA,UAAAF,sBAAwBH,SAAxB,EAAmCC,OAAnC;IAAA,IAAAC,KAAA,EAAAI,MAAA;IAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,uBAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MACMX,SAAS,CAACE,KAAV,IAAmB,IAAvB;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA;QAAA;UAIMV,KAAK,GAAGF,SAAS,CAACE,KAAV,GAAkB,KAAhC;UAEMI,MAAM,GAAGjB,MAAM,CAACwB,KAAP,CAAa,CAAb,CAAf;UACAP,MAAM,CAACQ,YAAP,CAAoBC,IAAI,CAACC,KAAL,CAAWd,KAAK,GAAGf,cAAnB,CAApB,EAAwD,CAAxD;UACAmB,MAAM,CAACQ,YAAP,CAAoBZ,KAAK,GAAG,CAAC,CAA7B,EAAgC,CAAhC;UAAAO,QAAA,CAAAE,IAAA;UACA,OAAML,MAAN;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAd,qBAAA;EAAA;EAGFe,QAAQ,EAAE,SAAAA,SAAShB,KAAT,EAA+B;IACvC,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAO,IAAP;IACD;IACDA,KAAK,GAAGiB,UAAU,CAACjB,KAAD,CAAlB;IACA,IAAIkB,KAAK,CAAClB,KAAD,CAAT,EAAkB;MAChB,MAAM,IAAImB,SAAJ,CAAc,iBAAd,CAAN;IACD;IACD,OAAOnB,KAAP;EACD;AA3CqB,CAAxB;eA8CeV,K;;AACf8B,MAAM,CAACC,OAAP,GAAiB/B,KAAjB"},"metadata":{},"sourceType":"script"}