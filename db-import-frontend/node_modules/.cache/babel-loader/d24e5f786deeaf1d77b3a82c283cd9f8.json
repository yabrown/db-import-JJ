{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * @internal\n */\nexport var multiTenantADFSErrorMessage = \"A new tenant Id can't be assigned through the GetTokenOptions when a credential has been originally configured to use the tenant `adfs`.\";\n/**\n * Of getToken contains a tenantId, this functions allows picking this tenantId as the appropriate for authentication,\n * unless multitenant authentication has been disabled through the AZURE_IDENTITY_DISABLE_MULTITENANTAUTH (on Node.js),\n * or unless the original tenant Id is `adfs`.\n * @internal\n */\nexport function processMultiTenantRequest(tenantId, getTokenOptions) {\n  if (!(getTokenOptions === null || getTokenOptions === void 0 ? void 0 : getTokenOptions.tenantId)) {\n    return tenantId;\n  }\n  if (tenantId === \"adfs\") {\n    throw new Error(multiTenantADFSErrorMessage);\n  }\n  return getTokenOptions === null || getTokenOptions === void 0 ? void 0 : getTokenOptions.tenantId;\n}","map":{"version":3,"names":["multiTenantADFSErrorMessage","processMultiTenantRequest","tenantId","getTokenOptions","Error"],"sources":["../../../src/util/validateMultiTenant.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { GetTokenOptions } from \"@azure/core-auth\";\n\n/**\n * @internal\n */\nexport const multiTenantADFSErrorMessage =\n  \"A new tenant Id can't be assigned through the GetTokenOptions when a credential has been originally configured to use the tenant `adfs`.\";\n\n/**\n * Of getToken contains a tenantId, this functions allows picking this tenantId as the appropriate for authentication,\n * unless multitenant authentication has been disabled through the AZURE_IDENTITY_DISABLE_MULTITENANTAUTH (on Node.js),\n * or unless the original tenant Id is `adfs`.\n * @internal\n */\nexport function processMultiTenantRequest(\n  tenantId?: string,\n  getTokenOptions?: GetTokenOptions\n): string | undefined {\n  if (!getTokenOptions?.tenantId) {\n    return tenantId;\n  }\n  if (tenantId === \"adfs\") {\n    throw new Error(multiTenantADFSErrorMessage);\n  }\n  return getTokenOptions?.tenantId;\n}\n"],"mappings":"AAAA;AACA;AAIA;;;AAGA,OAAO,IAAMA,2BAA2B,GACtC,0IAA0I;AAE5I;;;;;;AAMA,OAAM,SAAUC,yBAAyBA,CACvCC,QAAiB,EACjBC,eAAiC;EAEjC,IAAI,EAACA,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAED,QAAQ,GAAE;IAC9B,OAAOA,QAAQ;;EAEjB,IAAIA,QAAQ,KAAK,MAAM,EAAE;IACvB,MAAM,IAAIE,KAAK,CAACJ,2BAA2B,CAAC;;EAE9C,OAAOG,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAED,QAAQ;AAClC"},"metadata":{},"sourceType":"module"}