{"ast":null,"code":"module.exports = WktParser;\nvar Types = require('./types');\nvar Point = require('./point');\nfunction WktParser(value) {\n  this.value = value;\n  this.position = 0;\n}\nWktParser.prototype.match = function (tokens) {\n  this.skipWhitespaces();\n  for (var i = 0; i < tokens.length; i++) {\n    if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\n      this.position += tokens[i].length;\n      return tokens[i];\n    }\n  }\n  return null;\n};\nWktParser.prototype.matchRegex = function (tokens) {\n  this.skipWhitespaces();\n  for (var i = 0; i < tokens.length; i++) {\n    var match = this.value.substring(this.position).match(tokens[i]);\n    if (match) {\n      this.position += match[0].length;\n      return match;\n    }\n  }\n  return null;\n};\nWktParser.prototype.isMatch = function (tokens) {\n  this.skipWhitespaces();\n  for (var i = 0; i < tokens.length; i++) {\n    if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\n      this.position += tokens[i].length;\n      return true;\n    }\n  }\n  return false;\n};\nWktParser.prototype.matchType = function () {\n  var geometryType = this.match([Types.wkt.Point, Types.wkt.LineString, Types.wkt.Polygon, Types.wkt.MultiPoint, Types.wkt.MultiLineString, Types.wkt.MultiPolygon, Types.wkt.GeometryCollection]);\n  if (!geometryType) throw new Error('Expected geometry type');\n  return geometryType;\n};\nWktParser.prototype.matchDimension = function () {\n  var dimension = this.match(['ZM', 'Z', 'M']);\n  switch (dimension) {\n    case 'ZM':\n      return {\n        hasZ: true,\n        hasM: true\n      };\n    case 'Z':\n      return {\n        hasZ: true,\n        hasM: false\n      };\n    case 'M':\n      return {\n        hasZ: false,\n        hasM: true\n      };\n    default:\n      return {\n        hasZ: false,\n        hasM: false\n      };\n  }\n};\nWktParser.prototype.expectGroupStart = function () {\n  if (!this.isMatch(['('])) throw new Error('Expected group start');\n};\nWktParser.prototype.expectGroupEnd = function () {\n  if (!this.isMatch([')'])) throw new Error('Expected group end');\n};\nWktParser.prototype.matchCoordinate = function (options) {\n  var match;\n  if (options.hasZ && options.hasM) match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);else if (options.hasZ || options.hasM) match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);else match = this.matchRegex([/^(\\S*)\\s+([^\\s,)]*)/]);\n  if (!match) throw new Error('Expected coordinates');\n  if (options.hasZ && options.hasM) return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]), parseFloat(match[4]));else if (options.hasZ) return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]));else if (options.hasM) return new Point(parseFloat(match[1]), parseFloat(match[2]), undefined, parseFloat(match[3]));else return new Point(parseFloat(match[1]), parseFloat(match[2]));\n};\nWktParser.prototype.matchCoordinates = function (options) {\n  var coordinates = [];\n  do {\n    var startsWithBracket = this.isMatch(['(']);\n    coordinates.push(this.matchCoordinate(options));\n    if (startsWithBracket) this.expectGroupEnd();\n  } while (this.isMatch([',']));\n  return coordinates;\n};\nWktParser.prototype.skipWhitespaces = function () {\n  while (this.position < this.value.length && this.value[this.position] === ' ') this.position++;\n};","map":{"version":3,"names":["module","exports","WktParser","Types","require","Point","value","position","prototype","match","tokens","skipWhitespaces","i","length","substring","indexOf","matchRegex","isMatch","matchType","geometryType","wkt","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","Error","matchDimension","dimension","hasZ","hasM","expectGroupStart","expectGroupEnd","matchCoordinate","options","parseFloat","undefined","matchCoordinates","coordinates","startsWithBracket","push"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/wkx/lib/wktparser.js"],"sourcesContent":["module.exports = WktParser;\r\n\r\nvar Types = require('./types');\r\nvar Point = require('./point');\r\n\r\nfunction WktParser(value) {\r\n    this.value = value;\r\n    this.position = 0;\r\n}\r\n\r\nWktParser.prototype.match = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\r\n            this.position += tokens[i].length;\r\n            return tokens[i];\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nWktParser.prototype.matchRegex = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        var match = this.value.substring(this.position).match(tokens[i]);\r\n\r\n        if (match) {\r\n            this.position += match[0].length;\r\n            return match;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nWktParser.prototype.isMatch = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\r\n            this.position += tokens[i].length;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nWktParser.prototype.matchType = function () {\r\n    var geometryType = this.match([Types.wkt.Point, Types.wkt.LineString, Types.wkt.Polygon, Types.wkt.MultiPoint,\r\n    Types.wkt.MultiLineString, Types.wkt.MultiPolygon, Types.wkt.GeometryCollection]);\r\n\r\n    if (!geometryType)\r\n        throw new Error('Expected geometry type');\r\n\r\n    return geometryType;\r\n};\r\n\r\nWktParser.prototype.matchDimension = function () {\r\n    var dimension = this.match(['ZM', 'Z', 'M']);\r\n\r\n    switch (dimension) {\r\n        case 'ZM': return { hasZ: true, hasM: true };\r\n        case 'Z': return { hasZ: true, hasM: false };\r\n        case 'M': return { hasZ: false, hasM: true };\r\n        default: return { hasZ: false, hasM: false };\r\n    }\r\n};\r\n\r\nWktParser.prototype.expectGroupStart = function () {\r\n    if (!this.isMatch(['(']))\r\n        throw new Error('Expected group start');\r\n};\r\n\r\nWktParser.prototype.expectGroupEnd = function () {\r\n    if (!this.isMatch([')']))\r\n        throw new Error('Expected group end');\r\n};\r\n\r\nWktParser.prototype.matchCoordinate = function (options) {\r\n    var match;\r\n\r\n    if (options.hasZ && options.hasM)\r\n        match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);\r\n    else if (options.hasZ || options.hasM)\r\n        match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);\r\n    else\r\n        match = this.matchRegex([/^(\\S*)\\s+([^\\s,)]*)/]);\r\n\r\n    if (!match)\r\n        throw new Error('Expected coordinates');\r\n\r\n    if (options.hasZ && options.hasM)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]), parseFloat(match[4]));\r\n    else if (options.hasZ)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]));\r\n    else if (options.hasM)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), undefined, parseFloat(match[3]));\r\n    else\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]));\r\n};\r\n\r\nWktParser.prototype.matchCoordinates = function (options) {\r\n    var coordinates = [];\r\n\r\n    do {\r\n        var startsWithBracket = this.isMatch(['(']);\r\n\r\n        coordinates.push(this.matchCoordinate(options));\r\n\r\n        if (startsWithBracket)\r\n            this.expectGroupEnd();\r\n    } while (this.isMatch([',']));\r\n\r\n    return coordinates;\r\n};\r\n\r\nWktParser.prototype.skipWhitespaces = function () {\r\n    while (this.position < this.value.length && this.value[this.position] === ' ')\r\n        this.position++;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}