{"ast":null,"code":"'use strict';\n\n// XXX: This shares a lot in common with extract.js\n// maybe some DRY opportunity here?\n\n// tar -t\nvar hlo = require('./high-level-opt.js');\nvar Parser = require('./parse.js');\nvar fs = require('fs');\nvar fsm = require('fs-minipass');\nvar path = require('path');\nvar stripSlash = require('./strip-trailing-slashes.js');\nmodule.exports = function (opt_, files, cb) {\n  if (typeof opt_ === 'function') {\n    cb = opt_, files = null, opt_ = {};\n  } else if (Array.isArray(opt_)) {\n    files = opt_, opt_ = {};\n  }\n  if (typeof files === 'function') {\n    cb = files, files = null;\n  }\n  if (!files) {\n    files = [];\n  } else {\n    files = Array.from(files);\n  }\n  var opt = hlo(opt_);\n  if (opt.sync && typeof cb === 'function') {\n    throw new TypeError('callback not supported for sync tar functions');\n  }\n  if (!opt.file && typeof cb === 'function') {\n    throw new TypeError('callback only supported with file option');\n  }\n  if (files.length) {\n    filesFilter(opt, files);\n  }\n  if (!opt.noResume) {\n    onentryFunction(opt);\n  }\n  return opt.file && opt.sync ? listFileSync(opt) : opt.file ? listFile(opt, cb) : list(opt);\n};\nvar onentryFunction = function onentryFunction(opt) {\n  var onentry = opt.onentry;\n  opt.onentry = onentry ? function (e) {\n    onentry(e);\n    e.resume();\n  } : function (e) {\n    return e.resume();\n  };\n};\n\n// construct a filter that limits the file entries listed\n// include child entries if a dir is included\nvar filesFilter = function filesFilter(opt, files) {\n  var map = new Map(files.map(function (f) {\n    return [stripSlash(f), true];\n  }));\n  var filter = opt.filter;\n  var mapHas = function mapHas(file, r) {\n    var root = r || path.parse(file).root || '.';\n    var ret = file === root ? false : map.has(file) ? map.get(file) : mapHas(path.dirname(file), root);\n    map.set(file, ret);\n    return ret;\n  };\n  opt.filter = filter ? function (file, entry) {\n    return filter(file, entry) && mapHas(stripSlash(file));\n  } : function (file) {\n    return mapHas(stripSlash(file));\n  };\n};\nvar listFileSync = function listFileSync(opt) {\n  var p = list(opt);\n  var file = opt.file;\n  var threw = true;\n  var fd;\n  try {\n    var stat = fs.statSync(file);\n    var readSize = opt.maxReadSize || 16 * 1024 * 1024;\n    if (stat.size < readSize) {\n      p.end(fs.readFileSync(file));\n    } else {\n      var pos = 0;\n      var buf = Buffer.allocUnsafe(readSize);\n      fd = fs.openSync(file, 'r');\n      while (pos < stat.size) {\n        var bytesRead = fs.readSync(fd, buf, 0, readSize, pos);\n        pos += bytesRead;\n        p.write(buf.slice(0, bytesRead));\n      }\n      p.end();\n    }\n    threw = false;\n  } finally {\n    if (threw && fd) {\n      try {\n        fs.closeSync(fd);\n      } catch (er) {}\n    }\n  }\n};\nvar listFile = function listFile(opt, cb) {\n  var parse = new Parser(opt);\n  var readSize = opt.maxReadSize || 16 * 1024 * 1024;\n  var file = opt.file;\n  var p = new Promise(function (resolve, reject) {\n    parse.on('error', reject);\n    parse.on('end', resolve);\n    fs.stat(file, function (er, stat) {\n      if (er) {\n        reject(er);\n      } else {\n        var stream = new fsm.ReadStream(file, {\n          readSize: readSize,\n          size: stat.size\n        });\n        stream.on('error', reject);\n        stream.pipe(parse);\n      }\n    });\n  });\n  return cb ? p.then(cb, cb) : p;\n};\nvar list = function list(opt) {\n  return new Parser(opt);\n};","map":{"version":3,"names":["hlo","require","Parser","fs","fsm","path","stripSlash","module","exports","opt_","files","cb","Array","isArray","from","opt","sync","TypeError","file","length","filesFilter","noResume","onentryFunction","listFileSync","listFile","list","onentry","e","resume","map","Map","f","filter","mapHas","r","root","parse","ret","has","get","dirname","set","entry","p","threw","fd","stat","statSync","readSize","maxReadSize","size","end","readFileSync","pos","buf","Buffer","allocUnsafe","openSync","bytesRead","readSync","write","slice","closeSync","er","Promise","resolve","reject","on","stream","ReadStream","pipe","then"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/tar/lib/list.js"],"sourcesContent":["'use strict'\n\n// XXX: This shares a lot in common with extract.js\n// maybe some DRY opportunity here?\n\n// tar -t\nconst hlo = require('./high-level-opt.js')\nconst Parser = require('./parse.js')\nconst fs = require('fs')\nconst fsm = require('fs-minipass')\nconst path = require('path')\nconst stripSlash = require('./strip-trailing-slashes.js')\n\nmodule.exports = (opt_, files, cb) => {\n  if (typeof opt_ === 'function') {\n    cb = opt_, files = null, opt_ = {}\n  } else if (Array.isArray(opt_)) {\n    files = opt_, opt_ = {}\n  }\n\n  if (typeof files === 'function') {\n    cb = files, files = null\n  }\n\n  if (!files) {\n    files = []\n  } else {\n    files = Array.from(files)\n  }\n\n  const opt = hlo(opt_)\n\n  if (opt.sync && typeof cb === 'function') {\n    throw new TypeError('callback not supported for sync tar functions')\n  }\n\n  if (!opt.file && typeof cb === 'function') {\n    throw new TypeError('callback only supported with file option')\n  }\n\n  if (files.length) {\n    filesFilter(opt, files)\n  }\n\n  if (!opt.noResume) {\n    onentryFunction(opt)\n  }\n\n  return opt.file && opt.sync ? listFileSync(opt)\n    : opt.file ? listFile(opt, cb)\n    : list(opt)\n}\n\nconst onentryFunction = opt => {\n  const onentry = opt.onentry\n  opt.onentry = onentry ? e => {\n    onentry(e)\n    e.resume()\n  } : e => e.resume()\n}\n\n// construct a filter that limits the file entries listed\n// include child entries if a dir is included\nconst filesFilter = (opt, files) => {\n  const map = new Map(files.map(f => [stripSlash(f), true]))\n  const filter = opt.filter\n\n  const mapHas = (file, r) => {\n    const root = r || path.parse(file).root || '.'\n    const ret = file === root ? false\n      : map.has(file) ? map.get(file)\n      : mapHas(path.dirname(file), root)\n\n    map.set(file, ret)\n    return ret\n  }\n\n  opt.filter = filter\n    ? (file, entry) => filter(file, entry) && mapHas(stripSlash(file))\n    : file => mapHas(stripSlash(file))\n}\n\nconst listFileSync = opt => {\n  const p = list(opt)\n  const file = opt.file\n  let threw = true\n  let fd\n  try {\n    const stat = fs.statSync(file)\n    const readSize = opt.maxReadSize || 16 * 1024 * 1024\n    if (stat.size < readSize) {\n      p.end(fs.readFileSync(file))\n    } else {\n      let pos = 0\n      const buf = Buffer.allocUnsafe(readSize)\n      fd = fs.openSync(file, 'r')\n      while (pos < stat.size) {\n        const bytesRead = fs.readSync(fd, buf, 0, readSize, pos)\n        pos += bytesRead\n        p.write(buf.slice(0, bytesRead))\n      }\n      p.end()\n    }\n    threw = false\n  } finally {\n    if (threw && fd) {\n      try {\n        fs.closeSync(fd)\n      } catch (er) {}\n    }\n  }\n}\n\nconst listFile = (opt, cb) => {\n  const parse = new Parser(opt)\n  const readSize = opt.maxReadSize || 16 * 1024 * 1024\n\n  const file = opt.file\n  const p = new Promise((resolve, reject) => {\n    parse.on('error', reject)\n    parse.on('end', resolve)\n\n    fs.stat(file, (er, stat) => {\n      if (er) {\n        reject(er)\n      } else {\n        const stream = new fsm.ReadStream(file, {\n          readSize: readSize,\n          size: stat.size,\n        })\n        stream.on('error', reject)\n        stream.pipe(parse)\n      }\n    })\n  })\n  return cb ? p.then(cb, cb) : p\n}\n\nconst list = opt => new Parser(opt)\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}