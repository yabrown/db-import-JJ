{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar net_1 = __importDefault(require(\"net\"));\nvar tls_1 = __importDefault(require(\"tls\"));\nvar url_1 = __importDefault(require(\"url\"));\nvar assert_1 = __importDefault(require(\"assert\"));\nvar debug_1 = __importDefault(require(\"debug\"));\nvar agent_base_1 = require(\"agent-base\");\nvar parse_proxy_response_1 = __importDefault(require(\"./parse-proxy-response\"));\nvar debug = debug_1.default('https-proxy-agent:agent');\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n *\n * @api public\n */\nvar HttpsProxyAgent = /*#__PURE__*/function (_agent_base_1$Agent) {\n  _inherits(HttpsProxyAgent, _agent_base_1$Agent);\n  var _super = _createSuper(HttpsProxyAgent);\n  function HttpsProxyAgent(_opts) {\n    var _this;\n    _classCallCheck(this, HttpsProxyAgent);\n    var opts;\n    if (typeof _opts === 'string') {\n      opts = url_1.default.parse(_opts);\n    } else {\n      opts = _opts;\n    }\n    if (!opts) {\n      throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n    }\n    debug('creating new HttpsProxyAgent instance: %o', opts);\n    _this = _super.call(this, opts);\n    var proxy = Object.assign({}, opts);\n    // If `true`, then connect to the proxy server over TLS.\n    // Defaults to `false`.\n    _this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);\n    // Prefer `hostname` over `host`, and set the `port` if needed.\n    proxy.host = proxy.hostname || proxy.host;\n    if (typeof proxy.port === 'string') {\n      proxy.port = parseInt(proxy.port, 10);\n    }\n    if (!proxy.port && proxy.host) {\n      proxy.port = _this.secureProxy ? 443 : 80;\n    }\n    // ALPN is supported by Node.js >= v5.\n    // attempt to negotiate http/1.1 for proxy servers that support http/2\n    if (_this.secureProxy && !('ALPNProtocols' in proxy)) {\n      proxy.ALPNProtocols = ['http 1.1'];\n    }\n    if (proxy.host && proxy.path) {\n      // If both a `host` and `path` are specified then it's most likely\n      // the result of a `url.parse()` call... we need to remove the\n      // `path` portion so that `net.connect()` doesn't attempt to open\n      // that as a Unix socket file.\n      delete proxy.path;\n      delete proxy.pathname;\n    }\n    _this.proxy = proxy;\n    return _this;\n  }\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   *\n   * @api protected\n   */\n  _createClass(HttpsProxyAgent, [{\n    key: \"callback\",\n    value: function callback(req, opts) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var proxy, secureProxy, socket, headers, hostname, payload, host, port, secureEndpoint, _i, _Object$keys, name, proxyResponsePromise, _yield$proxyResponseP, statusCode, buffered, servername, fakeSocket;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              proxy = this.proxy, secureProxy = this.secureProxy; // Create a socket connection to the proxy server.\n              if (secureProxy) {\n                debug('Creating `tls.Socket`: %o', proxy);\n                socket = tls_1.default.connect(proxy);\n              } else {\n                debug('Creating `net.Socket`: %o', proxy);\n                socket = net_1.default.connect(proxy);\n              }\n              headers = Object.assign({}, proxy.headers);\n              hostname = \"\".concat(opts.host, \":\").concat(opts.port);\n              payload = \"CONNECT \".concat(hostname, \" HTTP/1.1\\r\\n\"); // Inject the `Proxy-Authorization` header if necessary.\n              if (proxy.auth) {\n                headers['Proxy-Authorization'] = \"Basic \".concat(Buffer.from(proxy.auth).toString('base64'));\n              }\n              // The `Host` header should only include the port\n              // number when it is not the default port.\n              host = opts.host, port = opts.port, secureEndpoint = opts.secureEndpoint;\n              if (!isDefaultPort(port, secureEndpoint)) {\n                host += \":\".concat(port);\n              }\n              headers.Host = host;\n              headers.Connection = 'close';\n              for (_i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {\n                name = _Object$keys[_i];\n                payload += \"\".concat(name, \": \").concat(headers[name], \"\\r\\n\");\n              }\n              proxyResponsePromise = parse_proxy_response_1.default(socket);\n              socket.write(\"\".concat(payload, \"\\r\\n\"));\n              _context.next = 15;\n              return proxyResponsePromise;\n            case 15:\n              _yield$proxyResponseP = _context.sent;\n              statusCode = _yield$proxyResponseP.statusCode;\n              buffered = _yield$proxyResponseP.buffered;\n              if (!(statusCode === 200)) {\n                _context.next = 25;\n                break;\n              }\n              req.once('socket', resume);\n              if (!opts.secureEndpoint) {\n                _context.next = 24;\n                break;\n              }\n              // The proxy is connecting to a TLS server, so upgrade\n              // this socket connection to a TLS connection.\n              debug('Upgrading socket connection to TLS');\n              servername = opts.servername || opts.host;\n              return _context.abrupt(\"return\", tls_1.default.connect(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), {\n                socket: socket,\n                servername: servername\n              })));\n            case 24:\n              return _context.abrupt(\"return\", socket);\n            case 25:\n              // Some other status code that's not 200... need to re-play the HTTP\n              // header \"data\" events onto the socket once the HTTP machinery is\n              // attached so that the node core `http` can parse and handle the\n              // error status code.\n              // Close the original socket, and a new \"fake\" socket is returned\n              // instead, so that the proxy doesn't get the HTTP request\n              // written to it (which may contain `Authorization` headers or other\n              // sensitive data).\n              //\n              // See: https://hackerone.com/reports/541502\n              socket.destroy();\n              fakeSocket = new net_1.default.Socket({\n                writable: false\n              });\n              fakeSocket.readable = true;\n              // Need to wait for the \"socket\" event to re-play the \"data\" events.\n              req.once('socket', function (s) {\n                debug('replaying proxy buffer for failed request');\n                assert_1.default(s.listenerCount('data') > 0);\n                // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n                // this point the HTTP module machinery has been hooked up for\n                // the user.\n                s.push(buffered);\n                s.push(null);\n              });\n              return _context.abrupt(\"return\", fakeSocket);\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n  return HttpsProxyAgent;\n}(agent_base_1.Agent);\nexports.default = HttpsProxyAgent;\nfunction resume(socket) {\n  socket.resume();\n}\nfunction isDefaultPort(port, secure) {\n  return Boolean(!secure && port === 80 || secure && port === 443);\n}\nfunction isHTTPS(protocol) {\n  return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\nfunction omit(obj) {\n  var ret = {};\n  var key;\n  for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n  return ret;\n}","map":{"version":3,"names":["net_1","__importDefault","require","tls_1","url_1","assert_1","debug_1","agent_base_1","parse_proxy_response_1","debug","default","HttpsProxyAgent","_agent_base_1$Agent","_inherits","_super","_createSuper","_opts","_this","_classCallCheck","opts","parse","Error","call","proxy","Object","assign","secureProxy","isHTTPS","protocol","host","hostname","port","parseInt","ALPNProtocols","path","pathname","_createClass","key","value","callback","req","socket","connect","headers","concat","payload","auth","Buffer","from","toString","secureEndpoint","isDefaultPort","Host","Connection","_i","_Object$keys","keys","length","name","proxyResponsePromise","write","_context","next","_yield$proxyResponseP","sent","statusCode","buffered","once","resume","servername","abrupt","omit","destroy","fakeSocket","Socket","writable","readable","s","listenerCount","push","stop","_callee","Agent","exports","secure","Boolean","test","obj","ret","_len","arguments","Array","_key","includes"],"sources":["../src/agent.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}