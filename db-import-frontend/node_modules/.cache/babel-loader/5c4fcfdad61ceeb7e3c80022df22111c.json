{"ast":null,"code":"'use strict';\n\nvar AdvanceStringIndex = require('es-abstract/2022/AdvanceStringIndex');\nvar CreateDataPropertyOrThrow = require('es-abstract/2022/CreateDataPropertyOrThrow');\nvar CreateMethodProperty = require('es-abstract/2022/CreateMethodProperty');\nvar GetMethod = require('es-abstract/2022/GetMethod');\nvar IsArray = require('es-abstract/2022/IsArray');\nvar IterableToList = require('es-abstract/2022/IterableToList');\nvar OrdinarySetPrototypeOf = require('es-abstract/2022/OrdinarySetPrototypeOf');\nvar Type = require('es-abstract/2022/Type');\nvar GetIntrinsic = require('get-intrinsic');\nvar getIteratorMethod = require('es-abstract/helpers/getIteratorMethod');\nvar hasPropertyDescriptors = require('has-property-descriptors')();\nvar $Error = GetIntrinsic('%Error%');\n\n// eslint-disable-next-line func-style\nfunction AggregateError(errors, message) {\n  var error = new $Error(message);\n  OrdinarySetPrototypeOf(error, proto); // eslint-disable-line no-use-before-define\n  delete error.constructor;\n  var errorsList = IterableToList(errors, getIteratorMethod({\n    AdvanceStringIndex: AdvanceStringIndex,\n    GetMethod: GetMethod,\n    IsArray: IsArray,\n    Type: Type\n  }, errors));\n  CreateDataPropertyOrThrow(error, 'errors', errorsList);\n  return error;\n}\nif (hasPropertyDescriptors) {\n  Object.defineProperty(AggregateError, 'prototype', {\n    writable: false\n  });\n}\nvar proto = AggregateError.prototype;\nif (!CreateMethodProperty(proto, 'constructor', AggregateError) || !CreateMethodProperty(proto, 'message', '') || !CreateMethodProperty(proto, 'name', 'AggregateError')) {\n  throw new $Error('unable to install AggregateError.prototype properties; please report this!');\n}\nOrdinarySetPrototypeOf(AggregateError.prototype, Error.prototype);\nmodule.exports = AggregateError;","map":{"version":3,"names":["AdvanceStringIndex","require","CreateDataPropertyOrThrow","CreateMethodProperty","GetMethod","IsArray","IterableToList","OrdinarySetPrototypeOf","Type","GetIntrinsic","getIteratorMethod","hasPropertyDescriptors","$Error","AggregateError","errors","message","error","proto","constructor","errorsList","Object","defineProperty","writable","prototype","Error","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/es-aggregate-error/implementation.js"],"sourcesContent":["'use strict';\n\nvar AdvanceStringIndex = require('es-abstract/2022/AdvanceStringIndex');\nvar CreateDataPropertyOrThrow = require('es-abstract/2022/CreateDataPropertyOrThrow');\nvar CreateMethodProperty = require('es-abstract/2022/CreateMethodProperty');\nvar GetMethod = require('es-abstract/2022/GetMethod');\nvar IsArray = require('es-abstract/2022/IsArray');\nvar IterableToList = require('es-abstract/2022/IterableToList');\nvar OrdinarySetPrototypeOf = require('es-abstract/2022/OrdinarySetPrototypeOf');\nvar Type = require('es-abstract/2022/Type');\nvar GetIntrinsic = require('get-intrinsic');\nvar getIteratorMethod = require('es-abstract/helpers/getIteratorMethod');\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar $Error = GetIntrinsic('%Error%');\n\n// eslint-disable-next-line func-style\nfunction AggregateError(errors, message) {\n\tvar error = new $Error(message);\n\tOrdinarySetPrototypeOf(error, proto); // eslint-disable-line no-use-before-define\n\tdelete error.constructor;\n\n\tvar errorsList = IterableToList(errors, getIteratorMethod({\n\t\tAdvanceStringIndex: AdvanceStringIndex,\n\t\tGetMethod: GetMethod,\n\t\tIsArray: IsArray,\n\t\tType: Type\n\t}, errors));\n\tCreateDataPropertyOrThrow(error, 'errors', errorsList);\n\n\treturn error;\n}\nif (hasPropertyDescriptors) {\n\tObject.defineProperty(AggregateError, 'prototype', { writable: false });\n}\nvar proto = AggregateError.prototype;\n\nif (\n\t!CreateMethodProperty(proto, 'constructor', AggregateError)\n\t|| !CreateMethodProperty(proto, 'message', '')\n\t|| !CreateMethodProperty(proto, 'name', 'AggregateError')\n) {\n\tthrow new $Error('unable to install AggregateError.prototype properties; please report this!');\n}\n\nOrdinarySetPrototypeOf(AggregateError.prototype, Error.prototype);\n\nmodule.exports = AggregateError;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,qCAAqC,CAAC;AACvE,IAAIC,yBAAyB,GAAGD,OAAO,CAAC,4CAA4C,CAAC;AACrF,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,uCAAuC,CAAC;AAC3E,IAAIG,SAAS,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AACrD,IAAII,OAAO,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;AACjD,IAAIK,cAAc,GAAGL,OAAO,CAAC,iCAAiC,CAAC;AAC/D,IAAIM,sBAAsB,GAAGN,OAAO,CAAC,yCAAyC,CAAC;AAC/E,IAAIO,IAAI,GAAGP,OAAO,CAAC,uBAAuB,CAAC;AAC3C,IAAIQ,YAAY,GAAGR,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIS,iBAAiB,GAAGT,OAAO,CAAC,uCAAuC,CAAC;AACxE,IAAIU,sBAAsB,GAAGV,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;AAElE,IAAIW,MAAM,GAAGH,YAAY,CAAC,SAAS,CAAC;;AAEpC;AACA,SAASI,cAAcA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACxC,IAAIC,KAAK,GAAG,IAAIJ,MAAM,CAACG,OAAO,CAAC;EAC/BR,sBAAsB,CAACS,KAAK,EAAEC,KAAK,CAAC,CAAC,CAAC;EACtC,OAAOD,KAAK,CAACE,WAAW;EAExB,IAAIC,UAAU,GAAGb,cAAc,CAACQ,MAAM,EAAEJ,iBAAiB,CAAC;IACzDV,kBAAkB,EAAEA,kBAAkB;IACtCI,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBG,IAAI,EAAEA;EACP,CAAC,EAAEM,MAAM,CAAC,CAAC;EACXZ,yBAAyB,CAACc,KAAK,EAAE,QAAQ,EAAEG,UAAU,CAAC;EAEtD,OAAOH,KAAK;AACb;AACA,IAAIL,sBAAsB,EAAE;EAC3BS,MAAM,CAACC,cAAc,CAACR,cAAc,EAAE,WAAW,EAAE;IAAES,QAAQ,EAAE;EAAM,CAAC,CAAC;AACxE;AACA,IAAIL,KAAK,GAAGJ,cAAc,CAACU,SAAS;AAEpC,IACC,CAACpB,oBAAoB,CAACc,KAAK,EAAE,aAAa,EAAEJ,cAAc,CAAC,IACxD,CAACV,oBAAoB,CAACc,KAAK,EAAE,SAAS,EAAE,EAAE,CAAC,IAC3C,CAACd,oBAAoB,CAACc,KAAK,EAAE,MAAM,EAAE,gBAAgB,CAAC,EACxD;EACD,MAAM,IAAIL,MAAM,CAAC,4EAA4E,CAAC;AAC/F;AAEAL,sBAAsB,CAACM,cAAc,CAACU,SAAS,EAAEC,KAAK,CAACD,SAAS,CAAC;AAEjEE,MAAM,CAACC,OAAO,GAAGb,cAAc"},"metadata":{},"sourceType":"script"}