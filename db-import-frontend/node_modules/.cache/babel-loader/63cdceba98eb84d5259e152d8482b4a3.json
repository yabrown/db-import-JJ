{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require('path'),\n  join = _require.join,\n  sep = _require.sep;\nvar getOptions = require('./common/get-options.js');\nvar mkdir = require('./mkdir/index.js');\nvar mkdtemp = require('./mkdtemp.js');\nvar rm = require('./rm/index.js');\n\n// create a temp directory, ensure its permissions match its parent, then call\n// the supplied function passing it the path to the directory. clean up after\n// the function finishes, whether it throws or not\nvar withTempDir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(root, fn, opts) {\n    var options, target, err, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = getOptions(opts, {\n            copy: ['tmpPrefix']\n          }); // create the directory, and fix its ownership\n          _context.next = 3;\n          return mkdir(root, {\n            recursive: true,\n            owner: 'inherit'\n          });\n        case 3:\n          _context.next = 5;\n          return mkdtemp(join(\"\".concat(root).concat(sep), options.tmpPrefix || ''), {\n            owner: 'inherit'\n          });\n        case 5:\n          target = _context.sent;\n          _context.prev = 6;\n          _context.next = 9;\n          return fn(target);\n        case 9:\n          result = _context.sent;\n          _context.next = 15;\n          break;\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](6);\n          err = _context.t0;\n        case 15:\n          _context.prev = 15;\n          _context.next = 18;\n          return rm(target, {\n            force: true,\n            recursive: true\n          });\n        case 18:\n          _context.next = 22;\n          break;\n        case 20:\n          _context.prev = 20;\n          _context.t1 = _context[\"catch\"](15);\n        case 22:\n          if (!err) {\n            _context.next = 24;\n            break;\n          }\n          throw err;\n        case 24:\n          return _context.abrupt(\"return\", result);\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[6, 12], [15, 20]]);\n  }));\n  return function withTempDir(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = withTempDir;","map":{"version":3,"names":["_require","require","join","sep","getOptions","mkdir","mkdtemp","rm","withTempDir","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","root","fn","opts","options","target","err","result","wrap","_callee$","_context","prev","next","copy","recursive","owner","concat","tmpPrefix","sent","t0","force","t1","abrupt","stop","_x","_x2","_x3","apply","arguments","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/@npmcli/fs/lib/with-temp-dir.js"],"sourcesContent":["const { join, sep } = require('path')\n\nconst getOptions = require('./common/get-options.js')\nconst mkdir = require('./mkdir/index.js')\nconst mkdtemp = require('./mkdtemp.js')\nconst rm = require('./rm/index.js')\n\n// create a temp directory, ensure its permissions match its parent, then call\n// the supplied function passing it the path to the directory. clean up after\n// the function finishes, whether it throws or not\nconst withTempDir = async (root, fn, opts) => {\n  const options = getOptions(opts, {\n    copy: ['tmpPrefix'],\n  })\n  // create the directory, and fix its ownership\n  await mkdir(root, { recursive: true, owner: 'inherit' })\n\n  const target = await mkdtemp(join(`${root}${sep}`, options.tmpPrefix || ''), { owner: 'inherit' })\n  let err\n  let result\n\n  try {\n    result = await fn(target)\n  } catch (_err) {\n    err = _err\n  }\n\n  try {\n    await rm(target, { force: true, recursive: true })\n  } catch (err) {}\n\n  if (err) {\n    throw err\n  }\n\n  return result\n}\n\nmodule.exports = withTempDir\n"],"mappings":";;AAAA,IAAAA,QAAA,GAAsBC,OAAO,CAAC,MAAM,CAAC;EAA7BC,IAAI,GAAAF,QAAA,CAAJE,IAAI;EAAEC,GAAG,GAAAH,QAAA,CAAHG,GAAG;AAEjB,IAAMC,UAAU,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AACrD,IAAMI,KAAK,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;AACzC,IAAMK,OAAO,GAAGL,OAAO,CAAC,cAAc,CAAC;AACvC,IAAMM,EAAE,GAAGN,OAAO,CAAC,eAAe,CAAC;;AAEnC;AACA;AACA;AACA,IAAMO,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,IAAI,EAAEC,EAAE,EAAEC,IAAI;IAAA,IAAAC,OAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,MAAA;IAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACjCR,OAAO,GAAGb,UAAU,CAACY,IAAI,EAAE;YAC/BU,IAAI,EAAE,CAAC,WAAW;UACpB,CAAC,CAAC,EACF;UAAAH,QAAA,CAAAE,IAAA;UAAA,OACMpB,KAAK,CAACS,IAAI,EAAE;YAAEa,SAAS,EAAE,IAAI;YAAEC,KAAK,EAAE;UAAU,CAAC,CAAC;QAAA;UAAAL,QAAA,CAAAE,IAAA;UAAA,OAEnCnB,OAAO,CAACJ,IAAI,IAAA2B,MAAA,CAAIf,IAAI,EAAAe,MAAA,CAAG1B,GAAG,GAAIc,OAAO,CAACa,SAAS,IAAI,EAAE,CAAC,EAAE;YAAEF,KAAK,EAAE;UAAU,CAAC,CAAC;QAAA;UAA5FV,MAAM,GAAAK,QAAA,CAAAQ,IAAA;UAAAR,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAKKV,EAAE,CAACG,MAAM,CAAC;QAAA;UAAzBE,MAAM,GAAAG,QAAA,CAAAQ,IAAA;UAAAR,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;UAENJ,GAAG,GAAAI,QAAA,CAAAS,EAAO;QAAA;UAAAT,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAIJlB,EAAE,CAACW,MAAM,EAAE;YAAEe,KAAK,EAAE,IAAI;YAAEN,SAAS,EAAE;UAAK,CAAC,CAAC;QAAA;UAAAJ,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAW,EAAA,GAAAX,QAAA;QAAA;UAAA,KAGhDJ,GAAG;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACCN,GAAG;QAAA;UAAA,OAAAI,QAAA,CAAAY,MAAA,WAGJf,MAAM;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAa,IAAA;MAAA;IAAA,GAAAvB,OAAA;EAAA,CACd;EAAA,gBA1BKL,WAAWA,CAAA6B,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA9B,IAAA,CAAA+B,KAAA,OAAAC,SAAA;EAAA;AAAA,GA0BhB;AAEDC,MAAM,CAACC,OAAO,GAAGnC,WAAW"},"metadata":{},"sourceType":"script"}