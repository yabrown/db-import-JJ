{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _toConsumableArray = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nvar indentString = require('indent-string');\nvar cleanStack = require('clean-stack');\nvar cleanInternalStack = function cleanInternalStack(stack) {\n  return stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n};\nvar AggregateError = /*#__PURE__*/function (_Error, _Symbol$iterator) {\n  _inherits(AggregateError, _Error);\n  var _super = _createSuper(AggregateError);\n  function AggregateError(errors) {\n    var _this;\n    _classCallCheck(this, AggregateError);\n    if (!Array.isArray(errors)) {\n      throw new TypeError(\"Expected input to be an Array, got \".concat(typeof errors));\n    }\n    errors = _toConsumableArray(errors).map(function (error) {\n      if (error instanceof Error) {\n        return error;\n      }\n      if (error !== null && typeof error === 'object') {\n        // Handle plain error objects with message property and/or possibly other metadata\n        return Object.assign(new Error(error.message), error);\n      }\n      return new Error(error);\n    });\n    var message = errors.map(function (error) {\n      // The `stack` property is not standardized, so we can't assume it exists\n      return typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n    }).join('\\n');\n    message = '\\n' + indentString(message, 4);\n    _this = _super.call(this, message);\n    _this.name = 'AggregateError';\n    Object.defineProperty(_assertThisInitialized(_this), '_errors', {\n      value: errors\n    });\n    return _this;\n  }\n  _createClass(AggregateError, [{\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      var _iterator, _step, error;\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _iterator = _createForOfIteratorHelper(this._errors);\n            _context.prev = 1;\n            _iterator.s();\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 9;\n              break;\n            }\n            error = _step.value;\n            _context.next = 7;\n            return error;\n          case 7:\n            _context.next = 3;\n            break;\n          case 9:\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            _iterator.e(_context.t0);\n          case 14:\n            _context.prev = 14;\n            _iterator.f();\n            return _context.finish(14);\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, value, this, [[1, 11, 14, 17]]);\n    })\n  }]);\n  return AggregateError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), Symbol.iterator);\nmodule.exports = AggregateError;","map":{"version":3,"names":["_regeneratorRuntime","require","default","_createForOfIteratorHelper","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","_wrapNativeSuper","indentString","cleanStack","cleanInternalStack","stack","replace","AggregateError","_Error","_Symbol$iterator","_super","errors","_this","Array","isArray","TypeError","concat","map","error","Error","Object","assign","message","String","join","call","name","defineProperty","value","key","mark","_iterator","_step","wrap","value$","_context","prev","next","_errors","s","n","done","t0","e","f","finish","stop","Symbol","iterator","module","exports"],"sources":["/Users/aribraun/Desktop/db-import/node_modules/aggregate-error/index.js"],"sourcesContent":["'use strict';\nconst indentString = require('indent-string');\nconst cleanStack = require('clean-stack');\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nclass AggregateError extends Error {\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = [...errors].map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.name = 'AggregateError';\n\n\t\tObject.defineProperty(this, '_errors', {value: errors});\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const error of this._errors) {\n\t\t\tyield error;\n\t\t}\n\t}\n}\n\nmodule.exports = AggregateError;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}