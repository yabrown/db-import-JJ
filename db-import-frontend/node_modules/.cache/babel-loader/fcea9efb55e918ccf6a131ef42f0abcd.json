{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{Sequelize,Model,DataTypes}from'sequelize';import'sqlite3';// connects to DB, creates test model, attempts to sync it. \n// Prints whether or not succeeded\nfunction createTableOther(){return _createTableOther.apply(this,arguments);}function _createTableOther(){_createTableOther=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var sequelize,newTable;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:/*const sequelize = new Sequelize('TempTables', 'abraun', 'j43H^zcf$4d1AS8&', {\n        host: '174.143.110.218',\n        dialect: 'mssql', \n        dialectModule: 'tedious', \n        encrypt: true,\n        dialectOptions: {\n            requestTimeout: 5000 // timeout = 30 seconds\n        },\n        pool: {\n            max: 2,\n            min: 0,\n            idle: 10000\n        }\n    });*/sequelize=new Sequelize({dialect:'sqlite',storage:'./reg.sqlite'});_context.prev=1;_context.next=4;return sequelize.authenticate();case 4:console.log(\"connected successfully\");_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(\"didn't connect successfully: \",_context.t0);case 10://AriTestTable as a model\nnewTable=sequelize.define('AriTestTable',{firstField:{type:DataTypes.INTEGER,primaryKey:true},secondField:{type:DataTypes.STRING}});// Adds the model as table to the database\n_context.prev=11;_context.next=14;return newTable.sync({force:true});case 14:console.log(\"test table synced successfully\");_context.next=20;break;case 17:_context.prev=17;_context.t1=_context[\"catch\"](11);console.error(\"Problem syncing test table: \",_context.t1);case 20:case\"end\":return _context.stop();}},_callee,null,[[1,7],[11,17]]);}));return _createTableOther.apply(this,arguments);}function createTable(){var Connection=require('tedious').Connection;var config={server:\"174.143.110.218\",// or \"localhost\"\noptions:{},authentication:{type:\"default\",options:{userName:\"abraun\",password:\"j43H^zcf$4d1AS8\"}}};var connection=new Connection(config);// Setup event handler when the connection is established. \nconnection.on('connect',function(err){if(err){console.log('Error: ',err);}// If no error, then good to go...\n});// Initialize the connection.\nconnection.connect();}function basicGet(){}export{createTable,basicGet};","map":{"version":3,"names":["Sequelize","Model","DataTypes","createTableOther","_createTableOther","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sequelize","newTable","wrap","_callee$","_context","prev","next","dialect","storage","authenticate","console","log","t0","define","firstField","type","INTEGER","primaryKey","secondField","STRING","sync","force","t1","error","stop","createTable","Connection","require","config","server","options","authentication","userName","password","connection","on","err","connect","basicGet"],"sources":["/Users/aribraun/Desktop/db-import/src/backend.js"],"sourcesContent":["\nimport { Sequelize, Model, DataTypes } from 'sequelize';\nimport 'sqlite3';\n\n// connects to DB, creates test model, attempts to sync it. \n// Prints whether or not succeeded\nasync function createTableOther(){\n    /*const sequelize = new Sequelize('TempTables', 'abraun', 'j43H^zcf$4d1AS8&', {\n        host: '174.143.110.218',\n        dialect: 'mssql', \n        dialectModule: 'tedious', \n        encrypt: true,\n        dialectOptions: {\n            requestTimeout: 5000 // timeout = 30 seconds\n        },\n        pool: {\n            max: 2,\n            min: 0,\n            idle: 10000\n        }\n    });*/\n    const sequelize = new Sequelize({dialect: 'sqlite', storage: './reg.sqlite'});\n\n    try{\n        await sequelize.authenticate();\n        console.log(\"connected successfully\");\n    }catch(error){\n        console.log(\"didn't connect successfully: \", error)\n    }\n\n    //AriTestTable as a model\n    const newTable = sequelize.define('AriTestTable', {\n        firstField:{\n            type: DataTypes.INTEGER,\n            primaryKey: true,\n        },\n        secondField:{\n            type: DataTypes.STRING,\n        }\n    });\n\n    // Adds the model as table to the database\n    try {\n        await newTable.sync({force: true});\n        console.log(\"test table synced successfully\")\n    }catch(error){\n        console.error(\"Problem syncing test table: \", error);\n    }\n}\n\nfunction createTable(){\n    var Connection = require('tedious').Connection;\n    \n    var config = {\n        server: \"174.143.110.218\", // or \"localhost\"\n        options: {},\n        authentication: {\n          type: \"default\",\n          options: {  \n            userName: \"abraun\",\n            password: \"j43H^zcf$4d1AS8\",\n          }\n        }\n    };\n\n    var connection = new Connection(config);\n\n    // Setup event handler when the connection is established. \n    connection.on('connect', function(err) {\n    if(err) {\n        console.log('Error: ', err)\n    }\n    // If no error, then good to go...\n    \n    });\n\n    // Initialize the connection.\n    connection.connect();\n}\n\nfunction basicGet(){\n    \n}\n\n\nexport {\n    createTable, \n    basicGet\n};\n"],"mappings":"8PACA,OAASA,SAAS,CAAEC,KAAK,CAAEC,SAAS,KAAQ,WAAW,CACvD,MAAO,SAAS,CAEhB;AACA;AAAA,QACe,CAAAC,gBAAgBA,CAAA,SAAAC,iBAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,kBAAA,EAAAA,iBAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA/B,SAAAC,QAAA,MAAAC,SAAA,CAAAC,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACUN,SAAS,CAAG,GAAI,CAAAX,SAAS,CAAC,CAACkB,OAAO,CAAE,QAAQ,CAAEC,OAAO,CAAE,cAAc,CAAC,CAAC,CAAAJ,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAGnE,CAAAN,SAAS,CAACS,YAAY,CAAC,CAAC,QAC9BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAACP,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAQ,EAAA,CAAAR,QAAA,aAEtCM,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAAP,QAAA,CAAAQ,EAAO,CAAC,SAGvD;AACMX,QAAQ,CAAGD,SAAS,CAACa,MAAM,CAAC,cAAc,CAAE,CAC9CC,UAAU,CAAC,CACPC,IAAI,CAAExB,SAAS,CAACyB,OAAO,CACvBC,UAAU,CAAE,IAChB,CAAC,CACDC,WAAW,CAAC,CACRH,IAAI,CAAExB,SAAS,CAAC4B,MACpB,CACJ,CAAC,CAAC,CAEF;AAAAf,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAE,IAAA,UAEU,CAAAL,QAAQ,CAACmB,IAAI,CAAC,CAACC,KAAK,CAAE,IAAI,CAAC,CAAC,SAClCX,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAAAP,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAkB,EAAA,CAAAlB,QAAA,cAE7CM,OAAO,CAACa,KAAK,CAAC,8BAA8B,CAAAnB,QAAA,CAAAkB,EAAO,CAAC,CAAC,yBAAAlB,QAAA,CAAAoB,IAAA,MAAAzB,OAAA,wBAE5D,UAAAN,iBAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,QAAS,CAAA8B,WAAWA,CAAA,CAAE,CAClB,GAAI,CAAAC,UAAU,CAAGC,OAAO,CAAC,SAAS,CAAC,CAACD,UAAU,CAE9C,GAAI,CAAAE,MAAM,CAAG,CACTC,MAAM,CAAE,iBAAiB,CAAE;AAC3BC,OAAO,CAAE,CAAC,CAAC,CACXC,cAAc,CAAE,CACdhB,IAAI,CAAE,SAAS,CACfe,OAAO,CAAE,CACPE,QAAQ,CAAE,QAAQ,CAClBC,QAAQ,CAAE,iBACZ,CACF,CACJ,CAAC,CAED,GAAI,CAAAC,UAAU,CAAG,GAAI,CAAAR,UAAU,CAACE,MAAM,CAAC,CAEvC;AACAM,UAAU,CAACC,EAAE,CAAC,SAAS,CAAE,SAASC,GAAG,CAAE,CACvC,GAAGA,GAAG,CAAE,CACJ1B,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEyB,GAAG,CAAC,CAC/B,CACA;AAEA,CAAC,CAAC,CAEF;AACAF,UAAU,CAACG,OAAO,CAAC,CAAC,CACxB,CAEA,QAAS,CAAAC,QAAQA,CAAA,CAAE,CAEnB,CAGA,OACIb,WAAW,CACXa,QAAQ"},"metadata":{},"sourceType":"module"}