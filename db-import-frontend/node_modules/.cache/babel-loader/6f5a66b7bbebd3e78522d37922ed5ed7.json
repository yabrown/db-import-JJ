{"ast":null,"code":"/*! @azure/msal-common v13.0.0 2023-05-01 */\n'use strict';\n\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { PerformanceClient } from './PerformanceClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar StubPerformanceMeasurement = /** @class */function () {\n  function StubPerformanceMeasurement() {}\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n  StubPerformanceMeasurement.prototype.startMeasurement = function () {};\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n  StubPerformanceMeasurement.prototype.endMeasurement = function () {};\n  StubPerformanceMeasurement.prototype.flushMeasurement = function () {\n    return null;\n  };\n  return StubPerformanceMeasurement;\n}();\nvar StubPerformanceClient = /** @class */function (_super) {\n  __extends(StubPerformanceClient, _super);\n  function StubPerformanceClient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StubPerformanceClient.prototype.generateId = function () {\n    return \"callback-id\";\n  };\n  StubPerformanceClient.prototype.startPerformanceMeasuremeant = function () {\n    return new StubPerformanceMeasurement();\n  };\n  StubPerformanceClient.prototype.startPerformanceMeasurement = function () {\n    return new StubPerformanceMeasurement();\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  StubPerformanceClient.prototype.calculateQueuedTime = function (preQueueTime, currentTime) {\n    return 0;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  StubPerformanceClient.prototype.addQueueMeasurement = function (eventName, correlationId, queueTime) {\n    return;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  StubPerformanceClient.prototype.setPreQueueTime = function (eventName, correlationId) {\n    return;\n  };\n  return StubPerformanceClient;\n}(PerformanceClient);\nexport { StubPerformanceClient, StubPerformanceMeasurement };","map":{"version":3,"names":["StubPerformanceMeasurement","prototype","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","_super","__extends","generateId","startPerformanceMeasuremeant","startPerformanceMeasurement","calculateQueuedTime","preQueueTime","currentTime","addQueueMeasurement","eventName","correlationId","queueTime","setPreQueueTime","PerformanceClient"],"sources":["../../../src/telemetry/performance/StubPerformanceClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceClient } from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceClient } from \"./PerformanceClient\";\nimport { PerformanceEvents } from \"./PerformanceEvent\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    startMeasurement(): void { }\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    endMeasurement(): void { }\n    flushMeasurement(): number | null {\n        return null;\n    }\n    \n}\n\nexport class StubPerformanceClient extends PerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n    \n    startPerformanceMeasuremeant(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n\n    startPerformanceMeasurement(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    calculateQueuedTime(preQueueTime: number, currentTime: number): number {\n        return 0;\n    }\n\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    addQueueMeasurement(eventName: PerformanceEvents, correlationId: string, queueTime: number): void {\n        return;\n    }\n\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    setPreQueueTime(eventName: PerformanceEvents, correlationId?: string | undefined): void {\n        return;\n    }\n\n}\n"],"mappings":";;;;;;AAAA;;;AAGG;AAOH,IAAAA,0BAAA;EAAA,SAAAA,2BAAA,G;;EAEIA,0BAAgB,CAAAC,SAAA,CAAAC,gBAAA,GAAhB,cAA4B;;EAE5BF,0BAAc,CAAAC,SAAA,CAAAE,cAAA,GAAd,cAA0B;EAC1BH,0BAAA,CAAAC,SAAA,CAAAG,gBAAgB,GAAhB;IACI,OAAO,IAAI;GACd;EAEL,OAACJ,0BAAA;AAAD,CAAC;AAED,IAAAK,qBAAA,0BAAAC,MAAA;EAA2CC,SAAiB,CAAAF,qBAAA,EAAAC,MAAA;EAA5D,SAAAD,sBAAA;;;EACIA,qBAAA,CAAAJ,SAAA,CAAAO,UAAU,GAAV;IACI,OAAO,aAAa;GACvB;EAEDH,qBAAA,CAAAJ,SAAA,CAAAQ,4BAA4B,GAA5B;IACI,OAAO,IAAIT,0BAA0B,EAAE;GAC1C;EAEDK,qBAAA,CAAAJ,SAAA,CAAAS,2BAA2B,GAA3B;IACI,OAAO,IAAIV,0BAA0B,EAAE;GAC1C;;EAGDK,qBAAA,CAAAJ,SAAA,CAAAU,mBAAmB,GAAnB,UAAoBC,YAAoB,EAAEC,WAAmB;IACzD,OAAO,CAAC;GACX;;EAGDR,qBAAA,CAAAJ,SAAA,CAAAa,mBAAmB,GAAnB,UAAoBC,SAA4B,EAAEC,aAAqB,EAAEC,SAAiB;IACtF;GACH;;EAGDZ,qBAAA,CAAAJ,SAAA,CAAAiB,eAAe,GAAf,UAAgBH,SAA4B,EAAEC,aAAkC;IAC5E;GACH;EAEL,OAACX,qBAAA;AAAD,CA5BA,CAA2Cc,iBAAiB,CA4B3D"},"metadata":{},"sourceType":"module"}