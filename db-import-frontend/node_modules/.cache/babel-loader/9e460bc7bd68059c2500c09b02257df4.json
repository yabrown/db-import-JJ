{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar encoder;\n/**\n * Returns a cached TextEncoder.\n * @internal\n */\nfunction getTextEncoder() {\n  if (encoder) {\n    return encoder;\n  }\n  if (typeof TextEncoder === \"undefined\") {\n    throw new Error(\"Your browser environment is missing \\\"TextEncoder\\\".\");\n  }\n  encoder = new TextEncoder();\n  return encoder;\n}\n/**\n * Converts a utf8 string into a byte array.\n * @param content - The utf8 string to convert.\n * @internal\n */\nexport function utf8ToBytes(content) {\n  return getTextEncoder().encode(content);\n}","map":{"version":3,"names":["encoder","getTextEncoder","TextEncoder","Error","utf8ToBytes","content","encode"],"sources":["../../src/utf8.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// stubs for browser TextEncoder\ninterface TextEncoder {\n  encode(input?: string): Uint8Array;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\ndeclare const TextEncoder: {\n  prototype: TextEncoder;\n  new (): TextEncoder;\n};\n\nlet encoder: TextEncoder | undefined;\n\n/**\n * Returns a cached TextEncoder.\n * @internal\n */\nfunction getTextEncoder(): TextEncoder {\n  if (encoder) {\n    return encoder;\n  }\n\n  if (typeof TextEncoder === \"undefined\") {\n    throw new Error(`Your browser environment is missing \"TextEncoder\".`);\n  }\n\n  encoder = new TextEncoder();\n  return encoder;\n}\n\n/**\n * Converts a utf8 string into a byte array.\n * @param content - The utf8 string to convert.\n * @internal\n */\nexport function utf8ToBytes(content: string): Uint8Array {\n  return getTextEncoder().encode(content);\n}\n"],"mappings":"AAAA;AACA;AAaA,IAAIA,OAAgC;AAEpC;;;;AAIA,SAASC,cAAcA,CAAA;EACrB,IAAID,OAAO,EAAE;IACX,OAAOA,OAAO;;EAGhB,IAAI,OAAOE,WAAW,KAAK,WAAW,EAAE;IACtC,MAAM,IAAIC,KAAK,uDAAqD,CAAC;;EAGvEH,OAAO,GAAG,IAAIE,WAAW,EAAE;EAC3B,OAAOF,OAAO;AAChB;AAEA;;;;;AAKA,OAAM,SAAUI,WAAWA,CAACC,OAAe;EACzC,OAAOJ,cAAc,EAAE,CAACK,MAAM,CAACD,OAAO,CAAC;AACzC"},"metadata":{},"sourceType":"module"}