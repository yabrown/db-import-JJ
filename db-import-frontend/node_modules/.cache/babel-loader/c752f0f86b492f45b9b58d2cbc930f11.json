{"ast":null,"code":"import _classCallCheck from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { credentialLogger, formatError } from \"../util/logging\";\nvar BrowserNotSupportedError = new Error(\"AzurePowerShellCredential is not supported in the browser.\");\nvar logger = credentialLogger(\"AzurePowerShellCredential\");\n/**\n * This credential will use the currently-logged-in user's login information via the Azure Power Shell command line tool.\n */\nexport var AzurePowerShellCredential = /*#__PURE__*/function () {\n  /**\n   * Only available in Node.js\n   */\n  function AzurePowerShellCredential() {\n    _classCallCheck(this, AzurePowerShellCredential);\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n  _createClass(AzurePowerShellCredential, [{\n    key: \"getToken\",\n    value: function getToken() {\n      logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n      throw BrowserNotSupportedError;\n    }\n  }]);\n  return AzurePowerShellCredential;\n}();","map":{"version":3,"names":["credentialLogger","formatError","BrowserNotSupportedError","Error","logger","AzurePowerShellCredential","_classCallCheck","info","_createClass","key","value","getToken"],"sources":["../../../src/credentials/azurePowerShellCredential.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken, TokenCredential } from \"@azure/core-auth\";\n\nimport { credentialLogger, formatError } from \"../util/logging\";\n\nconst BrowserNotSupportedError = new Error(\n  \"AzurePowerShellCredential is not supported in the browser.\"\n);\nconst logger = credentialLogger(\"AzurePowerShellCredential\");\n\n/**\n * This credential will use the currently-logged-in user's login information via the Azure Power Shell command line tool.\n */\nexport class AzurePowerShellCredential implements TokenCredential {\n  /**\n   * Only available in Node.js\n   */\n  constructor() {\n    logger.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n\n  getToken(): Promise<AccessToken | null> {\n    logger.getToken.info(formatError(\"\", BrowserNotSupportedError));\n    throw BrowserNotSupportedError;\n  }\n}\n"],"mappings":";;AAAA;AACA;AAIA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,iBAAiB;AAE/D,IAAMC,wBAAwB,GAAG,IAAIC,KAAK,CACxC,4DAA4D,CAC7D;AACD,IAAMC,MAAM,GAAGJ,gBAAgB,CAAC,2BAA2B,CAAC;AAE5D;;;AAGA,WAAaK,yBAAyB;EACpC;;;EAGA,SAAAA,0BAAA;IAAAC,eAAA,OAAAD,yBAAA;IACED,MAAM,CAACG,IAAI,CAACN,WAAW,CAAC,EAAE,EAAEC,wBAAwB,CAAC,CAAC;IACtD,MAAMA,wBAAwB;EAChC;EAACM,YAAA,CAAAH,yBAAA;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAC,SAAA,EAAQ;MACNP,MAAM,CAACO,QAAQ,CAACJ,IAAI,CAACN,WAAW,CAAC,EAAE,EAAEC,wBAAwB,CAAC,CAAC;MAC/D,MAAMA,wBAAwB;IAChC;EAAC;EAAA,OAAAG,yBAAA;AAAA"},"metadata":{},"sourceType":"module"}