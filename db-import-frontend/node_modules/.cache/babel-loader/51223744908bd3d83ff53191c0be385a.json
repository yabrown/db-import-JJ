{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aribraun/Desktop/db-import/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\nvar _allHeaders = require(\"./all-headers\");\nvar _Symbol$iterator;\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n_Symbol$iterator = Symbol.iterator;\n\n/*\n  s2.2.6.6\n */\nvar SqlBatchPayload = /*#__PURE__*/function (_Symbol$iterator2) {\n  function SqlBatchPayload(sqlText, txnDescriptor, options) {\n    _classCallCheck(this, SqlBatchPayload);\n    this.sqlText = void 0;\n    this.txnDescriptor = void 0;\n    this.options = void 0;\n    this.sqlText = sqlText;\n    this.txnDescriptor = txnDescriptor;\n    this.options = options;\n  }\n  _createClass(SqlBatchPayload, [{\n    key: _Symbol$iterator2,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      var buffer, outstandingRequestCount;\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(this.options.tdsVersion >= '7_2')) {\n              _context.next = 6;\n              break;\n            }\n            buffer = new _writableTrackingBuffer.default(18, 'ucs2');\n            outstandingRequestCount = 1;\n            (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\n            _context.next = 6;\n            return buffer.data;\n          case 6:\n            _context.next = 8;\n            return Buffer.from(this.sqlText, 'ucs2');\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, value, this);\n    })\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + ('SQL Batch - ' + this.sqlText);\n    }\n  }]);\n  return SqlBatchPayload;\n}(_Symbol$iterator);\nvar _default = SqlBatchPayload;\nexports.default = _default;\nmodule.exports = SqlBatchPayload;","map":{"version":3,"names":["_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","Symbol","iterator","SqlBatchPayload","_Symbol$iterator2","sqlText","txnDescriptor","options","_classCallCheck","_createClass","key","value","_regeneratorRuntime","mark","buffer","outstandingRequestCount","wrap","value$","_context","prev","next","tdsVersion","default","writeToTrackingBuffer","data","Buffer","from","stop","toString","indent","arguments","length","undefined","_Symbol$iterator","module","exports"],"sources":["../src/sqlbatch-payload.ts"],"sourcesContent":["import WritableTrackingBuffer from './tracking-buffer/writable-tracking-buffer';\nimport { writeToTrackingBuffer } from './all-headers';\n\n/*\n  s2.2.6.6\n */\nclass SqlBatchPayload implements Iterable<Buffer> {\n  sqlText: string;\n  txnDescriptor: Buffer;\n  options: { tdsVersion: string };\n\n  constructor(sqlText: string, txnDescriptor: Buffer, options: { tdsVersion: string }) {\n    this.sqlText = sqlText;\n    this.txnDescriptor = txnDescriptor;\n    this.options = options;\n  }\n\n  *[Symbol.iterator]() {\n    if (this.options.tdsVersion >= '7_2') {\n      const buffer = new WritableTrackingBuffer(18, 'ucs2');\n      const outstandingRequestCount = 1;\n\n      writeToTrackingBuffer(buffer, this.txnDescriptor, outstandingRequestCount);\n\n      yield buffer.data;\n    }\n\n    yield Buffer.from(this.sqlText, 'ucs2');\n  }\n\n  toString(indent = '') {\n    return indent + ('SQL Batch - ' + this.sqlText);\n  }\n}\n\nexport default SqlBatchPayload;\nmodule.exports = SqlBatchPayload;\n"],"mappings":";;;;;;;;;AAAA,IAAAA,uBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;;;;;;;mBAgBIE,MAAM,CAACC,Q;;AAdX;AACA;AACA;AAFA,IAGMC,eAAN,0BAAAC,iBAAA;EAKE,SAAAD,gBAAYE,OAAD,EAAkBC,aAAlB,EAAyCC,OAAzC,EAA0E;IAAAC,eAAA,OAAAL,eAAA;IAAA,KAJrFE,OAIqF;IAAA,KAHrFC,aAGqF;IAAA,KAFrFC,OAEqF;IACnF,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;EAAAE,YAAA,CAAAN,eAAA;IAAAO,GAAA,EAAAN,iBAAA;IAAAO,KAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAF,MAAA;MAAA,IAAAG,MAAA,EAAAC,uBAAA;MAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,OAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,MACM,KAAKb,OAAL,CAAac,UAAb,IAA2B,KAA/B;cAAAH,QAAA,CAAAE,IAAA;cAAA;YAAA;YACQN,MAAM,GAAG,IAAIjB,uBAAA,CAAAyB,OAAJ,CAA2B,EAA3B,EAA+B,MAA/B,CAAf;YACMP,uBAAuB,GAAG,CAAhC;YAEA,IAAAf,WAAA,CAAAuB,qBAAA,EAAsBT,MAAtB,EAA8B,KAAKR,aAAnC,EAAkDS,uBAAlD;YAAAG,QAAA,CAAAE,IAAA;YAEA,OAAMN,MAAM,CAACU,IAAb;UAAA;YAAAN,QAAA,CAAAE,IAAA;YAGF,OAAMK,MAAM,CAACC,IAAP,CAAY,KAAKrB,OAAjB,EAA0B,MAA1B,CAAN;UAAA;UAAA;YAAA,OAAAa,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAhB,KAAA;IAAA,CACD;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAiB,SAAA,EAAsB;MAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAV;MACN,OAAOD,MAAM,IAAI,iBAAiB,KAAKxB,OAA1B,CAAb;IACD;EAAA;EAAA,OAAAF,eAAA;AAAA,EAfD8B,gBAAA;eAkBa9B,e;;AACf+B,MAAM,CAACC,OAAP,GAAiBhC,eAAjB"},"metadata":{},"sourceType":"script"}